{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.0.0.0",
        "fileVersion": "4.0.1-1.22181.2 (487283bc)",
        "semanticVersion": "4.0.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/ProgramExitCodes.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 15,
                  "endLine": 5,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private method 'OnExecute'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 3,
                  "endLine": 216,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<string>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 42,
                  "endLine": 81,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<string>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 45,
                  "endLine": 95,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/TypesParser.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 35,
                  "endLine": 11,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/TypesParser.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 4,
                  "endLine": 15,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/TypesParser.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 27,
                  "endLine": 15,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/TypesParser.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 5,
                  "endLine": 17,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/TypesParser.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 6,
                  "endLine": 19,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/TypesParser.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/TypesParser.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 5,
                  "endLine": 41,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/TypesParser.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 6,
                  "endLine": 44,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/TypesParser.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 26,
                  "endLine": 44,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/TypesParser.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 6,
                  "endLine": 46,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 37 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 15,
                  "endLine": 109,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 4,
                  "endLine": 114,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 5,
                  "endLine": 121,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 6,
                  "endLine": 123,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 130,
                  "startColumn": 6,
                  "endLine": 130,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 5,
                  "endLine": 140,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 6,
                  "endLine": 142,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 7,
                  "endLine": 145,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 4,
                  "endLine": 151,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 5,
                  "endLine": 163,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 6,
                  "endLine": 167,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 175,
                  "startColumn": 5,
                  "endLine": 175,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 175,
                  "startColumn": 29,
                  "endLine": 175,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 177,
                  "startColumn": 6,
                  "endLine": 177,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 5,
                  "endLine": 185,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 188,
                  "startColumn": 6,
                  "endLine": 188,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 6,
                  "endLine": 193,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 5,
                  "endLine": 200,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 204,
                  "startColumn": 5,
                  "endLine": 204,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 206,
                  "startColumn": 6,
                  "endLine": 206,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 210,
                  "startColumn": 40,
                  "endLine": 210,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+3 (incl 2 for nesting)",
              "13": "+1",
              "14": "+3 (incl 2 for nesting)",
              "15": "+1",
              "16": "+1",
              "17": "+1",
              "18": "+3 (incl 2 for nesting)",
              "19": "+4 (incl 3 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/ValidationAttributes.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 5,
                  "endLine": 21,
                  "endColumn": 7
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/ValidationAttributes.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 4,
                  "endLine": 19,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'context' to 'validationContext' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/ValidationAttributes.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 79,
                  "endLine": 17,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3220",
          "level": "warning",
          "message": "Review this call, which partially matches an overload without 'params'. The partial match is 'string[] string.Split(char separator, int count, StringSplitOptions options = StringSplitOptions.None)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 47,
                  "endLine": 165,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'DumpPackageAssemblies' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 328,
                  "startColumn": 7,
                  "endLine": 328,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'DecompilerVersion' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/ILSpy/ICSharpCode.ILSpyCmd/IlspyCmdProgram.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 17,
                  "endLine": 83,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1825": {
          "id": "CA1825",
          "shortDescription": "Avoid zero-length array allocations",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1825",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code’s readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Utility classes, which are collections of static members, are not meant to be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1144": {
          "id": "S1144",
          "shortDescription": "Unused private types or members should be removed",
          "fullDescription": "private or internal types or private members that are never executed or referenced are dead code: unnecessary, inoperative code that should be removed. Cleaning out dead code decreases the size of the maintained codebase, making it easier to understand the program and preventing bugs from being introduced.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay",
              "Unnecessary"
            ]
          }
        },
        "S3220": {
          "id": "S3220",
          "shortDescription": "Method calls should not resolve ambiguously to overloads with \"params\"",
          "fullDescription": "The rules for method resolution are complex and perhaps not properly understood by all coders. The params keyword can make method declarations overlap in non-obvious ways, so that slight changes in the argument types of an invocation can resolve to different methods.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3220",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S927": {
          "id": "S927",
          "shortDescription": "Parameter names should match base declaration and other partial definitions",
          "fullDescription": "The name of a parameter in an externally visible. This rule raises an issue when method override does not match the name of the parameter in the base declaration of the method, or the name of the parameter in the interface declaration of the method or the name of any other partial definition.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-927",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}