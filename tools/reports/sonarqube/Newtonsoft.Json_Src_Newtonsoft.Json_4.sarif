{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.0.0.0",
        "fileVersion": "4.0.1-1.22181.2 (487283bc)",
        "semanticVersion": "4.0.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'SerializationBinder' is obsolete: 'SerializationBinder is obsolete. Use ISerializationBinder instead.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 9,
                  "endLine": 40,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'BsonWriter' is obsolete: 'BSON reading and writing has been moved to its own package. See https://www.nuget.org/packages/Newtonsoft.Json.Bson for more details.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/RegexConverter.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 32,
                  "endLine": 78,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS8767",
          "level": "warning",
          "message": "Nullability of reference types in type of parameter 'value' of 'bool DictionaryWrapper<TKey, TValue>.TryGetValue(TKey key, out TValue? value)' doesn't match implicitly implemented member 'bool IDictionary<TKey, TValue>.TryGetValue(TKey key, out TValue value)' (possibly because of nullability attributes).",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 21,
                  "endLine": 170,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'SerializationBinder' is obsolete: 'SerializationBinder is obsolete. Use ISerializationBinder instead.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/SerializationBinderAdapter.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 25,
                  "endLine": 34,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'SerializationBinder' is obsolete: 'SerializationBinder is obsolete. Use ISerializationBinder instead.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/SerializationBinderAdapter.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 43,
                  "endLine": 38,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'SerializationBinder' is obsolete: 'SerializationBinder is obsolete. Use ISerializationBinder instead.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 9,
                  "endLine": 40,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'BsonWriter' is obsolete: 'BSON reading and writing has been moved to its own package. See https://www.nuget.org/packages/Newtonsoft.Json.Bson for more details.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/RegexConverter.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 32,
                  "endLine": 78,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS8767",
          "level": "warning",
          "message": "Nullability of reference types in type of parameter 'value' of 'bool DictionaryWrapper<TKey, TValue>.TryGetValue(TKey key, out TValue? value)' doesn't match implicitly implemented member 'bool IDictionary<TKey, TValue>.TryGetValue(TKey key, out TValue value)' (possibly because of nullability attributes).",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 21,
                  "endLine": 170,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'SerializationBinder' is obsolete: 'SerializationBinder is obsolete. Use ISerializationBinder instead.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/SerializationBinderAdapter.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 25,
                  "endLine": 34,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'SerializationBinder' is obsolete: 'SerializationBinder is obsolete. Use ISerializationBinder instead.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/SerializationBinderAdapter.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 43,
                  "endLine": 38,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 499,
                  "startColumn": 52,
                  "endLine": 499,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8601",
          "level": "warning",
          "message": "Possible null reference assignment.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 499,
                  "startColumn": 52,
                  "endLine": 499,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/AsyncUtils.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 38,
                  "endLine": 65,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'BsonWriter' is obsolete: 'BSON reading and writing has been moved to its own package. See https://www.nuget.org/packages/Newtonsoft.Json.Bson for more details.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/RegexConverter.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 27,
                  "endLine": 61,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS8762",
          "level": "warning",
          "message": "Parameter 'memberContract' must have a non-null value when exiting with 'true'.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 585,
                  "startColumn": 21,
                  "endLine": 585,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'BsonObjectIdConverter' is obsolete: 'BSON reading and writing has been moved to its own package. See https://www.nuget.org/packages/Newtonsoft.Json.Bson for more details.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 17,
                  "endLine": 96,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'objectType' in 'object? JsonSerializerInternalReader.DeserializeConvertable(JsonConverter converter, JsonReader reader, Type objectType, object? existingValue)'.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1676,
                  "startColumn": 101,
                  "endLine": 1676,
                  "endColumn": 128
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1574",
          "level": "warning",
          "message": "XML comment has cref attribute 'NonSerializedAttribute' that could not be resolved",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/MemberSerialization.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 137,
                  "endLine": 39,
                  "endColumn": 159
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1574",
          "level": "warning",
          "message": "XML comment has cref attribute 'NonSerializedAttribute' that could not be resolved",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/MemberSerialization.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 137,
                  "endLine": 51,
                  "endColumn": 159
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1574",
          "level": "warning",
          "message": "XML comment has cref attribute 'SerializableAttribute' that could not be resolved",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/MemberSerialization.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 97,
                  "endLine": 52,
                  "endColumn": 118
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 870,
                  "startColumn": 25,
                  "endLine": 870,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 9,
                  "endLine": 219,
                  "endColumn": 105
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 302,
                  "startColumn": 9,
                  "endLine": 302,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 218,
                  "startColumn": 11,
                  "endLine": 218,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 301,
                  "startColumn": 11,
                  "endLine": 301,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 24,
                  "endLine": 55,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 20,
                  "endLine": 280,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 13,
                  "endLine": 88,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 224,
                  "startColumn": 13,
                  "endLine": 224,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 288,
                  "startColumn": 13,
                  "endLine": 288,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 339,
                  "startColumn": 13,
                  "endLine": 339,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'CalculateSize' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonBinaryWriter.cs",
                "region": {
                  "startLine": 229,
                  "startColumn": 21,
                  "endLine": 229,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonBinaryWriter.cs",
                "region": {
                  "startLine": 243,
                  "startColumn": 21,
                  "endLine": 243,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 21,
                  "endLine": 97,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 21,
                  "endLine": 109,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 29,
                  "endLine": 119,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 23,
                  "endLine": 78,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'ReadType' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 460,
                  "startColumn": 22,
                  "endLine": 460,
                  "endColumn": 30
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 819,
                  "startColumn": 26,
                  "endLine": 819,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'WriteValue' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonWriter.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 30,
                  "endLine": 238,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonWriter.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 30,
                  "endLine": 275,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonArrayAttribute.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 21,
                  "endLine": 42,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'ToString' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 30,
                  "endLine": 104,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 293,
                  "startColumn": 30,
                  "endLine": 293,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 328,
                  "startColumn": 30,
                  "endLine": 328,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload",
              "1": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'DeserializeObject' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 679,
                  "startColumn": 31,
                  "endLine": 679,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 769,
                  "startColumn": 26,
                  "endLine": 769,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 31,
                  "endLine": 47,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonObjectAttribute.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 36,
                  "endLine": 48,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_quoteChar'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 26,
                  "endLine": 136,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_quoteChar'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 32,
                  "endLine": 137,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 23,
                  "endLine": 59,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_childNodes'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 470,
                  "startColumn": 117,
                  "endLine": 470,
                  "endColumn": 131
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2953",
          "level": "warning",
          "message": "Either implement 'IDisposable.Dispose', or totally rename this method to prevent confusion.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1470,
                  "startColumn": 32,
                  "endLine": 1470,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3241",
          "level": "warning",
          "message": "Change return type to 'void'; not a single caller uses the returned value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 17,
                  "endLine": 158,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'CreateElement' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1674,
                  "startColumn": 22,
                  "endLine": 1674,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2070,
                  "startColumn": 29,
                  "endLine": 2070,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 35,
                  "endLine": 46,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1460,
                  "startColumn": 26,
                  "endLine": 1460,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "'JsonWriter.Dispose()' should be 'public'."
            }
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 952,
                  "startColumn": 49,
                  "endLine": 952,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/DefaultJsonNameTable.cs",
                "region": {
                  "startLine": 194,
                  "startColumn": 23,
                  "endLine": 194,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?s$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/DefaultValueHandling.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 17,
                  "endLine": 39,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2346",
          "level": "warning",
          "message": "Rename 'Include' to 'None'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/DefaultValueHandling.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 9,
                  "endLine": 45,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 328,
                  "startColumn": 24,
                  "endLine": 328,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2953",
          "level": "warning",
          "message": "Either implement 'IDisposable.Dispose', or totally rename this method to prevent confusion.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 1148,
                  "startColumn": 32,
                  "endLine": 1148,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 35,
                  "endLine": 41,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 1138,
                  "startColumn": 26,
                  "endLine": 1138,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "'JsonReader.Dispose()' should be 'public'."
            }
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 222,
                  "startColumn": 24,
                  "endLine": 222,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1070",
          "level": "note",
          "message": "Event 'Error' should not be declared virtual",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 60,
                  "endLine": 84,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2290",
          "level": "warning",
          "message": "Remove this 'virtual' modifier of 'Error'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 16,
                  "endLine": 84,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 38,
                  "endLine": 155,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 43,
                  "endLine": 165,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 411,
                  "startColumn": 41,
                  "endLine": 411,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 23,
                  "endLine": 80,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field '_node' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaModelBuilder.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 32,
                  "endLine": 44,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?s$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaType.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 17,
                  "endLine": 42,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 829,
                  "startColumn": 23,
                  "endLine": 829,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JConstructor.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 24,
                  "endLine": 76,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JProperty.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 23,
                  "endLine": 41,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4144",
          "level": "warning",
          "message": "Update this method so that its implementation is not identical to 'ShouldSkipDeserialized'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 971,
                  "startColumn": 29,
                  "endLine": 971,
                  "endColumn": 50
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 953,
                  "startColumn": 29,
                  "endLine": 953,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2259,
                  "startColumn": 23,
                  "endLine": 2259,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 26,
                  "endLine": 100,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'SetLineInfo' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2244,
                  "startColumn": 23,
                  "endLine": 2244,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2271,
                  "startColumn": 23,
                  "endLine": 2271,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field '_genericWrapperType' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 23,
                  "endLine": 63,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'ReadData' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 276,
                  "startColumn": 21,
                  "endLine": 276,
                  "endColumn": 29
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 340,
                  "startColumn": 21,
                  "endLine": 340,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_names' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanMultipleFilter.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 30,
                  "endLine": 7,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field '_genericWrapperType' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 23,
                  "endLine": 66,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 43,
                  "endLine": 95,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonObjectContract.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 43,
                  "endLine": 94,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonObjectContract.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 45,
                  "endLine": 100,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'WriteValue' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 30,
                  "endLine": 225,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 282,
                  "startColumn": 30,
                  "endLine": 282,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 970,
                  "startColumn": 23,
                  "endLine": 970,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1210",
          "level": "warning",
          "message": "When implementing IComparable or IComparable<T>, you should also override ==, !=, <, <=, >, and >=.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 26,
                  "endLine": 39,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4035",
          "level": "warning",
          "message": "Seal class 'JValue' or implement 'IEqualityComparer<T>' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 26,
                  "endLine": 39,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1210",
          "level": "warning",
          "message": "When implementing IComparable or IComparable<T>, you should also override ==, !=, <, <=, >, and >=.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 26,
                  "endLine": 46,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4035",
          "level": "warning",
          "message": "Seal class 'JValue' or implement 'IEqualityComparer<T>' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 26,
                  "endLine": 46,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?s$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/MergeNullValueHandling.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 17,
                  "endLine": 9,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2346",
          "level": "warning",
          "message": "Rename 'Ignore' to 'None'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/MergeNullValueHandling.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 9,
                  "endLine": 14,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?s$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/PreserveReferencesHandling.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 17,
                  "endLine": 40,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?s$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/TypeNameHandling.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 17,
                  "endLine": 40,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'Get' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/BoxedPrimitives.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 32,
                  "endLine": 30,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/BoxedPrimitives.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 32,
                  "endLine": 35,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/BoxedPrimitives.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 32,
                  "endLine": 64,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/BoxedPrimitives.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 32,
                  "endLine": 90,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/BoxedPrimitives.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 32,
                  "endLine": 94,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload",
              "1": "Non-adjacent overload",
              "2": "Non-adjacent overload",
              "3": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalBase.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 23,
                  "endLine": 36,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 141,
                  "startColumn": 21,
                  "endLine": 141,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'WritePropertyNameAsync' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 343,
                  "startColumn": 30,
                  "endLine": 343,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 383,
                  "startColumn": 30,
                  "endLine": 383,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'DoWritePropertyNameAsync' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 348,
                  "startColumn": 23,
                  "endLine": 348,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 388,
                  "startColumn": 29,
                  "endLine": 388,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'WriteValueAsync' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 552,
                  "startColumn": 30,
                  "endLine": 552,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 570,
                  "startColumn": 30,
                  "endLine": 570,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 588,
                  "startColumn": 30,
                  "endLine": 588,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 619,
                  "startColumn": 30,
                  "endLine": 619,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 641,
                  "startColumn": 30,
                  "endLine": 641,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 659,
                  "startColumn": 30,
                  "endLine": 659,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 677,
                  "startColumn": 30,
                  "endLine": 677,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 709,
                  "startColumn": 30,
                  "endLine": 709,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 727,
                  "startColumn": 30,
                  "endLine": 727,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 758,
                  "startColumn": 30,
                  "endLine": 758,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 776,
                  "startColumn": 30,
                  "endLine": 776,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 794,
                  "startColumn": 30,
                  "endLine": 794,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 812,
                  "startColumn": 30,
                  "endLine": 812,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 900,
                  "startColumn": 30,
                  "endLine": 900,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 918,
                  "startColumn": 30,
                  "endLine": 918,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 949,
                  "startColumn": 30,
                  "endLine": 949,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 987,
                  "startColumn": 30,
                  "endLine": 987,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1049,
                  "startColumn": 30,
                  "endLine": 1049,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1080,
                  "startColumn": 30,
                  "endLine": 1080,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1110,
                  "startColumn": 30,
                  "endLine": 1110,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1131,
                  "startColumn": 30,
                  "endLine": 1131,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1150,
                  "startColumn": 30,
                  "endLine": 1150,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1183,
                  "startColumn": 30,
                  "endLine": 1183,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1215,
                  "startColumn": 30,
                  "endLine": 1215,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1246,
                  "startColumn": 30,
                  "endLine": 1246,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload",
              "1": "Non-adjacent overload",
              "10": "Non-adjacent overload",
              "11": "Non-adjacent overload",
              "12": "Non-adjacent overload",
              "13": "Non-adjacent overload",
              "14": "Non-adjacent overload",
              "15": "Non-adjacent overload",
              "16": "Non-adjacent overload",
              "17": "Non-adjacent overload",
              "18": "Non-adjacent overload",
              "19": "Non-adjacent overload",
              "2": "Non-adjacent overload",
              "20": "Non-adjacent overload",
              "21": "Non-adjacent overload",
              "22": "Non-adjacent overload",
              "23": "Non-adjacent overload",
              "3": "Non-adjacent overload",
              "4": "Non-adjacent overload",
              "5": "Non-adjacent overload",
              "6": "Non-adjacent overload",
              "7": "Non-adjacent overload",
              "8": "Non-adjacent overload",
              "9": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'DoWriteValueAsync' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 557,
                  "startColumn": 23,
                  "endLine": 557,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 575,
                  "startColumn": 23,
                  "endLine": 575,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 606,
                  "startColumn": 23,
                  "endLine": 606,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 646,
                  "startColumn": 23,
                  "endLine": 646,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 664,
                  "startColumn": 23,
                  "endLine": 664,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 682,
                  "startColumn": 29,
                  "endLine": 682,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 714,
                  "startColumn": 23,
                  "endLine": 714,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 732,
                  "startColumn": 29,
                  "endLine": 732,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 763,
                  "startColumn": 23,
                  "endLine": 763,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 781,
                  "startColumn": 23,
                  "endLine": 781,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 799,
                  "startColumn": 23,
                  "endLine": 799,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 879,
                  "startColumn": 29,
                  "endLine": 879,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 905,
                  "startColumn": 23,
                  "endLine": 905,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 936,
                  "startColumn": 23,
                  "endLine": 936,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 967,
                  "startColumn": 23,
                  "endLine": 967,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1036,
                  "startColumn": 23,
                  "endLine": 1036,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1067,
                  "startColumn": 23,
                  "endLine": 1067,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1085,
                  "startColumn": 23,
                  "endLine": 1085,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1115,
                  "startColumn": 29,
                  "endLine": 1115,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1136,
                  "startColumn": 23,
                  "endLine": 1136,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1169,
                  "startColumn": 23,
                  "endLine": 1169,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1202,
                  "startColumn": 23,
                  "endLine": 1202,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1265,
                  "startColumn": 23,
                  "endLine": 1265,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload",
              "1": "Non-adjacent overload",
              "10": "Non-adjacent overload",
              "11": "Non-adjacent overload",
              "12": "Non-adjacent overload",
              "13": "Non-adjacent overload",
              "14": "Non-adjacent overload",
              "15": "Non-adjacent overload",
              "16": "Non-adjacent overload",
              "17": "Non-adjacent overload",
              "18": "Non-adjacent overload",
              "19": "Non-adjacent overload",
              "2": "Non-adjacent overload",
              "20": "Non-adjacent overload",
              "21": "Non-adjacent overload",
              "3": "Non-adjacent overload",
              "4": "Non-adjacent overload",
              "5": "Non-adjacent overload",
              "6": "Non-adjacent overload",
              "7": "Non-adjacent overload",
              "8": "Non-adjacent overload",
              "9": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'WriteValue' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 392,
                  "startColumn": 30,
                  "endLine": 392,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 440,
                  "startColumn": 30,
                  "endLine": 440,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 464,
                  "startColumn": 30,
                  "endLine": 464,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 668,
                  "startColumn": 30,
                  "endLine": 668,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 725,
                  "startColumn": 30,
                  "endLine": 725,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload",
              "1": "Non-adjacent overload",
              "2": "Non-adjacent overload",
              "3": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'WriteValueToBuffer' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 652,
                  "startColumn": 21,
                  "endLine": 652,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 708,
                  "startColumn": 21,
                  "endLine": 708,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'WriteIntegerValue' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 813,
                  "startColumn": 22,
                  "endLine": 813,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 873,
                  "startColumn": 22,
                  "endLine": 873,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'WriteNumberToBuffer' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 841,
                  "startColumn": 21,
                  "endLine": 841,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 901,
                  "startColumn": 21,
                  "endLine": 901,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S3241",
          "level": "warning",
          "message": "Change return type to 'void'; not a single caller uses the returned value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1477,
                  "startColumn": 17,
                  "endLine": 1477,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2365",
          "level": "warning",
          "message": "Refactor 'Keys' into a method, properties should not copy collections.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2365",
          "level": "warning",
          "message": "Refactor 'Keys' into a method, properties should not copy collections.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 28,
                  "endLine": 133,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2365",
          "level": "warning",
          "message": "Refactor 'Values' into a method, properties should not copy collections.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 206,
                  "startColumn": 28,
                  "endLine": 206,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2365",
          "level": "warning",
          "message": "Refactor 'Values' into a method, properties should not copy collections.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 211,
                  "startColumn": 28,
                  "endLine": 211,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2365",
          "level": "warning",
          "message": "Refactor 'Keys' into a method, properties should not copy collections.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 598,
                  "startColumn": 28,
                  "endLine": 598,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2365",
          "level": "warning",
          "message": "Refactor 'Keys' into a method, properties should not copy collections.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 603,
                  "startColumn": 28,
                  "endLine": 603,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2365",
          "level": "warning",
          "message": "Refactor 'Values' into a method, properties should not copy collections.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 637,
                  "startColumn": 28,
                  "endLine": 637,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2365",
          "level": "warning",
          "message": "Refactor 'Values' into a method, properties should not copy collections.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 642,
                  "startColumn": 28,
                  "endLine": 642,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2743",
          "level": "warning",
          "message": "A static field in a generic type is not shared among instances of different close constructed types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 169,
                  "startColumn": 37,
                  "endLine": 169,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_referenceResolver'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 20,
                  "endLine": 49,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_referenceResolver'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 20,
                  "endLine": 50,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_traceWriter'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 20,
                  "endLine": 55,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_traceWriter'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 20,
                  "endLine": 56,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_equalityComparer'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 20,
                  "endLine": 61,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_equalityComparer'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 20,
                  "endLine": 62,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_defaultValueHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 20,
                  "endLine": 69,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_defaultValueHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 20,
                  "endLine": 70,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_contractResolver'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 20,
                  "endLine": 75,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_contractResolver'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 20,
                  "endLine": 76,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_missingMemberHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 20,
                  "endLine": 81,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_missingMemberHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 20,
                  "endLine": 82,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_nullValueHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 20,
                  "endLine": 87,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_nullValueHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 20,
                  "endLine": 88,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_objectCreationHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 20,
                  "endLine": 93,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_objectCreationHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 20,
                  "endLine": 94,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_referenceLoopHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 20,
                  "endLine": 99,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_referenceLoopHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 20,
                  "endLine": 100,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_preserveReferencesHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 20,
                  "endLine": 105,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_preserveReferencesHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 20,
                  "endLine": 106,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_typeNameHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 20,
                  "endLine": 111,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_typeNameHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 20,
                  "endLine": 112,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_metadataPropertyHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 20,
                  "endLine": 117,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_metadataPropertyHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 20,
                  "endLine": 118,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_typeNameAssemblyFormatHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 130,
                  "startColumn": 20,
                  "endLine": 130,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_typeNameAssemblyFormatHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 20,
                  "endLine": 131,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_constructorHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 20,
                  "endLine": 136,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_constructorHandling'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 20,
                  "endLine": 137,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_serializationBinder'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 149,
                  "startColumn": 20,
                  "endLine": 149,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_serializationBinder'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 20,
                  "endLine": 150,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_context'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 20,
                  "endLine": 155,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_context'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 20,
                  "endLine": 156,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_dateFormatString'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 203,
                  "startColumn": 20,
                  "endLine": 203,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_dateFormatString'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 204,
                  "startColumn": 20,
                  "endLine": 204,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_culture'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 209,
                  "startColumn": 20,
                  "endLine": 209,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_culture'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 210,
                  "startColumn": 20,
                  "endLine": 210,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_maxDepth'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 20,
                  "endLine": 215,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_maxDepth'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 20,
                  "endLine": 216,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 23,
                  "endLine": 186,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3246",
          "level": "warning",
          "message": "Add the 'in' keyword to parameter 'T' to make it 'contravariant'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodCall.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 42,
                  "endLine": 28,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3246",
          "level": "warning",
          "message": "Add the 'out' keyword to parameter 'TResult' to make it 'covariant'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodCall.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 45,
                  "endLine": 28,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3246",
          "level": "warning",
          "message": "Add the 'out' keyword to parameter 'T' to make it 'covariant'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MiscellaneousUtils.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 33,
                  "endLine": 39,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2344",
          "level": "warning",
          "message": "Rename this enumeration to remove the 'Flags' suffix.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 19,
                  "endLine": 59,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2346",
          "level": "warning",
          "message": "Rename 'Default' to 'None'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 9,
                  "endLine": 61,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_ofSeq' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/FSharpUtils.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 28,
                  "endLine": 102,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_mapType' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/FSharpUtils.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 22,
                  "endLine": 103,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4035",
          "level": "warning",
          "message": "Seal class 'NamingStrategy' or implement 'IEqualityComparer<T>' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/NamingStrategy.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 27,
                  "endLine": 31,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/StringBuffer.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 20,
                  "endLine": 38,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 23,
                  "endLine": 77,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_quoteChar'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/TraceJsonReader.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 20,
                  "endLine": 133,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_quoteChar'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/TraceJsonReader.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 39,
                  "endLine": 134,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'WriteValue' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/TraceJsonWriter.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 30,
                  "endLine": 63,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/TraceJsonWriter.cs",
                "region": {
                  "startLine": 240,
                  "startColumn": 30,
                  "endLine": 240,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'GetProperty' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 36,
                  "endLine": 220,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 443,
                  "startColumn": 37,
                  "endLine": 443,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'GetMember' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 246,
                  "startColumn": 47,
                  "endLine": 246,
                  "endColumn": 56
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 324,
                  "startColumn": 36,
                  "endLine": 324,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'GetMethods' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 438,
                  "startColumn": 47,
                  "endLine": 438,
                  "endColumn": 57
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 538,
                  "startColumn": 47,
                  "endLine": 538,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S2971",
          "level": "warning",
          "message": "Drop 'Where' and move the condition into the 'SingleOrDefault'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 224,
                  "startColumn": 34,
                  "endLine": 224,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 236,
                  "startColumn": 21,
                  "endLine": 236,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 234,
                  "startColumn": 17,
                  "endLine": 234,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'Unexpected member type.' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 503,
                  "startColumn": 19,
                  "endLine": 503,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 598,
                  "startColumn": 36,
                  "endLine": 598,
                  "endColumn": 56
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 600,
                  "startColumn": 25,
                  "endLine": 600,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 27 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 218,
                  "startColumn": 31,
                  "endLine": 218,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 13,
                  "endLine": 220,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 228,
                  "startColumn": 13,
                  "endLine": 228,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 230,
                  "startColumn": 17,
                  "endLine": 230,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 232,
                  "startColumn": 21,
                  "endLine": 232,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 237,
                  "startColumn": 17,
                  "endLine": 237,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 21,
                  "endLine": 239,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 243,
                  "startColumn": 29,
                  "endLine": 243,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 243,
                  "startColumn": 39,
                  "endLine": 243,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 246,
                  "startColumn": 33,
                  "endLine": 246,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 246,
                  "startColumn": 61,
                  "endLine": 246,
                  "endColumn": 63
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 268,
                  "startColumn": 17,
                  "endLine": 268,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 273,
                  "startColumn": 17,
                  "endLine": 273,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 21,
                  "endLine": 275,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+3 (incl 2 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+5 (incl 4 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3963",
          "level": "warning",
          "message": "Initialize all 'static fields' inline and remove the 'static constructor'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 9,
                  "endLine": 95,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 19,
                  "endLine": 57,
                  "endColumn": 121
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "Use a constructor overloads that allows a more meaningful exception message to be provided.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 27,
                  "endLine": 161,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "Use a constructor overloads that allows a more meaningful exception message to be provided.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 340,
                  "startColumn": 23,
                  "endLine": 340,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2589",
          "level": "warning",
          "message": "Change this condition so that it does not always evaluate to 'true'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 29,
                  "endLine": 225,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 19,
                  "endLine": 72,
                  "endColumn": 121
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 38 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 27,
                  "endLine": 34,
                  "endColumn": 36
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 13,
                  "endLine": 36,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 17,
                  "endLine": 38,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 17,
                  "endLine": 42,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 17,
                  "endLine": 46,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 17,
                  "endLine": 50,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 17,
                  "endLine": 54,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 17,
                  "endLine": 58,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 17,
                  "endLine": 62,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 17,
                  "endLine": 66,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 17,
                  "endLine": 70,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 13,
                  "endLine": 77,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 17,
                  "endLine": 79,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 17,
                  "endLine": 83,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 17,
                  "endLine": 87,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 17,
                  "endLine": 91,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 17,
                  "endLine": 95,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 17,
                  "endLine": 99,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 17,
                  "endLine": 103,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 17,
                  "endLine": 107,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MathUtils.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 17,
                  "endLine": 111,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+2 (incl 1 for nesting)",
              "13": "+2 (incl 1 for nesting)",
              "14": "+2 (incl 1 for nesting)",
              "15": "+2 (incl 1 for nesting)",
              "16": "+2 (incl 1 for nesting)",
              "17": "+2 (incl 1 for nesting)",
              "18": "+2 (incl 1 for nesting)",
              "19": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+2 (incl 1 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 29,
                  "endLine": 112,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 13,
                  "endLine": 117,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 13,
                  "endLine": 122,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 13,
                  "endLine": 131,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 17,
                  "endLine": 134,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 53,
                  "endLine": 134,
                  "endColumn": 55
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 13,
                  "endLine": 140,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 40,
                  "endLine": 140,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 13,
                  "endLine": 146,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 89,
                  "endLine": 148,
                  "endColumn": 90
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 58,
                  "endLine": 148,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 17,
                  "endLine": 150,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 17,
                  "endLine": 156,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 17,
                  "endLine": 162,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 21,
                  "endLine": 164,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 49,
                  "endLine": 164,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 17,
                  "endLine": 170,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 172,
                  "startColumn": 21,
                  "endLine": 172,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+2 (incl 1 for nesting)",
              "12": "+2 (incl 1 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "14": "+1",
              "15": "+1",
              "16": "+3 (incl 2 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 325,
                  "startColumn": 17,
                  "endLine": 325,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 323,
                  "startColumn": 13,
                  "endLine": 323,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 337,
                  "startColumn": 32,
                  "endLine": 337,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 339,
                  "startColumn": 21,
                  "endLine": 339,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 409,
                  "startColumn": 27,
                  "endLine": 409,
                  "endColumn": 120
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 419,
                  "startColumn": 19,
                  "endLine": 419,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 30 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 199,
                  "startColumn": 24,
                  "endLine": 199,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 205,
                  "startColumn": 17,
                  "endLine": 205,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 209,
                  "startColumn": 17,
                  "endLine": 209,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 17,
                  "endLine": 216,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 21,
                  "endLine": 219,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 58,
                  "endLine": 219,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 21,
                  "endLine": 225,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 58,
                  "endLine": 225,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 21,
                  "endLine": 231,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 49,
                  "endLine": 231,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 21,
                  "endLine": 235,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 49,
                  "endLine": 235,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 241,
                  "startColumn": 17,
                  "endLine": 241,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 243,
                  "startColumn": 91,
                  "endLine": 243,
                  "endColumn": 92
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 243,
                  "startColumn": 59,
                  "endLine": 243,
                  "endColumn": 61
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 244,
                  "startColumn": 91,
                  "endLine": 244,
                  "endColumn": 92
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 244,
                  "startColumn": 59,
                  "endLine": 244,
                  "endColumn": 61
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 246,
                  "startColumn": 21,
                  "endLine": 246,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 253,
                  "startColumn": 21,
                  "endLine": 253,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 257,
                  "startColumn": 21,
                  "endLine": 257,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 263,
                  "startColumn": 21,
                  "endLine": 263,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+1",
              "14": "+2 (incl 1 for nesting)",
              "15": "+1",
              "16": "+2 (incl 1 for nesting)",
              "17": "+2 (incl 1 for nesting)",
              "18": "+2 (incl 1 for nesting)",
              "19": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 430,
                  "startColumn": 27,
                  "endLine": 430,
                  "endColumn": 130
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 446,
                  "startColumn": 19,
                  "endLine": 446,
                  "endColumn": 122
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 273,
                  "startColumn": 32,
                  "endLine": 273,
                  "endColumn": 53
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 17,
                  "endLine": 275,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 35,
                  "endLine": 275,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 277,
                  "startColumn": 21,
                  "endLine": 277,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 277,
                  "startColumn": 39,
                  "endLine": 277,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 282,
                  "startColumn": 21,
                  "endLine": 282,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 285,
                  "startColumn": 25,
                  "endLine": 285,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 290,
                  "startColumn": 21,
                  "endLine": 290,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 293,
                  "startColumn": 25,
                  "endLine": 293,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 302,
                  "startColumn": 17,
                  "endLine": 302,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 302,
                  "startColumn": 41,
                  "endLine": 302,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 307,
                  "startColumn": 17,
                  "endLine": 307,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 313,
                  "startColumn": 17,
                  "endLine": 313,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/MethodBinder.cs",
                "region": {
                  "startLine": 318,
                  "startColumn": 33,
                  "endLine": 318,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 94 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 28,
                  "endLine": 147,
                  "endColumn": 56
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 13,
                  "endLine": 151,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 13,
                  "endLine": 156,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 17,
                  "endLine": 159,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 17,
                  "endLine": 163,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 21,
                  "endLine": 165,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 25,
                  "endLine": 167,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 49,
                  "endLine": 167,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 21,
                  "endLine": 178,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 182,
                  "startColumn": 25,
                  "endLine": 182,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 182,
                  "startColumn": 56,
                  "endLine": 182,
                  "endColumn": 58
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 25,
                  "endLine": 189,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 33,
                  "endLine": 219,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 64,
                  "endLine": 219,
                  "endColumn": 66
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 221,
                  "startColumn": 37,
                  "endLine": 221,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 221,
                  "startColumn": 51,
                  "endLine": 221,
                  "endColumn": 53
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 37,
                  "endLine": 225,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 55,
                  "endLine": 225,
                  "endColumn": 57
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 229,
                  "startColumn": 37,
                  "endLine": 229,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 41,
                  "endLine": 231,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 65,
                  "endLine": 231,
                  "endColumn": 67
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 242,
                  "startColumn": 33,
                  "endLine": 242,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 249,
                  "startColumn": 25,
                  "endLine": 249,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 256,
                  "startColumn": 25,
                  "endLine": 256,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 258,
                  "startColumn": 86,
                  "endLine": 258,
                  "endColumn": 87
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 259,
                  "startColumn": 64,
                  "endLine": 259,
                  "endColumn": 65
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 261,
                  "startColumn": 29,
                  "endLine": 261,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 261,
                  "startColumn": 53,
                  "endLine": 261,
                  "endColumn": 55
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 267,
                  "startColumn": 33,
                  "endLine": 267,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 286,
                  "startColumn": 25,
                  "endLine": 286,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 290,
                  "startColumn": 25,
                  "endLine": 290,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 21,
                  "endLine": 299,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 301,
                  "startColumn": 25,
                  "endLine": 301,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 301,
                  "startColumn": 49,
                  "endLine": 301,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 315,
                  "startColumn": 13,
                  "endLine": 315,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+4 (incl 3 for nesting)",
              "11": "+5 (incl 4 for nesting)",
              "12": "+1",
              "13": "+6 (incl 5 for nesting)",
              "14": "+1",
              "15": "+1",
              "16": "+1",
              "17": "+1",
              "18": "+7 (incl 6 for nesting)",
              "19": "+1",
              "2": "+2 (incl 1 for nesting)",
              "20": "+1",
              "21": "+4 (incl 3 for nesting)",
              "22": "+4 (incl 3 for nesting)",
              "23": "+5 (incl 4 for nesting)",
              "24": "+5 (incl 4 for nesting)",
              "25": "+5 (incl 4 for nesting)",
              "26": "+1",
              "27": "+6 (incl 5 for nesting)",
              "28": "+4 (incl 3 for nesting)",
              "29": "+1",
              "3": "+1",
              "30": "+3 (incl 2 for nesting)",
              "31": "+4 (incl 3 for nesting)",
              "32": "+1",
              "33": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 9 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 366,
                  "startColumn": 61,
                  "endLine": 366,
                  "endColumn": 286
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 8 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 386,
                  "startColumn": 76,
                  "endLine": 387,
                  "endColumn": 159
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 8 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 56,
                  "endLine": 148,
                  "endColumn": 134
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3963",
          "level": "warning",
          "message": "Initialize all 'static fields' inline and remove the 'static constructor'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 9,
                  "endLine": 50,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 24 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 28,
                  "endLine": 91,
                  "endColumn": 43
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 13,
                  "endLine": 97,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 13,
                  "endLine": 102,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 17,
                  "endLine": 107,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 21,
                  "endLine": 112,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 21,
                  "endLine": 124,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 13,
                  "endLine": 137,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 141,
                  "startColumn": 13,
                  "endLine": 141,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 13,
                  "endLine": 145,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 13,
                  "endLine": 152,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 154,
                  "startColumn": 17,
                  "endLine": 154,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 17,
                  "endLine": 158,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 13,
                  "endLine": 163,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 168,
                  "startColumn": 13,
                  "endLine": 168,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 172,
                  "startColumn": 17,
                  "endLine": 172,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 21,
                  "endLine": 174,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "14": "+3 (incl 2 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 651,
                  "startColumn": 40,
                  "endLine": 651,
                  "endColumn": 62
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 664,
                  "startColumn": 13,
                  "endLine": 664,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 668,
                  "startColumn": 17,
                  "endLine": 668,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 672,
                  "startColumn": 17,
                  "endLine": 672,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 675,
                  "startColumn": 21,
                  "endLine": 675,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 680,
                  "startColumn": 25,
                  "endLine": 680,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 684,
                  "startColumn": 25,
                  "endLine": 684,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 684,
                  "startColumn": 85,
                  "endLine": 684,
                  "endColumn": 87
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 688,
                  "startColumn": 29,
                  "endLine": 688,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+5 (incl 4 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 25 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 40,
                  "endLine": 80,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 13,
                  "endLine": 85,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 13,
                  "endLine": 89,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 17,
                  "endLine": 91,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 13,
                  "endLine": 101,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 17,
                  "endLine": 104,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 113,
                  "startColumn": 17,
                  "endLine": 113,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 25,
                  "endLine": 117,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 25,
                  "endLine": 122,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 25,
                  "endLine": 129,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 132,
                  "startColumn": 29,
                  "endLine": 132,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 132,
                  "startColumn": 56,
                  "endLine": 132,
                  "endColumn": 58
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 29,
                  "endLine": 137,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 61,
                  "endLine": 137,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1944",
          "level": "warning",
          "message": "Review this cast; in this project there's no type that implements both 'IDictionary' and 'IList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 263,
                  "startColumn": 19,
                  "endLine": 263,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3963",
          "level": "warning",
          "message": "Initialize all 'static fields' inline and remove the 'static constructor'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 9,
                  "endLine": 57,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 379,
                  "startColumn": 27,
                  "endLine": 379,
                  "endColumn": 168
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 9 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 408,
                  "startColumn": 82,
                  "endLine": 409,
                  "endColumn": 159
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 22,
                  "endLine": 123,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 13,
                  "endLine": 125,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 19,
                  "endLine": 126,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 34,
                  "endLine": 133,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 50,
                  "endLine": 133,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 13,
                  "endLine": 139,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 17,
                  "endLine": 144,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 39,
                  "endLine": 144,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 21,
                  "endLine": 147,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 35,
                  "endLine": 147,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 157,
                  "startColumn": 17,
                  "endLine": 157,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 21,
                  "endLine": 159,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 17,
                  "endLine": 167,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 32,
                  "endLine": 167,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+2 (incl 1 for nesting)",
              "12": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 33 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 175,
                  "startColumn": 22,
                  "endLine": 175,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 177,
                  "startColumn": 13,
                  "endLine": 177,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 180,
                  "startColumn": 17,
                  "endLine": 180,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 180,
                  "startColumn": 31,
                  "endLine": 180,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 17,
                  "endLine": 185,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 187,
                  "startColumn": 21,
                  "endLine": 187,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 188,
                  "startColumn": 25,
                  "endLine": 188,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 191,
                  "startColumn": 25,
                  "endLine": 191,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 205,
                  "startColumn": 21,
                  "endLine": 205,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 25,
                  "endLine": 207,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 211,
                  "startColumn": 29,
                  "endLine": 211,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 212,
                  "startColumn": 33,
                  "endLine": 212,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 218,
                  "startColumn": 25,
                  "endLine": 218,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 29,
                  "endLine": 220,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 221,
                  "startColumn": 33,
                  "endLine": 221,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+1",
              "12": "+5 (incl 4 for nesting)",
              "13": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+4 (incl 3 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+5 (incl 4 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 44 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 437,
                  "startColumn": 35,
                  "endLine": 437,
                  "endColumn": 95
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 442,
                  "startColumn": 13,
                  "endLine": 442,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 442,
                  "startColumn": 37,
                  "endLine": 442,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 447,
                  "startColumn": 13,
                  "endLine": 447,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 459,
                  "startColumn": 13,
                  "endLine": 459,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 463,
                  "startColumn": 17,
                  "endLine": 463,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 463,
                  "startColumn": 48,
                  "endLine": 463,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 468,
                  "startColumn": 17,
                  "endLine": 468,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 498,
                  "startColumn": 25,
                  "endLine": 498,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 498,
                  "startColumn": 56,
                  "endLine": 498,
                  "endColumn": 58
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 500,
                  "startColumn": 29,
                  "endLine": 500,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 500,
                  "startColumn": 43,
                  "endLine": 500,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 504,
                  "startColumn": 29,
                  "endLine": 504,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 504,
                  "startColumn": 47,
                  "endLine": 504,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 508,
                  "startColumn": 29,
                  "endLine": 508,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 510,
                  "startColumn": 33,
                  "endLine": 510,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 520,
                  "startColumn": 25,
                  "endLine": 520,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 527,
                  "startColumn": 17,
                  "endLine": 527,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 529,
                  "startColumn": 76,
                  "endLine": 529,
                  "endColumn": 77
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 530,
                  "startColumn": 54,
                  "endLine": 530,
                  "endColumn": 55
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 532,
                  "startColumn": 21,
                  "endLine": 532,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 544,
                  "startColumn": 17,
                  "endLine": 544,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 548,
                  "startColumn": 17,
                  "endLine": 548,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 557,
                  "startColumn": 13,
                  "endLine": 557,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 559,
                  "startColumn": 17,
                  "endLine": 559,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+5 (incl 4 for nesting)",
              "15": "+1",
              "16": "+2 (incl 1 for nesting)",
              "17": "+3 (incl 2 for nesting)",
              "18": "+3 (incl 2 for nesting)",
              "19": "+3 (incl 2 for nesting)",
              "2": "+1",
              "20": "+2 (incl 1 for nesting)",
              "21": "+1",
              "22": "+1",
              "23": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1944",
          "level": "warning",
          "message": "Review this cast; in this project there's no type that implements both 'IDictionary' and 'IList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 26,
                  "endLine": 299,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 39 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 408,
                  "startColumn": 38,
                  "endLine": 408,
                  "endColumn": 56
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 410,
                  "startColumn": 13,
                  "endLine": 410,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 415,
                  "startColumn": 13,
                  "endLine": 415,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 422,
                  "startColumn": 13,
                  "endLine": 422,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 429,
                  "startColumn": 13,
                  "endLine": 429,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 429,
                  "startColumn": 55,
                  "endLine": 429,
                  "endColumn": 57
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 431,
                  "startColumn": 17,
                  "endLine": 431,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 433,
                  "startColumn": 21,
                  "endLine": 433,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 438,
                  "startColumn": 21,
                  "endLine": 438,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 450,
                  "startColumn": 13,
                  "endLine": 450,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 450,
                  "startColumn": 45,
                  "endLine": 450,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 457,
                  "startColumn": 13,
                  "endLine": 457,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 457,
                  "startColumn": 46,
                  "endLine": 457,
                  "endColumn": 48
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 463,
                  "startColumn": 13,
                  "endLine": 463,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 463,
                  "startColumn": 43,
                  "endLine": 463,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 469,
                  "startColumn": 13,
                  "endLine": 469,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 471,
                  "startColumn": 17,
                  "endLine": 471,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 476,
                  "startColumn": 17,
                  "endLine": 476,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 481,
                  "startColumn": 17,
                  "endLine": 481,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 486,
                  "startColumn": 17,
                  "endLine": 486,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 491,
                  "startColumn": 17,
                  "endLine": 491,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 493,
                  "startColumn": 21,
                  "endLine": 493,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 501,
                  "startColumn": 17,
                  "endLine": 501,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 537,
                  "startColumn": 13,
                  "endLine": 537,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 537,
                  "startColumn": 37,
                  "endLine": 537,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 545,
                  "startColumn": 13,
                  "endLine": 545,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 545,
                  "startColumn": 39,
                  "endLine": 545,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 567,
                  "startColumn": 13,
                  "endLine": 567,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 567,
                  "startColumn": 42,
                  "endLine": 567,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+2 (incl 1 for nesting)",
              "16": "+2 (incl 1 for nesting)",
              "17": "+2 (incl 1 for nesting)",
              "18": "+2 (incl 1 for nesting)",
              "19": "+2 (incl 1 for nesting)",
              "2": "+1",
              "20": "+3 (incl 2 for nesting)",
              "21": "+2 (incl 1 for nesting)",
              "22": "+1",
              "23": "+1",
              "24": "+1",
              "25": "+1",
              "26": "+1",
              "27": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 8 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 437,
                  "startColumn": 95,
                  "endLine": 440,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 32,
                  "endLine": 158,
                  "endColumn": 51
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 13,
                  "endLine": 171,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 17,
                  "endLine": 173,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 32,
                  "endLine": 173,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 17,
                  "endLine": 178,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 181,
                  "startColumn": 21,
                  "endLine": 181,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 13,
                  "endLine": 195,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 13,
                  "endLine": 200,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 203,
                  "startColumn": 17,
                  "endLine": 203,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 203,
                  "startColumn": 39,
                  "endLine": 203,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 17,
                  "endLine": 207,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 212,
                  "startColumn": 13,
                  "endLine": 212,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 835,
                  "startColumn": 19,
                  "endLine": 835,
                  "endColumn": 120
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 30 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 676,
                  "startColumn": 35,
                  "endLine": 676,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 680,
                  "startColumn": 13,
                  "endLine": 680,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 687,
                  "startColumn": 13,
                  "endLine": 687,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 690,
                  "startColumn": 17,
                  "endLine": 690,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 704,
                  "startColumn": 13,
                  "endLine": 704,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 704,
                  "startColumn": 29,
                  "endLine": 704,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 704,
                  "startColumn": 46,
                  "endLine": 704,
                  "endColumn": 48
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 707,
                  "startColumn": 17,
                  "endLine": 707,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 711,
                  "startColumn": 21,
                  "endLine": 711,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 711,
                  "startColumn": 31,
                  "endLine": 711,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 720,
                  "startColumn": 13,
                  "endLine": 720,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 724,
                  "startColumn": 17,
                  "endLine": 724,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 724,
                  "startColumn": 27,
                  "endLine": 724,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 732,
                  "startColumn": 17,
                  "endLine": 732,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 738,
                  "startColumn": 21,
                  "endLine": 738,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 742,
                  "startColumn": 25,
                  "endLine": 742,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 742,
                  "startColumn": 35,
                  "endLine": 742,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 756,
                  "startColumn": 13,
                  "endLine": 756,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 759,
                  "startColumn": 17,
                  "endLine": 759,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "14": "+4 (incl 3 for nesting)",
              "15": "+1",
              "16": "+1",
              "17": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 31 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 258,
                  "startColumn": 30,
                  "endLine": 258,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 263,
                  "startColumn": 13,
                  "endLine": 263,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 13,
                  "endLine": 275,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 281,
                  "startColumn": 13,
                  "endLine": 281,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 283,
                  "startColumn": 17,
                  "endLine": 283,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 289,
                  "startColumn": 13,
                  "endLine": 289,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 296,
                  "startColumn": 13,
                  "endLine": 296,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 296,
                  "startColumn": 54,
                  "endLine": 296,
                  "endColumn": 56
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 307,
                  "startColumn": 17,
                  "endLine": 307,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 314,
                  "startColumn": 17,
                  "endLine": 314,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 316,
                  "startColumn": 21,
                  "endLine": 316,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 328,
                  "startColumn": 13,
                  "endLine": 328,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 332,
                  "startColumn": 17,
                  "endLine": 332,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 339,
                  "startColumn": 17,
                  "endLine": 339,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 339,
                  "startColumn": 46,
                  "endLine": 339,
                  "endColumn": 48
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 344,
                  "startColumn": 17,
                  "endLine": 344,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 344,
                  "startColumn": 58,
                  "endLine": 344,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 354,
                  "startColumn": 17,
                  "endLine": 354,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 359,
                  "startColumn": 17,
                  "endLine": 359,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 364,
                  "startColumn": 21,
                  "endLine": 364,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+2 (incl 1 for nesting)",
              "13": "+1",
              "14": "+2 (incl 1 for nesting)",
              "15": "+1",
              "16": "+2 (incl 1 for nesting)",
              "17": "+2 (incl 1 for nesting)",
              "18": "+3 (incl 2 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'arrayIndex' to 'index' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/CollectionWrapper.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 50,
                  "endLine": 280,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 572,
                  "startColumn": 28,
                  "endLine": 572,
                  "endColumn": 57
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 577,
                  "startColumn": 13,
                  "endLine": 577,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 577,
                  "startColumn": 85,
                  "endLine": 577,
                  "endColumn": 87
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 582,
                  "startColumn": 13,
                  "endLine": 582,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 586,
                  "startColumn": 13,
                  "endLine": 586,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 594,
                  "startColumn": 17,
                  "endLine": 594,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 596,
                  "startColumn": 21,
                  "endLine": 596,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 600,
                  "startColumn": 21,
                  "endLine": 600,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 604,
                  "startColumn": 21,
                  "endLine": 604,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 610,
                  "startColumn": 17,
                  "endLine": 610,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 617,
                  "startColumn": 17,
                  "endLine": 617,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 622,
                  "startColumn": 98,
                  "endLine": 622,
                  "endColumn": 99
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 625,
                  "startColumn": 13,
                  "endLine": 625,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/BidirectionalDictionary.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 17,
                  "endLine": 69,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/BidirectionalDictionary.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 13,
                  "endLine": 67,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/BidirectionalDictionary.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 17,
                  "endLine": 77,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/BidirectionalDictionary.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 13,
                  "endLine": 75,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 21 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 344,
                  "startColumn": 30,
                  "endLine": 344,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 346,
                  "startColumn": 13,
                  "endLine": 346,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 349,
                  "startColumn": 17,
                  "endLine": 349,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 351,
                  "startColumn": 21,
                  "endLine": 351,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 351,
                  "startColumn": 39,
                  "endLine": 351,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 353,
                  "startColumn": 25,
                  "endLine": 353,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 359,
                  "startColumn": 17,
                  "endLine": 359,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 359,
                  "startColumn": 41,
                  "endLine": 359,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 361,
                  "startColumn": 21,
                  "endLine": 361,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 367,
                  "startColumn": 17,
                  "endLine": 367,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 369,
                  "startColumn": 21,
                  "endLine": 369,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 353,
                  "startColumn": 25,
                  "endLine": 353,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 351,
                  "startColumn": 21,
                  "endLine": 351,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 361,
                  "startColumn": 21,
                  "endLine": 361,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 359,
                  "startColumn": 22,
                  "endLine": 359,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 369,
                  "startColumn": 21,
                  "endLine": 369,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 367,
                  "startColumn": 17,
                  "endLine": 367,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 35 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 981,
                  "startColumn": 29,
                  "endLine": 981,
                  "endColumn": 54
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 989,
                  "startColumn": 13,
                  "endLine": 989,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 991,
                  "startColumn": 17,
                  "endLine": 991,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 995,
                  "startColumn": 21,
                  "endLine": 995,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 997,
                  "startColumn": 25,
                  "endLine": 997,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1002,
                  "startColumn": 29,
                  "endLine": 1002,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1006,
                  "startColumn": 29,
                  "endLine": 1006,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1010,
                  "startColumn": 33,
                  "endLine": 1010,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1019,
                  "startColumn": 25,
                  "endLine": 1019,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1022,
                  "startColumn": 72,
                  "endLine": 1022,
                  "endColumn": 74
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1024,
                  "startColumn": 29,
                  "endLine": 1024,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1030,
                  "startColumn": 21,
                  "endLine": 1030,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1035,
                  "startColumn": 68,
                  "endLine": 1035,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1039,
                  "startColumn": 25,
                  "endLine": 1039,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+1",
              "12": "+4 (incl 3 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+5 (incl 4 for nesting)",
              "5": "+1",
              "6": "+6 (incl 5 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+5 (incl 4 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/CollectionUtils.cs",
                "region": {
                  "startLine": 149,
                  "startColumn": 25,
                  "endLine": 149,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/CollectionUtils.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 21,
                  "endLine": 147,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 28 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 770,
                  "startColumn": 35,
                  "endLine": 770,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 774,
                  "startColumn": 13,
                  "endLine": 774,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 781,
                  "startColumn": 13,
                  "endLine": 781,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 784,
                  "startColumn": 17,
                  "endLine": 784,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 796,
                  "startColumn": 13,
                  "endLine": 796,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 799,
                  "startColumn": 17,
                  "endLine": 799,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 803,
                  "startColumn": 21,
                  "endLine": 803,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 803,
                  "startColumn": 31,
                  "endLine": 803,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 812,
                  "startColumn": 13,
                  "endLine": 812,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 816,
                  "startColumn": 17,
                  "endLine": 816,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 816,
                  "startColumn": 27,
                  "endLine": 816,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 824,
                  "startColumn": 17,
                  "endLine": 824,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 830,
                  "startColumn": 21,
                  "endLine": 830,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 834,
                  "startColumn": 25,
                  "endLine": 834,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 834,
                  "startColumn": 35,
                  "endLine": 834,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 848,
                  "startColumn": 13,
                  "endLine": 848,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 851,
                  "startColumn": 17,
                  "endLine": 851,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+4 (incl 3 for nesting)",
              "13": "+1",
              "14": "+1",
              "15": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 21 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 380,
                  "startColumn": 30,
                  "endLine": 380,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 382,
                  "startColumn": 13,
                  "endLine": 382,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 384,
                  "startColumn": 17,
                  "endLine": 384,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 386,
                  "startColumn": 21,
                  "endLine": 386,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 386,
                  "startColumn": 39,
                  "endLine": 386,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 388,
                  "startColumn": 25,
                  "endLine": 388,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 394,
                  "startColumn": 17,
                  "endLine": 394,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 394,
                  "startColumn": 41,
                  "endLine": 394,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 396,
                  "startColumn": 21,
                  "endLine": 396,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 403,
                  "startColumn": 17,
                  "endLine": 403,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 405,
                  "startColumn": 21,
                  "endLine": 405,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 388,
                  "startColumn": 25,
                  "endLine": 388,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 386,
                  "startColumn": 21,
                  "endLine": 386,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 396,
                  "startColumn": 21,
                  "endLine": 396,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 394,
                  "startColumn": 22,
                  "endLine": 394,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 405,
                  "startColumn": 21,
                  "endLine": 405,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 403,
                  "startColumn": 17,
                  "endLine": 403,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 21 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 417,
                  "startColumn": 30,
                  "endLine": 417,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 419,
                  "startColumn": 13,
                  "endLine": 419,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 422,
                  "startColumn": 17,
                  "endLine": 422,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 424,
                  "startColumn": 21,
                  "endLine": 424,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 424,
                  "startColumn": 39,
                  "endLine": 424,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 426,
                  "startColumn": 25,
                  "endLine": 426,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 432,
                  "startColumn": 17,
                  "endLine": 432,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 432,
                  "startColumn": 41,
                  "endLine": 432,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 434,
                  "startColumn": 21,
                  "endLine": 434,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 440,
                  "startColumn": 17,
                  "endLine": 440,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 442,
                  "startColumn": 21,
                  "endLine": 442,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 426,
                  "startColumn": 25,
                  "endLine": 426,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 424,
                  "startColumn": 21,
                  "endLine": 424,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 434,
                  "startColumn": 21,
                  "endLine": 434,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 432,
                  "startColumn": 22,
                  "endLine": 432,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 442,
                  "startColumn": 21,
                  "endLine": 442,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 440,
                  "startColumn": 17,
                  "endLine": 440,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3220",
          "level": "warning",
          "message": "Review this call, which partially matches an overload without 'params'. The partial match is 'BlockExpression Expression.Block(Expression arg0, Expression arg1)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 254,
                  "startColumn": 17,
                  "endLine": 266,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/CollectionUtils.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 39,
                  "endLine": 189,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/CollectionUtils.cs",
                "region": {
                  "startLine": 191,
                  "startColumn": 21,
                  "endLine": 191,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 25 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 453,
                  "startColumn": 30,
                  "endLine": 453,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 455,
                  "startColumn": 13,
                  "endLine": 455,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 457,
                  "startColumn": 17,
                  "endLine": 457,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 459,
                  "startColumn": 21,
                  "endLine": 459,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 459,
                  "startColumn": 39,
                  "endLine": 459,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 461,
                  "startColumn": 25,
                  "endLine": 461,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 467,
                  "startColumn": 17,
                  "endLine": 467,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 467,
                  "startColumn": 41,
                  "endLine": 467,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 469,
                  "startColumn": 21,
                  "endLine": 469,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 471,
                  "startColumn": 25,
                  "endLine": 471,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 478,
                  "startColumn": 17,
                  "endLine": 478,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 480,
                  "startColumn": 21,
                  "endLine": 480,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+3 (incl 2 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S4581",
          "level": "warning",
          "message": "Use 'Guid.NewGuid()' or 'Guid.Empty' or add arguments to this GUID instantiation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1096,
                  "startColumn": 28,
                  "endLine": 1096,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 23,
                  "endLine": 54,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 13,
                  "endLine": 61,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 13,
                  "endLine": 68,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 17,
                  "endLine": 70,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 71,
                  "endLine": 81,
                  "endColumn": 72
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 25,
                  "endLine": 83,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 25,
                  "endLine": 95,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 13,
                  "endLine": 103,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 17,
                  "endLine": 105,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 461,
                  "startColumn": 25,
                  "endLine": 461,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 459,
                  "startColumn": 21,
                  "endLine": 459,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 469,
                  "startColumn": 21,
                  "endLine": 469,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 467,
                  "startColumn": 22,
                  "endLine": 467,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 471,
                  "startColumn": 25,
                  "endLine": 471,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 469,
                  "startColumn": 21,
                  "endLine": 469,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 480,
                  "startColumn": 21,
                  "endLine": 480,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 478,
                  "startColumn": 17,
                  "endLine": 478,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 23 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 21,
                  "endLine": 70,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 13,
                  "endLine": 74,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 13,
                  "endLine": 87,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 13,
                  "endLine": 91,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 13,
                  "endLine": 96,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 17,
                  "endLine": 98,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 13,
                  "endLine": 104,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 13,
                  "endLine": 109,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 17,
                  "endLine": 111,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 13,
                  "endLine": 131,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 17,
                  "endLine": 135,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 141,
                  "startColumn": 13,
                  "endLine": 141,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 13,
                  "endLine": 146,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 13,
                  "endLine": 150,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 40,
                  "endLine": 150,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 17,
                  "endLine": 153,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 157,
                  "startColumn": 17,
                  "endLine": 157,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 21,
                  "endLine": 160,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+2 (incl 1 for nesting)",
              "15": "+1",
              "16": "+3 (incl 2 for nesting)",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3220",
          "level": "warning",
          "message": "Review this call, which partially matches an overload without 'params'. The partial match is 'BlockExpression Expression.Block(Expression arg0, Expression arg1)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 302,
                  "startColumn": 17,
                  "endLine": 314,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 36,
                  "endLine": 137,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3237",
          "level": "warning",
          "message": "Use the 'value' parameter in this property set accessor declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 32,
                  "endLine": 137,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 603,
                  "startColumn": 17,
                  "endLine": 603,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 601,
                  "startColumn": 13,
                  "endLine": 601,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'TokenType' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 259,
                  "startColumn": 31,
                  "endLine": 259,
                  "endColumn": 171
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this accessor to reduce its Cognitive Complexity from 54 to the 3 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 13,
                  "endLine": 174,
                  "endColumn": 16
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 17,
                  "endLine": 176,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 181,
                  "startColumn": 17,
                  "endLine": 181,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 181,
                  "startColumn": 51,
                  "endLine": 181,
                  "endColumn": 53
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 17,
                  "endLine": 186,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 29,
                  "endLine": 192,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 199,
                  "startColumn": 29,
                  "endLine": 199,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 201,
                  "startColumn": 33,
                  "endLine": 201,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 201,
                  "startColumn": 63,
                  "endLine": 201,
                  "endColumn": 65
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 205,
                  "startColumn": 33,
                  "endLine": 205,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 37,
                  "endLine": 207,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 209,
                  "startColumn": 41,
                  "endLine": 209,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 33,
                  "endLine": 216,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 56,
                  "endLine": 216,
                  "endColumn": 58
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 228,
                  "startColumn": 29,
                  "endLine": 228,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 230,
                  "startColumn": 33,
                  "endLine": 230,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 232,
                  "startColumn": 37,
                  "endLine": 232,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 232,
                  "startColumn": 62,
                  "endLine": 232,
                  "endColumn": 64
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 237,
                  "startColumn": 33,
                  "endLine": 237,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 37,
                  "endLine": 239,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 62,
                  "endLine": 239,
                  "endColumn": 64
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 241,
                  "startColumn": 41,
                  "endLine": 241,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 247,
                  "startColumn": 37,
                  "endLine": 247,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 247,
                  "startColumn": 69,
                  "endLine": 247,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+5 (incl 4 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "14": "+3 (incl 2 for nesting)",
              "15": "+4 (incl 3 for nesting)",
              "16": "+1",
              "17": "+1",
              "18": "+4 (incl 3 for nesting)",
              "19": "+1",
              "2": "+1",
              "20": "+5 (incl 4 for nesting)",
              "21": "+4 (incl 3 for nesting)",
              "22": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+3 (incl 2 for nesting)",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 241,
                  "startColumn": 41,
                  "endLine": 241,
                  "endColumn": 43
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 37,
                  "endLine": 239,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 103,
                  "endLine": 207,
                  "endColumn": 127
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 209,
                  "startColumn": 45,
                  "endLine": 209,
                  "endColumn": 114
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this unused method parameter 'schema'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 264,
                  "startColumn": 49,
                  "endLine": 264,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "True"
            }
          }
        },
        {
          "ruleId": "S2372",
          "level": "warning",
          "message": "Remove the exception throwing from this property getter, or refactor the property into a method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 194,
                  "startColumn": 33,
                  "endLine": 194,
                  "endColumn": 113
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2372",
          "level": "warning",
          "message": "Remove the exception throwing from this property getter, or refactor the property into a method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 259,
                  "startColumn": 25,
                  "endLine": 259,
                  "endColumn": 172
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 24 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 30,
                  "endLine": 48,
                  "endColumn": 42
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 13,
                  "endLine": 50,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 36,
                  "endLine": 50,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 17,
                  "endLine": 53,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 47,
                  "endLine": 53,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 13,
                  "endLine": 61,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 21,
                  "endLine": 72,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 21,
                  "endLine": 77,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 21,
                  "endLine": 82,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 21,
                  "endLine": 96,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 21,
                  "endLine": 101,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 21,
                  "endLine": 106,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 21,
                  "endLine": 117,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 66,
                  "endLine": 126,
                  "endColumn": 67
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.Async.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 66,
                  "endLine": 128,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+2 (incl 1 for nesting)",
              "12": "+2 (incl 1 for nesting)",
              "13": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+2 (incl 1 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 135 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1291,
                  "startColumn": 35,
                  "endLine": 1291,
                  "endColumn": 50
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1299,
                  "startColumn": 13,
                  "endLine": 1299,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1305,
                  "startColumn": 13,
                  "endLine": 1305,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1308,
                  "startColumn": 17,
                  "endLine": 1308,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1328,
                  "startColumn": 13,
                  "endLine": 1328,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1331,
                  "startColumn": 17,
                  "endLine": 1331,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1334,
                  "startColumn": 25,
                  "endLine": 1334,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1338,
                  "startColumn": 25,
                  "endLine": 1338,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1343,
                  "startColumn": 25,
                  "endLine": 1343,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1353,
                  "startColumn": 25,
                  "endLine": 1353,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1357,
                  "startColumn": 25,
                  "endLine": 1357,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1363,
                  "startColumn": 25,
                  "endLine": 1363,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1368,
                  "startColumn": 25,
                  "endLine": 1368,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1375,
                  "startColumn": 25,
                  "endLine": 1375,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1387,
                  "startColumn": 25,
                  "endLine": 1387,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1390,
                  "startColumn": 29,
                  "endLine": 1390,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1390,
                  "startColumn": 41,
                  "endLine": 1390,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1397,
                  "startColumn": 29,
                  "endLine": 1397,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1403,
                  "startColumn": 25,
                  "endLine": 1403,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1409,
                  "startColumn": 25,
                  "endLine": 1409,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1409,
                  "startColumn": 37,
                  "endLine": 1409,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1414,
                  "startColumn": 25,
                  "endLine": 1414,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1414,
                  "startColumn": 40,
                  "endLine": 1414,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1417,
                  "startColumn": 29,
                  "endLine": 1417,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1420,
                  "startColumn": 33,
                  "endLine": 1420,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1422,
                  "startColumn": 37,
                  "endLine": 1422,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1424,
                  "startColumn": 33,
                  "endLine": 1424,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1424,
                  "startColumn": 46,
                  "endLine": 1424,
                  "endColumn": 48
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1426,
                  "startColumn": 37,
                  "endLine": 1426,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1433,
                  "startColumn": 25,
                  "endLine": 1433,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1433,
                  "startColumn": 49,
                  "endLine": 1433,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1433,
                  "startColumn": 74,
                  "endLine": 1433,
                  "endColumn": 76
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1433,
                  "startColumn": 149,
                  "endLine": 1433,
                  "endColumn": 151
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1433,
                  "startColumn": 181,
                  "endLine": 1433,
                  "endColumn": 183
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1433,
                  "startColumn": 211,
                  "endLine": 1433,
                  "endColumn": 213
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1433,
                  "startColumn": 242,
                  "endLine": 1433,
                  "endColumn": 244
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1435,
                  "startColumn": 29,
                  "endLine": 1435,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1439,
                  "startColumn": 29,
                  "endLine": 1439,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1445,
                  "startColumn": 25,
                  "endLine": 1445,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1447,
                  "startColumn": 29,
                  "endLine": 1447,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1462,
                  "startColumn": 13,
                  "endLine": 1462,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1466,
                  "startColumn": 13,
                  "endLine": 1466,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1471,
                  "startColumn": 13,
                  "endLine": 1471,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1474,
                  "startColumn": 17,
                  "endLine": 1474,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1478,
                  "startColumn": 17,
                  "endLine": 1478,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1480,
                  "startColumn": 21,
                  "endLine": 1480,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1483,
                  "startColumn": 25,
                  "endLine": 1483,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1488,
                  "startColumn": 21,
                  "endLine": 1488,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1488,
                  "startColumn": 59,
                  "endLine": 1488,
                  "endColumn": 61
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1494,
                  "startColumn": 17,
                  "endLine": 1494,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1499,
                  "startColumn": 13,
                  "endLine": 1499,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1501,
                  "startColumn": 17,
                  "endLine": 1501,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1501,
                  "startColumn": 36,
                  "endLine": 1501,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1505,
                  "startColumn": 17,
                  "endLine": 1505,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1507,
                  "startColumn": 21,
                  "endLine": 1507,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1509,
                  "startColumn": 44,
                  "endLine": 1509,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1512,
                  "startColumn": 21,
                  "endLine": 1512,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1516,
                  "startColumn": 21,
                  "endLine": 1516,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1524,
                  "startColumn": 13,
                  "endLine": 1524,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "14": "+4 (incl 3 for nesting)",
              "15": "+1",
              "16": "+4 (incl 3 for nesting)",
              "17": "+3 (incl 2 for nesting)",
              "18": "+3 (incl 2 for nesting)",
              "19": "+1",
              "2": "+2 (incl 1 for nesting)",
              "20": "+3 (incl 2 for nesting)",
              "21": "+1",
              "22": "+4 (incl 3 for nesting)",
              "23": "+5 (incl 4 for nesting)",
              "24": "+6 (incl 5 for nesting)",
              "25": "+5 (incl 4 for nesting)",
              "26": "+1",
              "27": "+6 (incl 5 for nesting)",
              "28": "+3 (incl 2 for nesting)",
              "29": "+1",
              "3": "+1",
              "30": "+1",
              "31": "+1",
              "32": "+1",
              "33": "+1",
              "34": "+1",
              "35": "+4 (incl 3 for nesting)",
              "36": "+1",
              "37": "+1",
              "38": "+4 (incl 3 for nesting)",
              "39": "+1",
              "4": "+2 (incl 1 for nesting)",
              "40": "+1",
              "41": "+1",
              "42": "+2 (incl 1 for nesting)",
              "43": "+2 (incl 1 for nesting)",
              "44": "+3 (incl 2 for nesting)",
              "45": "+4 (incl 3 for nesting)",
              "46": "+1",
              "47": "+1",
              "48": "+1",
              "49": "+1",
              "5": "+3 (incl 2 for nesting)",
              "50": "+2 (incl 1 for nesting)",
              "51": "+1",
              "52": "+2 (incl 1 for nesting)",
              "53": "+3 (incl 2 for nesting)",
              "54": "+4 (incl 3 for nesting)",
              "55": "+3 (incl 2 for nesting)",
              "56": "+1",
              "57": "+1",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S907",
          "level": "warning",
          "message": "Remove this use of 'goto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1422,
                  "startColumn": 37,
                  "endLine": 1422,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S907",
          "level": "warning",
          "message": "Remove this use of 'goto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 1426,
                  "startColumn": 37,
                  "endLine": 1426,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 348,
                  "startColumn": 17,
                  "endLine": 348,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 346,
                  "startColumn": 13,
                  "endLine": 346,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Utilities/CollectionUtils.cs",
                "region": {
                  "startLine": 320,
                  "startColumn": 23,
                  "endLine": 320,
                  "endColumn": 103
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 23 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 34,
                  "endLine": 112,
                  "endColumn": 53
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 13,
                  "endLine": 116,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 17,
                  "endLine": 120,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 25,
                  "endLine": 123,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 29,
                  "endLine": 125,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 25,
                  "endLine": 131,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 25,
                  "endLine": 151,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 175,
                  "startColumn": 25,
                  "endLine": 175,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 180,
                  "startColumn": 25,
                  "endLine": 180,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 29,
                  "endLine": 183,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 56,
                  "endLine": 183,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+4 (incl 3 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 31 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 247,
                  "startColumn": 29,
                  "endLine": 247,
                  "endColumn": 36
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 249,
                  "startColumn": 13,
                  "endLine": 249,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 253,
                  "startColumn": 13,
                  "endLine": 253,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 257,
                  "startColumn": 13,
                  "endLine": 257,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 262,
                  "startColumn": 13,
                  "endLine": 262,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 276,
                  "startColumn": 21,
                  "endLine": 276,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 276,
                  "startColumn": 39,
                  "endLine": 276,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 21,
                  "endLine": 280,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 44,
                  "endLine": 280,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 284,
                  "startColumn": 21,
                  "endLine": 284,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 301,
                  "startColumn": 21,
                  "endLine": 301,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 301,
                  "startColumn": 39,
                  "endLine": 301,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 321,
                  "startColumn": 21,
                  "endLine": 321,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 329,
                  "startColumn": 25,
                  "endLine": 329,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 333,
                  "startColumn": 25,
                  "endLine": 333,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 342,
                  "startColumn": 21,
                  "endLine": 342,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 345,
                  "startColumn": 25,
                  "endLine": 345,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 354,
                  "startColumn": 21,
                  "endLine": 354,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 364,
                  "startColumn": 21,
                  "endLine": 364,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 375,
                  "startColumn": 21,
                  "endLine": 375,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 384,
                  "startColumn": 21,
                  "endLine": 384,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+1",
              "14": "+1",
              "15": "+3 (incl 2 for nesting)",
              "16": "+2 (incl 1 for nesting)",
              "17": "+2 (incl 1 for nesting)",
              "18": "+2 (incl 1 for nesting)",
              "19": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 38 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 291,
                  "startColumn": 23,
                  "endLine": 291,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 293,
                  "startColumn": 13,
                  "endLine": 293,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 13,
                  "endLine": 299,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 304,
                  "startColumn": 17,
                  "endLine": 304,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 307,
                  "startColumn": 21,
                  "endLine": 307,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 313,
                  "startColumn": 17,
                  "endLine": 313,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 315,
                  "startColumn": 21,
                  "endLine": 315,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 315,
                  "startColumn": 60,
                  "endLine": 315,
                  "endColumn": 62
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 318,
                  "startColumn": 25,
                  "endLine": 318,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 326,
                  "startColumn": 17,
                  "endLine": 326,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 342,
                  "startColumn": 17,
                  "endLine": 342,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 344,
                  "startColumn": 21,
                  "endLine": 344,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 344,
                  "startColumn": 60,
                  "endLine": 344,
                  "endColumn": 62
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 383,
                  "startColumn": 17,
                  "endLine": 383,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 387,
                  "startColumn": 21,
                  "endLine": 387,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 392,
                  "startColumn": 21,
                  "endLine": 392,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 394,
                  "startColumn": 25,
                  "endLine": 394,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 394,
                  "startColumn": 64,
                  "endLine": 394,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "14": "+3 (incl 2 for nesting)",
              "15": "+4 (incl 3 for nesting)",
              "16": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+4 (incl 3 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S2178",
          "level": "warning",
          "message": "Correct this '&' to '&&'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 288,
                  "startColumn": 29,
                  "endLine": 288,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 315,
                  "startColumn": 21,
                  "endLine": 315,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 313,
                  "startColumn": 17,
                  "endLine": 313,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 344,
                  "startColumn": 21,
                  "endLine": 344,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 342,
                  "startColumn": 17,
                  "endLine": 342,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 394,
                  "startColumn": 25,
                  "endLine": 394,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 392,
                  "startColumn": 21,
                  "endLine": 392,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "Use a constructor overloads that allows a more meaningful exception message to be provided.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 613,
                  "startColumn": 27,
                  "endLine": 613,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 500,
                  "startColumn": 22,
                  "endLine": 500,
                  "endColumn": 42
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 503,
                  "startColumn": 13,
                  "endLine": 503,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 508,
                  "startColumn": 17,
                  "endLine": 508,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 514,
                  "startColumn": 13,
                  "endLine": 514,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 535,
                  "startColumn": 21,
                  "endLine": 535,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 546,
                  "startColumn": 21,
                  "endLine": 546,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 554,
                  "startColumn": 21,
                  "endLine": 554,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 562,
                  "startColumn": 21,
                  "endLine": 562,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 570,
                  "startColumn": 21,
                  "endLine": 570,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 578,
                  "startColumn": 21,
                  "endLine": 578,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 585,
                  "startColumn": 21,
                  "endLine": 585,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 593,
                  "startColumn": 21,
                  "endLine": 593,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+2 (incl 1 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 413,
                  "startColumn": 29,
                  "endLine": 413,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 415,
                  "startColumn": 13,
                  "endLine": 415,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 415,
                  "startColumn": 32,
                  "endLine": 415,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 417,
                  "startColumn": 17,
                  "endLine": 417,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 417,
                  "startColumn": 53,
                  "endLine": 417,
                  "endColumn": 55
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 460,
                  "startColumn": 17,
                  "endLine": 460,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 460,
                  "startColumn": 35,
                  "endLine": 460,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 462,
                  "startColumn": 21,
                  "endLine": 462,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 462,
                  "startColumn": 38,
                  "endLine": 462,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 471,
                  "startColumn": 21,
                  "endLine": 471,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 491,
                  "startColumn": 17,
                  "endLine": 491,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 491,
                  "startColumn": 40,
                  "endLine": 491,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 493,
                  "startColumn": 21,
                  "endLine": 493,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 493,
                  "startColumn": 38,
                  "endLine": 493,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 502,
                  "startColumn": 21,
                  "endLine": 502,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 522,
                  "startColumn": 17,
                  "endLine": 522,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 522,
                  "startColumn": 38,
                  "endLine": 522,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 525,
                  "startColumn": 21,
                  "endLine": 525,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 525,
                  "startColumn": 38,
                  "endLine": 525,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 534,
                  "startColumn": 21,
                  "endLine": 534,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "14": "+1",
              "15": "+1",
              "16": "+2 (incl 1 for nesting)",
              "17": "+1",
              "18": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 417,
                  "startColumn": 17,
                  "endLine": 417,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 415,
                  "startColumn": 13,
                  "endLine": 415,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1940",
          "level": "warning",
          "message": "Use the opposite operator ('<=') instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaModelBuilder.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 17,
                  "endLine": 144,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3963",
          "level": "warning",
          "message": "Initialize all 'static fields' inline and remove the 'static constructor'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 447,
                  "startColumn": 9,
                  "endLine": 451,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonReader.Async.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 17,
                  "endLine": 89,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 44 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 617,
                  "startColumn": 22,
                  "endLine": 617,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 619,
                  "startColumn": 13,
                  "endLine": 619,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 621,
                  "startColumn": 83,
                  "endLine": 621,
                  "endColumn": 85
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 623,
                  "startColumn": 17,
                  "endLine": 623,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 623,
                  "startColumn": 37,
                  "endLine": 623,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 625,
                  "startColumn": 21,
                  "endLine": 625,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 627,
                  "startColumn": 25,
                  "endLine": 627,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 638,
                  "startColumn": 21,
                  "endLine": 638,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 638,
                  "startColumn": 64,
                  "endLine": 638,
                  "endColumn": 66
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 645,
                  "startColumn": 25,
                  "endLine": 645,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 647,
                  "startColumn": 29,
                  "endLine": 647,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 654,
                  "startColumn": 25,
                  "endLine": 654,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 656,
                  "startColumn": 29,
                  "endLine": 656,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 658,
                  "startColumn": 33,
                  "endLine": 658,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 660,
                  "startColumn": 37,
                  "endLine": 660,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+5 (incl 4 for nesting)",
              "12": "+6 (incl 5 for nesting)",
              "13": "+7 (incl 6 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+4 (incl 3 for nesting)",
              "9": "+5 (incl 4 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 660,
                  "startColumn": 37,
                  "endLine": 660,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 658,
                  "startColumn": 33,
                  "endLine": 658,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'Type' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonPosition.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 27,
                  "endLine": 70,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 783,
                  "startColumn": 22,
                  "endLine": 783,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 785,
                  "startColumn": 13,
                  "endLine": 785,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 790,
                  "startColumn": 13,
                  "endLine": 790,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 799,
                  "startColumn": 13,
                  "endLine": 799,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 801,
                  "startColumn": 17,
                  "endLine": 801,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 805,
                  "startColumn": 17,
                  "endLine": 805,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 805,
                  "startColumn": 45,
                  "endLine": 805,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 811,
                  "startColumn": 13,
                  "endLine": 811,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 813,
                  "startColumn": 17,
                  "endLine": 813,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 817,
                  "startColumn": 17,
                  "endLine": 817,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 817,
                  "startColumn": 45,
                  "endLine": 817,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 823,
                  "startColumn": 13,
                  "endLine": 823,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 847,
                  "startColumn": 17,
                  "endLine": 847,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1199",
          "level": "warning",
          "message": "Extract this nested code block into a separate method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 843,
                  "startColumn": 17,
                  "endLine": 843,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 874,
                  "startColumn": 22,
                  "endLine": 874,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 876,
                  "startColumn": 13,
                  "endLine": 876,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 881,
                  "startColumn": 13,
                  "endLine": 881,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 890,
                  "startColumn": 13,
                  "endLine": 890,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 892,
                  "startColumn": 17,
                  "endLine": 892,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 896,
                  "startColumn": 17,
                  "endLine": 896,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 896,
                  "startColumn": 45,
                  "endLine": 896,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 902,
                  "startColumn": 13,
                  "endLine": 902,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 904,
                  "startColumn": 17,
                  "endLine": 904,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 908,
                  "startColumn": 17,
                  "endLine": 908,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 908,
                  "startColumn": 45,
                  "endLine": 908,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 914,
                  "startColumn": 13,
                  "endLine": 914,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 918,
                  "startColumn": 17,
                  "endLine": 918,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 31 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 252,
                  "startColumn": 34,
                  "endLine": 252,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 256,
                  "startColumn": 13,
                  "endLine": 256,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 260,
                  "startColumn": 17,
                  "endLine": 260,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 263,
                  "startColumn": 25,
                  "endLine": 263,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 265,
                  "startColumn": 29,
                  "endLine": 265,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 270,
                  "startColumn": 25,
                  "endLine": 270,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 287,
                  "startColumn": 25,
                  "endLine": 287,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 289,
                  "startColumn": 29,
                  "endLine": 289,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 301,
                  "startColumn": 25,
                  "endLine": 301,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 315,
                  "startColumn": 25,
                  "endLine": 315,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 315,
                  "startColumn": 102,
                  "endLine": 315,
                  "endColumn": 104
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 319,
                  "startColumn": 25,
                  "endLine": 319,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 365,
                  "startColumn": 25,
                  "endLine": 365,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 372,
                  "startColumn": 25,
                  "endLine": 372,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 372,
                  "startColumn": 56,
                  "endLine": 372,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+3 (incl 2 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+1",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+3 (incl 2 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 973,
                  "startColumn": 44,
                  "endLine": 973,
                  "endColumn": 73
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 975,
                  "startColumn": 25,
                  "endLine": 975,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 621,
                  "startColumn": 34,
                  "endLine": 621,
                  "endColumn": 134
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 23 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 722,
                  "startColumn": 30,
                  "endLine": 722,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 724,
                  "startColumn": 13,
                  "endLine": 724,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 724,
                  "startColumn": 36,
                  "endLine": 724,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 727,
                  "startColumn": 17,
                  "endLine": 727,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 727,
                  "startColumn": 47,
                  "endLine": 727,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 734,
                  "startColumn": 13,
                  "endLine": 734,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 749,
                  "startColumn": 21,
                  "endLine": 749,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 753,
                  "startColumn": 21,
                  "endLine": 753,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 757,
                  "startColumn": 21,
                  "endLine": 757,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 767,
                  "startColumn": 21,
                  "endLine": 767,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 773,
                  "startColumn": 21,
                  "endLine": 773,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 777,
                  "startColumn": 21,
                  "endLine": 777,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 781,
                  "startColumn": 21,
                  "endLine": 781,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 785,
                  "startColumn": 21,
                  "endLine": 785,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 798,
                  "startColumn": 21,
                  "endLine": 798,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 802,
                  "startColumn": 21,
                  "endLine": 802,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 812,
                  "startColumn": 56,
                  "endLine": 812,
                  "endColumn": 57
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 815,
                  "startColumn": 56,
                  "endLine": 815,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "14": "+1",
              "15": "+2 (incl 1 for nesting)",
              "16": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 46 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 383,
                  "startColumn": 28,
                  "endLine": 383,
                  "endColumn": 53
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 392,
                  "startColumn": 13,
                  "endLine": 392,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 394,
                  "startColumn": 17,
                  "endLine": 394,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 397,
                  "startColumn": 25,
                  "endLine": 397,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 401,
                  "startColumn": 29,
                  "endLine": 401,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 411,
                  "startColumn": 25,
                  "endLine": 411,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 424,
                  "startColumn": 25,
                  "endLine": 424,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 453,
                  "startColumn": 33,
                  "endLine": 453,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 458,
                  "startColumn": 33,
                  "endLine": 458,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 463,
                  "startColumn": 37,
                  "endLine": 463,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 468,
                  "startColumn": 41,
                  "endLine": 468,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 468,
                  "startColumn": 118,
                  "endLine": 468,
                  "endColumn": 120
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 475,
                  "startColumn": 45,
                  "endLine": 475,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 479,
                  "startColumn": 45,
                  "endLine": 479,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 485,
                  "startColumn": 45,
                  "endLine": 485,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 496,
                  "startColumn": 41,
                  "endLine": 496,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 529,
                  "startColumn": 25,
                  "endLine": 529,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+7 (incl 6 for nesting)",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+3 (incl 2 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+5 (incl 4 for nesting)",
              "9": "+6 (incl 5 for nesting)"
            }
          }
        },
        {
          "ruleId": "S2328",
          "level": "warning",
          "message": "Refactor 'GetHashCode' to not reference mutable fields.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 878,
                  "startColumn": 29,
                  "endLine": 878,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 880,
                  "startColumn": 17,
                  "endLine": 880,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Remove this use of '_value' or make it 'readonly'."
            }
          }
        },
        {
          "ruleId": "S1199",
          "level": "warning",
          "message": "Extract this nested code block into a separate method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/TraceJsonWriter.cs",
                "region": {
                  "startLine": 335,
                  "startColumn": 13,
                  "endLine": 335,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 31 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 651,
                  "startColumn": 29,
                  "endLine": 651,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 653,
                  "startColumn": 13,
                  "endLine": 653,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 657,
                  "startColumn": 17,
                  "endLine": 657,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 664,
                  "startColumn": 13,
                  "endLine": 664,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 668,
                  "startColumn": 13,
                  "endLine": 668,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 672,
                  "startColumn": 13,
                  "endLine": 672,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 676,
                  "startColumn": 13,
                  "endLine": 676,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 680,
                  "startColumn": 13,
                  "endLine": 680,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 684,
                  "startColumn": 13,
                  "endLine": 684,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 688,
                  "startColumn": 13,
                  "endLine": 688,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 692,
                  "startColumn": 13,
                  "endLine": 692,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 696,
                  "startColumn": 13,
                  "endLine": 696,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 700,
                  "startColumn": 13,
                  "endLine": 700,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 704,
                  "startColumn": 13,
                  "endLine": 704,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 708,
                  "startColumn": 13,
                  "endLine": 708,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 713,
                  "startColumn": 13,
                  "endLine": 713,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 718,
                  "startColumn": 13,
                  "endLine": 718,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 722,
                  "startColumn": 13,
                  "endLine": 722,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 726,
                  "startColumn": 13,
                  "endLine": 726,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 730,
                  "startColumn": 13,
                  "endLine": 730,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 734,
                  "startColumn": 13,
                  "endLine": 734,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 741,
                  "startColumn": 13,
                  "endLine": 741,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 745,
                  "startColumn": 13,
                  "endLine": 745,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 749,
                  "startColumn": 13,
                  "endLine": 749,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 753,
                  "startColumn": 13,
                  "endLine": 753,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 757,
                  "startColumn": 13,
                  "endLine": 757,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 762,
                  "startColumn": 13,
                  "endLine": 762,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 766,
                  "startColumn": 13,
                  "endLine": 766,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 770,
                  "startColumn": 13,
                  "endLine": 770,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 774,
                  "startColumn": 13,
                  "endLine": 774,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 778,
                  "startColumn": 13,
                  "endLine": 778,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+1",
              "16": "+1",
              "17": "+1",
              "18": "+1",
              "19": "+1",
              "2": "+1",
              "20": "+1",
              "21": "+1",
              "22": "+1",
              "23": "+1",
              "24": "+1",
              "25": "+1",
              "26": "+1",
              "27": "+1",
              "28": "+1",
              "29": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 45 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 228,
                  "startColumn": 28,
                  "endLine": 228,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 13,
                  "endLine": 235,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 17,
                  "endLine": 238,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 242,
                  "startColumn": 21,
                  "endLine": 242,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 242,
                  "startColumn": 58,
                  "endLine": 242,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 246,
                  "startColumn": 21,
                  "endLine": 246,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 246,
                  "startColumn": 34,
                  "endLine": 246,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 256,
                  "startColumn": 13,
                  "endLine": 256,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 266,
                  "startColumn": 13,
                  "endLine": 266,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 271,
                  "startColumn": 13,
                  "endLine": 271,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 278,
                  "startColumn": 13,
                  "endLine": 278,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 283,
                  "startColumn": 13,
                  "endLine": 283,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 285,
                  "startColumn": 17,
                  "endLine": 285,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 298,
                  "startColumn": 70,
                  "endLine": 298,
                  "endColumn": 72
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 301,
                  "startColumn": 25,
                  "endLine": 301,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 304,
                  "startColumn": 107,
                  "endLine": 304,
                  "endColumn": 108
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 310,
                  "startColumn": 25,
                  "endLine": 310,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 310,
                  "startColumn": 74,
                  "endLine": 310,
                  "endColumn": 76
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 315,
                  "startColumn": 29,
                  "endLine": 315,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 326,
                  "startColumn": 29,
                  "endLine": 326,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 338,
                  "startColumn": 25,
                  "endLine": 338,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 343,
                  "startColumn": 29,
                  "endLine": 343,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 228,
                  "startColumn": 28,
                  "endLine": 228,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+1",
              "13": "+3 (incl 2 for nesting)",
              "14": "+4 (incl 3 for nesting)",
              "15": "+3 (incl 2 for nesting)",
              "16": "+1",
              "17": "+4 (incl 3 for nesting)",
              "18": "+3 (incl 2 for nesting)",
              "19": "+3 (incl 2 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "20": "+4 (incl 3 for nesting)",
              "21": "+1 (recursion)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 758,
                  "startColumn": 28,
                  "endLine": 758,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 762,
                  "startColumn": 13,
                  "endLine": 762,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 766,
                  "startColumn": 17,
                  "endLine": 766,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 769,
                  "startColumn": 25,
                  "endLine": 769,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 771,
                  "startColumn": 29,
                  "endLine": 771,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 776,
                  "startColumn": 25,
                  "endLine": 776,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 788,
                  "startColumn": 25,
                  "endLine": 788,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 788,
                  "startColumn": 48,
                  "endLine": 788,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 792,
                  "startColumn": 25,
                  "endLine": 792,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 38 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 660,
                  "startColumn": 28,
                  "endLine": 660,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 667,
                  "startColumn": 13,
                  "endLine": 667,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 674,
                  "startColumn": 13,
                  "endLine": 674,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 678,
                  "startColumn": 13,
                  "endLine": 678,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 682,
                  "startColumn": 13,
                  "endLine": 682,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 691,
                  "startColumn": 13,
                  "endLine": 691,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 693,
                  "startColumn": 17,
                  "endLine": 693,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 696,
                  "startColumn": 25,
                  "endLine": 696,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 698,
                  "startColumn": 29,
                  "endLine": 698,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 700,
                  "startColumn": 33,
                  "endLine": 700,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 709,
                  "startColumn": 25,
                  "endLine": 709,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 718,
                  "startColumn": 25,
                  "endLine": 718,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 720,
                  "startColumn": 29,
                  "endLine": 720,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 722,
                  "startColumn": 33,
                  "endLine": 722,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 734,
                  "startColumn": 25,
                  "endLine": 734,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 743,
                  "startColumn": 25,
                  "endLine": 743,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+4 (incl 3 for nesting)",
              "12": "+5 (incl 4 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "14": "+3 (incl 2 for nesting)",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+5 (incl 4 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 832,
                  "startColumn": 34,
                  "endLine": 832,
                  "endColumn": 154
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 720,
                  "startColumn": 29,
                  "endLine": 720,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 718,
                  "startColumn": 25,
                  "endLine": 718,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 722,
                  "startColumn": 33,
                  "endLine": 722,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 720,
                  "startColumn": 29,
                  "endLine": 720,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 22 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 916,
                  "startColumn": 23,
                  "endLine": 916,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 918,
                  "startColumn": 13,
                  "endLine": 918,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 918,
                  "startColumn": 34,
                  "endLine": 918,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 923,
                  "startColumn": 13,
                  "endLine": 923,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 928,
                  "startColumn": 13,
                  "endLine": 928,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 928,
                  "startColumn": 47,
                  "endLine": 928,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 933,
                  "startColumn": 13,
                  "endLine": 933,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 938,
                  "startColumn": 13,
                  "endLine": 938,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 938,
                  "startColumn": 44,
                  "endLine": 938,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 943,
                  "startColumn": 13,
                  "endLine": 943,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 948,
                  "startColumn": 13,
                  "endLine": 948,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 948,
                  "startColumn": 45,
                  "endLine": 948,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 953,
                  "startColumn": 13,
                  "endLine": 953,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 958,
                  "startColumn": 13,
                  "endLine": 958,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 958,
                  "startColumn": 30,
                  "endLine": 958,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 963,
                  "startColumn": 13,
                  "endLine": 963,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 968,
                  "startColumn": 13,
                  "endLine": 968,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 968,
                  "startColumn": 38,
                  "endLine": 968,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 973,
                  "startColumn": 13,
                  "endLine": 973,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 978,
                  "startColumn": 13,
                  "endLine": 978,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 980,
                  "startColumn": 17,
                  "endLine": 980,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 980,
                  "startColumn": 58,
                  "endLine": 980,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+1",
              "16": "+1",
              "17": "+1",
              "18": "+1",
              "19": "+2 (incl 1 for nesting)",
              "2": "+1",
              "20": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 863,
                  "startColumn": 34,
                  "endLine": 863,
                  "endColumn": 154
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 980,
                  "startColumn": 17,
                  "endLine": 980,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 978,
                  "startColumn": 13,
                  "endLine": 978,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 562,
                  "startColumn": 21,
                  "endLine": 562,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1905",
          "level": "warning",
          "message": "Remove this unnecessary cast to 'double'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 652,
                  "startColumn": 29,
                  "endLine": 652,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 24 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1087,
                  "startColumn": 31,
                  "endLine": 1087,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1093,
                  "startColumn": 13,
                  "endLine": 1093,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1093,
                  "startColumn": 37,
                  "endLine": 1093,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1100,
                  "startColumn": 13,
                  "endLine": 1100,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1100,
                  "startColumn": 45,
                  "endLine": 1100,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1107,
                  "startColumn": 13,
                  "endLine": 1107,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1107,
                  "startColumn": 47,
                  "endLine": 1107,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1114,
                  "startColumn": 13,
                  "endLine": 1114,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1114,
                  "startColumn": 46,
                  "endLine": 1114,
                  "endColumn": 48
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1121,
                  "startColumn": 13,
                  "endLine": 1121,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1121,
                  "startColumn": 47,
                  "endLine": 1121,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1128,
                  "startColumn": 13,
                  "endLine": 1128,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1128,
                  "startColumn": 34,
                  "endLine": 1128,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1135,
                  "startColumn": 13,
                  "endLine": 1135,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1135,
                  "startColumn": 38,
                  "endLine": 1135,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1142,
                  "startColumn": 17,
                  "endLine": 1142,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1141,
                  "startColumn": 69,
                  "endLine": 1141,
                  "endColumn": 71
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1148,
                  "startColumn": 13,
                  "endLine": 1148,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1154,
                  "startColumn": 13,
                  "endLine": 1154,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1158,
                  "startColumn": 13,
                  "endLine": 1158,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1162,
                  "startColumn": 13,
                  "endLine": 1162,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1166,
                  "startColumn": 13,
                  "endLine": 1166,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1170,
                  "startColumn": 13,
                  "endLine": 1170,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1174,
                  "startColumn": 13,
                  "endLine": 1174,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1178,
                  "startColumn": 13,
                  "endLine": 1178,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+1",
              "16": "+1",
              "17": "+1",
              "18": "+1",
              "19": "+1",
              "2": "+1",
              "20": "+1",
              "21": "+1",
              "22": "+1",
              "23": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1871",
          "level": "warning",
          "message": "Either merge this branch with the identical one on line 799 or change one of the implementations.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 804,
                  "startColumn": 13,
                  "endLine": 808,
                  "endColumn": 14
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 799,
                  "startColumn": 13,
                  "endLine": 802,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 25 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 861,
                  "startColumn": 28,
                  "endLine": 861,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 865,
                  "startColumn": 13,
                  "endLine": 865,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 872,
                  "startColumn": 17,
                  "endLine": 872,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 875,
                  "startColumn": 21,
                  "endLine": 875,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 877,
                  "startColumn": 25,
                  "endLine": 877,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 879,
                  "startColumn": 29,
                  "endLine": 879,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 884,
                  "startColumn": 25,
                  "endLine": 884,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 891,
                  "startColumn": 21,
                  "endLine": 891,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 895,
                  "startColumn": 21,
                  "endLine": 895,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 901,
                  "startColumn": 21,
                  "endLine": 901,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 907,
                  "startColumn": 21,
                  "endLine": 907,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 913,
                  "startColumn": 21,
                  "endLine": 913,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 918,
                  "startColumn": 21,
                  "endLine": 918,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 929,
                  "startColumn": 17,
                  "endLine": 929,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 940,
                  "startColumn": 13,
                  "endLine": 940,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+1",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+5 (incl 4 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 971,
                  "startColumn": 17,
                  "endLine": 972,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.Async.cs",
                "region": {
                  "startLine": 1217,
                  "startColumn": 34,
                  "endLine": 1217,
                  "endColumn": 134
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 45 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1167,
                  "startColumn": 37,
                  "endLine": 1167,
                  "endColumn": 57
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1172,
                  "startColumn": 13,
                  "endLine": 1172,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1175,
                  "startColumn": 21,
                  "endLine": 1175,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1179,
                  "startColumn": 21,
                  "endLine": 1179,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1186,
                  "startColumn": 21,
                  "endLine": 1186,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1190,
                  "startColumn": 25,
                  "endLine": 1190,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1193,
                  "startColumn": 33,
                  "endLine": 1193,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1205,
                  "startColumn": 33,
                  "endLine": 1205,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1205,
                  "startColumn": 110,
                  "endLine": 1205,
                  "endColumn": 112
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1209,
                  "startColumn": 33,
                  "endLine": 1209,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1225,
                  "startColumn": 33,
                  "endLine": 1225,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1235,
                  "startColumn": 33,
                  "endLine": 1235,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1241,
                  "startColumn": 70,
                  "endLine": 1241,
                  "endColumn": 71
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1242,
                  "startColumn": 33,
                  "endLine": 1242,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1264,
                  "startColumn": 33,
                  "endLine": 1264,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1264,
                  "startColumn": 66,
                  "endLine": 1264,
                  "endColumn": 68
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1286,
                  "startColumn": 33,
                  "endLine": 1286,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+4 (incl 3 for nesting)",
              "11": "+4 (incl 3 for nesting)",
              "12": "+4 (incl 3 for nesting)",
              "13": "+4 (incl 3 for nesting)",
              "14": "+1",
              "15": "+4 (incl 3 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 57 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1694,
                  "startColumn": 30,
                  "endLine": 1694,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1696,
                  "startColumn": 13,
                  "endLine": 1696,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1698,
                  "startColumn": 17,
                  "endLine": 1698,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1703,
                  "startColumn": 69,
                  "endLine": 1703,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1707,
                  "startColumn": 69,
                  "endLine": 1707,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1711,
                  "startColumn": 69,
                  "endLine": 1711,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1715,
                  "startColumn": 69,
                  "endLine": 1715,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1719,
                  "startColumn": 69,
                  "endLine": 1719,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1723,
                  "startColumn": 69,
                  "endLine": 1723,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1727,
                  "startColumn": 69,
                  "endLine": 1727,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1731,
                  "startColumn": 69,
                  "endLine": 1731,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1735,
                  "startColumn": 69,
                  "endLine": 1735,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1739,
                  "startColumn": 69,
                  "endLine": 1739,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1743,
                  "startColumn": 69,
                  "endLine": 1743,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1747,
                  "startColumn": 69,
                  "endLine": 1747,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1751,
                  "startColumn": 69,
                  "endLine": 1751,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1755,
                  "startColumn": 69,
                  "endLine": 1755,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1759,
                  "startColumn": 69,
                  "endLine": 1759,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1763,
                  "startColumn": 69,
                  "endLine": 1763,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1767,
                  "startColumn": 69,
                  "endLine": 1767,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.Async.cs",
                "region": {
                  "startLine": 1798,
                  "startColumn": 25,
                  "endLine": 1798,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+3 (incl 2 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "14": "+3 (incl 2 for nesting)",
              "15": "+3 (incl 2 for nesting)",
              "16": "+3 (incl 2 for nesting)",
              "17": "+3 (incl 2 for nesting)",
              "18": "+3 (incl 2 for nesting)",
              "19": "+3 (incl 2 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3963",
          "level": "warning",
          "message": "Initialize all 'static fields' inline and remove the 'static constructor'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 9,
                  "endLine": 117,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S907",
          "level": "warning",
          "message": "Remove this use of 'goto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1179,
                  "startColumn": 21,
                  "endLine": 1179,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 29 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1303,
                  "startColumn": 37,
                  "endLine": 1303,
                  "endColumn": 57
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1308,
                  "startColumn": 13,
                  "endLine": 1308,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1311,
                  "startColumn": 21,
                  "endLine": 1311,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1315,
                  "startColumn": 21,
                  "endLine": 1315,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1322,
                  "startColumn": 21,
                  "endLine": 1322,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1326,
                  "startColumn": 25,
                  "endLine": 1326,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1329,
                  "startColumn": 33,
                  "endLine": 1329,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1348,
                  "startColumn": 33,
                  "endLine": 1348,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1348,
                  "startColumn": 110,
                  "endLine": 1348,
                  "endColumn": 112
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1352,
                  "startColumn": 33,
                  "endLine": 1352,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1378,
                  "startColumn": 33,
                  "endLine": 1378,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1378,
                  "startColumn": 66,
                  "endLine": 1378,
                  "endColumn": 68
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1400,
                  "startColumn": 33,
                  "endLine": 1400,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+4 (incl 3 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S2372",
          "level": "warning",
          "message": "Remove the exception throwing from this property getter, or refactor the property into a method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 25,
                  "endLine": 185,
                  "endColumn": 105
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S907",
          "level": "warning",
          "message": "Remove this use of 'goto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1315,
                  "startColumn": 21,
                  "endLine": 1315,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "Use a constructor overloads that allows a more meaningful exception message to be provided.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 1232,
                  "startColumn": 27,
                  "endLine": 1232,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 32 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1430,
                  "startColumn": 36,
                  "endLine": 1430,
                  "endColumn": 56
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1435,
                  "startColumn": 13,
                  "endLine": 1435,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1438,
                  "startColumn": 21,
                  "endLine": 1438,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1442,
                  "startColumn": 21,
                  "endLine": 1442,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1449,
                  "startColumn": 21,
                  "endLine": 1449,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1453,
                  "startColumn": 25,
                  "endLine": 1453,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1456,
                  "startColumn": 33,
                  "endLine": 1456,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1499,
                  "startColumn": 33,
                  "endLine": 1499,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1499,
                  "startColumn": 88,
                  "endLine": 1499,
                  "endColumn": 89
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1514,
                  "startColumn": 33,
                  "endLine": 1514,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1514,
                  "startColumn": 66,
                  "endLine": 1514,
                  "endColumn": 68
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1536,
                  "startColumn": 33,
                  "endLine": 1536,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+4 (incl 3 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+5 (incl 4 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S907",
          "level": "warning",
          "message": "Remove this use of 'goto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1442,
                  "startColumn": 21,
                  "endLine": 1442,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 32 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1566,
                  "startColumn": 38,
                  "endLine": 1566,
                  "endColumn": 56
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1573,
                  "startColumn": 13,
                  "endLine": 1573,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1576,
                  "startColumn": 21,
                  "endLine": 1576,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1580,
                  "startColumn": 21,
                  "endLine": 1580,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1587,
                  "startColumn": 21,
                  "endLine": 1587,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1591,
                  "startColumn": 25,
                  "endLine": 1591,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1594,
                  "startColumn": 33,
                  "endLine": 1594,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1605,
                  "startColumn": 33,
                  "endLine": 1605,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1608,
                  "startColumn": 37,
                  "endLine": 1608,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1638,
                  "startColumn": 33,
                  "endLine": 1638,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1638,
                  "startColumn": 66,
                  "endLine": 1638,
                  "endColumn": 68
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1660,
                  "startColumn": 33,
                  "endLine": 1660,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+4 (incl 3 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+5 (incl 4 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S907",
          "level": "warning",
          "message": "Remove this use of 'goto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.Async.cs",
                "region": {
                  "startLine": 1580,
                  "startColumn": 21,
                  "endLine": 1580,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 771,
                  "startColumn": 21,
                  "endLine": 771,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 769,
                  "startColumn": 17,
                  "endLine": 769,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this unused method parameter 'token'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 381,
                  "startColumn": 55,
                  "endLine": 381,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "True"
            }
          }
        },
        {
          "ruleId": "S1199",
          "level": "warning",
          "message": "Extract this nested code block into a separate method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 402,
                  "startColumn": 13,
                  "endLine": 402,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 25 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 22,
                  "endLine": 166,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 13,
                  "endLine": 170,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 175,
                  "startColumn": 21,
                  "endLine": 175,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 21,
                  "endLine": 179,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 60,
                  "endLine": 179,
                  "endColumn": 62
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 21,
                  "endLine": 183,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 202,
                  "startColumn": 21,
                  "endLine": 202,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 205,
                  "startColumn": 25,
                  "endLine": 205,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 210,
                  "startColumn": 25,
                  "endLine": 210,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 25,
                  "endLine": 215,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 25,
                  "endLine": 220,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 222,
                  "startColumn": 29,
                  "endLine": 222,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 229,
                  "startColumn": 25,
                  "endLine": 229,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 29,
                  "endLine": 231,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+4 (incl 3 for nesting)",
              "11": "+1",
              "12": "+4 (incl 3 for nesting)",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 281,
                  "startColumn": 22,
                  "endLine": 281,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 286,
                  "startColumn": 13,
                  "endLine": 286,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 288,
                  "startColumn": 17,
                  "endLine": 288,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 294,
                  "startColumn": 48,
                  "endLine": 294,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 306,
                  "startColumn": 17,
                  "endLine": 306,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 310,
                  "startColumn": 21,
                  "endLine": 310,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 315,
                  "startColumn": 25,
                  "endLine": 315,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 324,
                  "startColumn": 21,
                  "endLine": 324,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 327,
                  "startColumn": 25,
                  "endLine": 327,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1",
              "7": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 414,
                  "startColumn": 30,
                  "endLine": 414,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 419,
                  "startColumn": 13,
                  "endLine": 419,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 421,
                  "startColumn": 17,
                  "endLine": 421,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 436,
                  "startColumn": 25,
                  "endLine": 436,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 442,
                  "startColumn": 25,
                  "endLine": 442,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 445,
                  "startColumn": 29,
                  "endLine": 445,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 450,
                  "startColumn": 29,
                  "endLine": 450,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 32 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 497,
                  "startColumn": 33,
                  "endLine": 497,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 504,
                  "startColumn": 13,
                  "endLine": 504,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 507,
                  "startColumn": 21,
                  "endLine": 507,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 511,
                  "startColumn": 21,
                  "endLine": 511,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 518,
                  "startColumn": 21,
                  "endLine": 518,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 522,
                  "startColumn": 25,
                  "endLine": 522,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 525,
                  "startColumn": 33,
                  "endLine": 525,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 535,
                  "startColumn": 33,
                  "endLine": 535,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 538,
                  "startColumn": 37,
                  "endLine": 538,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 566,
                  "startColumn": 33,
                  "endLine": 566,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 566,
                  "startColumn": 66,
                  "endLine": 566,
                  "endColumn": 68
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 586,
                  "startColumn": 33,
                  "endLine": 586,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+4 (incl 3 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+5 (incl 4 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S2178",
          "level": "warning",
          "message": "Correct this '&' to '&&'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 828,
                  "startColumn": 27,
                  "endLine": 828,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2178",
          "level": "warning",
          "message": "Correct this '&' to '&&'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 888,
                  "startColumn": 27,
                  "endLine": 888,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 45 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 603,
                  "startColumn": 25,
                  "endLine": 603,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 608,
                  "startColumn": 13,
                  "endLine": 608,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 611,
                  "startColumn": 21,
                  "endLine": 611,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 615,
                  "startColumn": 21,
                  "endLine": 615,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 622,
                  "startColumn": 21,
                  "endLine": 622,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 626,
                  "startColumn": 25,
                  "endLine": 626,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 629,
                  "startColumn": 33,
                  "endLine": 629,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 640,
                  "startColumn": 33,
                  "endLine": 640,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 640,
                  "startColumn": 58,
                  "endLine": 640,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 644,
                  "startColumn": 33,
                  "endLine": 644,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 660,
                  "startColumn": 33,
                  "endLine": 660,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 669,
                  "startColumn": 33,
                  "endLine": 669,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 674,
                  "startColumn": 70,
                  "endLine": 674,
                  "endColumn": 71
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 675,
                  "startColumn": 33,
                  "endLine": 675,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 696,
                  "startColumn": 33,
                  "endLine": 696,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 696,
                  "startColumn": 66,
                  "endLine": 696,
                  "endColumn": 68
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 716,
                  "startColumn": 33,
                  "endLine": 716,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+4 (incl 3 for nesting)",
              "11": "+4 (incl 3 for nesting)",
              "12": "+4 (incl 3 for nesting)",
              "13": "+4 (incl 3 for nesting)",
              "14": "+1",
              "15": "+4 (incl 3 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S907",
          "level": "warning",
          "message": "Remove this use of 'goto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 511,
                  "startColumn": 21,
                  "endLine": 511,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 31 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 770,
                  "startColumn": 31,
                  "endLine": 770,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 775,
                  "startColumn": 13,
                  "endLine": 775,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 778,
                  "startColumn": 21,
                  "endLine": 778,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 782,
                  "startColumn": 21,
                  "endLine": 782,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 789,
                  "startColumn": 21,
                  "endLine": 789,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 793,
                  "startColumn": 25,
                  "endLine": 793,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 796,
                  "startColumn": 33,
                  "endLine": 796,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 838,
                  "startColumn": 58,
                  "endLine": 838,
                  "endColumn": 59
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 840,
                  "startColumn": 33,
                  "endLine": 840,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 854,
                  "startColumn": 33,
                  "endLine": 854,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 854,
                  "startColumn": 66,
                  "endLine": 854,
                  "endColumn": 68
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 874,
                  "startColumn": 33,
                  "endLine": 874,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+4 (incl 3 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 509,
                  "startColumn": 25,
                  "endLine": 509,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 528,
                  "startColumn": 37,
                  "endLine": 528,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 557,
                  "startColumn": 33,
                  "endLine": 557,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 569,
                  "startColumn": 37,
                  "endLine": 569,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 597,
                  "startColumn": 21,
                  "endLine": 597,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S907",
          "level": "warning",
          "message": "Remove this use of 'goto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 615,
                  "startColumn": 21,
                  "endLine": 615,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 29 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 908,
                  "startColumn": 25,
                  "endLine": 908,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 913,
                  "startColumn": 13,
                  "endLine": 913,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 916,
                  "startColumn": 21,
                  "endLine": 916,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 920,
                  "startColumn": 21,
                  "endLine": 920,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 927,
                  "startColumn": 21,
                  "endLine": 927,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 931,
                  "startColumn": 25,
                  "endLine": 931,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 934,
                  "startColumn": 33,
                  "endLine": 934,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 952,
                  "startColumn": 33,
                  "endLine": 952,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 952,
                  "startColumn": 58,
                  "endLine": 952,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 956,
                  "startColumn": 33,
                  "endLine": 956,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 982,
                  "startColumn": 33,
                  "endLine": 982,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 982,
                  "startColumn": 66,
                  "endLine": 982,
                  "endColumn": 68
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1002,
                  "startColumn": 33,
                  "endLine": 1002,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+4 (incl 3 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S907",
          "level": "warning",
          "message": "Remove this use of 'goto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 782,
                  "startColumn": 21,
                  "endLine": 782,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S907",
          "level": "warning",
          "message": "Remove this use of 'goto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 920,
                  "startColumn": 21,
                  "endLine": 920,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 57 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1478,
                  "startColumn": 30,
                  "endLine": 1478,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1480,
                  "startColumn": 13,
                  "endLine": 1480,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1482,
                  "startColumn": 17,
                  "endLine": 1482,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1489,
                  "startColumn": 59,
                  "endLine": 1489,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1497,
                  "startColumn": 59,
                  "endLine": 1497,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1505,
                  "startColumn": 59,
                  "endLine": 1505,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1513,
                  "startColumn": 59,
                  "endLine": 1513,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1521,
                  "startColumn": 59,
                  "endLine": 1521,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1529,
                  "startColumn": 59,
                  "endLine": 1529,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1537,
                  "startColumn": 59,
                  "endLine": 1537,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1545,
                  "startColumn": 59,
                  "endLine": 1545,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1553,
                  "startColumn": 59,
                  "endLine": 1553,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1561,
                  "startColumn": 59,
                  "endLine": 1561,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1569,
                  "startColumn": 59,
                  "endLine": 1569,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1577,
                  "startColumn": 59,
                  "endLine": 1577,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1585,
                  "startColumn": 59,
                  "endLine": 1585,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1594,
                  "startColumn": 59,
                  "endLine": 1594,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1602,
                  "startColumn": 59,
                  "endLine": 1602,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1610,
                  "startColumn": 59,
                  "endLine": 1610,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1618,
                  "startColumn": 59,
                  "endLine": 1618,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1659,
                  "startColumn": 25,
                  "endLine": 1659,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+3 (incl 2 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "14": "+3 (incl 2 for nesting)",
              "15": "+3 (incl 2 for nesting)",
              "16": "+3 (incl 2 for nesting)",
              "17": "+3 (incl 2 for nesting)",
              "18": "+3 (incl 2 for nesting)",
              "19": "+3 (incl 2 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1756,
                  "startColumn": 23,
                  "endLine": 1756,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1777,
                  "startColumn": 17,
                  "endLine": 1777,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 1775,
                  "startColumn": 13,
                  "endLine": 1775,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 46 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1136,
                  "startColumn": 22,
                  "endLine": 1136,
                  "endColumn": 42
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1145,
                  "startColumn": 13,
                  "endLine": 1145,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1147,
                  "startColumn": 17,
                  "endLine": 1147,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1150,
                  "startColumn": 25,
                  "endLine": 1150,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1154,
                  "startColumn": 29,
                  "endLine": 1154,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1163,
                  "startColumn": 25,
                  "endLine": 1163,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1176,
                  "startColumn": 25,
                  "endLine": 1176,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1205,
                  "startColumn": 33,
                  "endLine": 1205,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1210,
                  "startColumn": 33,
                  "endLine": 1210,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1215,
                  "startColumn": 37,
                  "endLine": 1215,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1220,
                  "startColumn": 41,
                  "endLine": 1220,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1220,
                  "startColumn": 66,
                  "endLine": 1220,
                  "endColumn": 68
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1227,
                  "startColumn": 45,
                  "endLine": 1227,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1231,
                  "startColumn": 45,
                  "endLine": 1231,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1237,
                  "startColumn": 45,
                  "endLine": 1237,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1248,
                  "startColumn": 41,
                  "endLine": 1248,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1281,
                  "startColumn": 25,
                  "endLine": 1281,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+7 (incl 6 for nesting)",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+3 (incl 2 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+5 (incl 4 for nesting)",
              "9": "+6 (incl 5 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3963",
          "level": "warning",
          "message": "Initialize all 'static fields' inline and remove the 'static constructor'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/DefaultJsonNameTable.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 9,
                  "endLine": 46,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 23 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1440,
                  "startColumn": 22,
                  "endLine": 1440,
                  "endColumn": 36
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1444,
                  "startColumn": 13,
                  "endLine": 1444,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1448,
                  "startColumn": 17,
                  "endLine": 1448,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1451,
                  "startColumn": 25,
                  "endLine": 1451,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1453,
                  "startColumn": 29,
                  "endLine": 1453,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1459,
                  "startColumn": 25,
                  "endLine": 1459,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1478,
                  "startColumn": 25,
                  "endLine": 1478,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1501,
                  "startColumn": 25,
                  "endLine": 1501,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1506,
                  "startColumn": 25,
                  "endLine": 1506,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1509,
                  "startColumn": 29,
                  "endLine": 1509,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1509,
                  "startColumn": 56,
                  "endLine": 1509,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+4 (incl 3 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1033,
                  "startColumn": 22,
                  "endLine": 1033,
                  "endColumn": 42
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1038,
                  "startColumn": 13,
                  "endLine": 1038,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1040,
                  "startColumn": 17,
                  "endLine": 1040,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1042,
                  "startColumn": 21,
                  "endLine": 1042,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1051,
                  "startColumn": 13,
                  "endLine": 1051,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1055,
                  "startColumn": 17,
                  "endLine": 1055,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1058,
                  "startColumn": 21,
                  "endLine": 1058,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1060,
                  "startColumn": 25,
                  "endLine": 1060,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1060,
                  "startColumn": 87,
                  "endLine": 1060,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 46 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1141,
                  "startColumn": 22,
                  "endLine": 1141,
                  "endColumn": 43
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1143,
                  "startColumn": 13,
                  "endLine": 1143,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1168,
                  "startColumn": 21,
                  "endLine": 1168,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1173,
                  "startColumn": 25,
                  "endLine": 1173,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1175,
                  "startColumn": 29,
                  "endLine": 1175,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1179,
                  "startColumn": 29,
                  "endLine": 1179,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1183,
                  "startColumn": 29,
                  "endLine": 1183,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1186,
                  "startColumn": 33,
                  "endLine": 1186,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1189,
                  "startColumn": 37,
                  "endLine": 1189,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1195,
                  "startColumn": 33,
                  "endLine": 1195,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1202,
                  "startColumn": 25,
                  "endLine": 1202,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1204,
                  "startColumn": 29,
                  "endLine": 1204,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1208,
                  "startColumn": 29,
                  "endLine": 1208,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1210,
                  "startColumn": 33,
                  "endLine": 1210,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1221,
                  "startColumn": 21,
                  "endLine": 1221,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1225,
                  "startColumn": 21,
                  "endLine": 1225,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1229,
                  "startColumn": 25,
                  "endLine": 1229,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1231,
                  "startColumn": 29,
                  "endLine": 1231,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1235,
                  "startColumn": 29,
                  "endLine": 1235,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+4 (incl 3 for nesting)",
              "11": "+1",
              "12": "+5 (incl 4 for nesting)",
              "13": "+2 (incl 1 for nesting)",
              "14": "+1",
              "15": "+3 (incl 2 for nesting)",
              "16": "+4 (incl 3 for nesting)",
              "17": "+1",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+5 (incl 4 for nesting)",
              "7": "+6 (incl 5 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 33 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1693,
                  "startColumn": 22,
                  "endLine": 1693,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1697,
                  "startColumn": 13,
                  "endLine": 1697,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1701,
                  "startColumn": 17,
                  "endLine": 1701,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1704,
                  "startColumn": 25,
                  "endLine": 1704,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1706,
                  "startColumn": 29,
                  "endLine": 1706,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1711,
                  "startColumn": 25,
                  "endLine": 1711,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1727,
                  "startColumn": 25,
                  "endLine": 1727,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1731,
                  "startColumn": 29,
                  "endLine": 1731,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1735,
                  "startColumn": 29,
                  "endLine": 1735,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1739,
                  "startColumn": 29,
                  "endLine": 1739,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1744,
                  "startColumn": 25,
                  "endLine": 1744,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1757,
                  "startColumn": 25,
                  "endLine": 1757,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1757,
                  "startColumn": 50,
                  "endLine": 1757,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1761,
                  "startColumn": 25,
                  "endLine": 1761,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1805,
                  "startColumn": 25,
                  "endLine": 1805,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1811,
                  "startColumn": 25,
                  "endLine": 1811,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1811,
                  "startColumn": 56,
                  "endLine": 1811,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+3 (incl 2 for nesting)",
              "11": "+1",
              "12": "+1",
              "13": "+3 (incl 2 for nesting)",
              "14": "+3 (incl 2 for nesting)",
              "15": "+1",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1835,
                  "startColumn": 22,
                  "endLine": 1835,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1839,
                  "startColumn": 13,
                  "endLine": 1839,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1843,
                  "startColumn": 17,
                  "endLine": 1843,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1846,
                  "startColumn": 25,
                  "endLine": 1846,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1848,
                  "startColumn": 29,
                  "endLine": 1848,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1853,
                  "startColumn": 25,
                  "endLine": 1853,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1865,
                  "startColumn": 25,
                  "endLine": 1865,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1865,
                  "startColumn": 48,
                  "endLine": 1865,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1869,
                  "startColumn": 25,
                  "endLine": 1869,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 25 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1878,
                  "startColumn": 22,
                  "endLine": 1878,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1882,
                  "startColumn": 13,
                  "endLine": 1882,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1889,
                  "startColumn": 17,
                  "endLine": 1889,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1892,
                  "startColumn": 21,
                  "endLine": 1892,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1894,
                  "startColumn": 25,
                  "endLine": 1894,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1896,
                  "startColumn": 29,
                  "endLine": 1896,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1901,
                  "startColumn": 25,
                  "endLine": 1901,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1908,
                  "startColumn": 21,
                  "endLine": 1908,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1912,
                  "startColumn": 21,
                  "endLine": 1912,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1918,
                  "startColumn": 21,
                  "endLine": 1918,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1924,
                  "startColumn": 21,
                  "endLine": 1924,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1930,
                  "startColumn": 21,
                  "endLine": 1930,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1935,
                  "startColumn": 21,
                  "endLine": 1935,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1946,
                  "startColumn": 17,
                  "endLine": 1946,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1957,
                  "startColumn": 13,
                  "endLine": 1957,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+1",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+5 (incl 4 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 68 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1295,
                  "startColumn": 22,
                  "endLine": 1295,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1297,
                  "startColumn": 13,
                  "endLine": 1297,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1304,
                  "startColumn": 21,
                  "endLine": 1304,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1304,
                  "startColumn": 39,
                  "endLine": 1304,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1308,
                  "startColumn": 21,
                  "endLine": 1308,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1312,
                  "startColumn": 25,
                  "endLine": 1312,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1314,
                  "startColumn": 29,
                  "endLine": 1314,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1317,
                  "startColumn": 37,
                  "endLine": 1317,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1320,
                  "startColumn": 33,
                  "endLine": 1320,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1329,
                  "startColumn": 25,
                  "endLine": 1329,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1334,
                  "startColumn": 25,
                  "endLine": 1334,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1334,
                  "startColumn": 63,
                  "endLine": 1334,
                  "endColumn": 65
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1340,
                  "startColumn": 25,
                  "endLine": 1340,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1340,
                  "startColumn": 61,
                  "endLine": 1340,
                  "endColumn": 63
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1345,
                  "startColumn": 29,
                  "endLine": 1345,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1349,
                  "startColumn": 29,
                  "endLine": 1349,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1354,
                  "startColumn": 25,
                  "endLine": 1354,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1358,
                  "startColumn": 29,
                  "endLine": 1358,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1373,
                  "startColumn": 21,
                  "endLine": 1373,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1384,
                  "startColumn": 21,
                  "endLine": 1384,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1384,
                  "startColumn": 78,
                  "endLine": 1384,
                  "endColumn": 80
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1389,
                  "startColumn": 21,
                  "endLine": 1389,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1391,
                  "startColumn": 25,
                  "endLine": 1391,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1397,
                  "startColumn": 21,
                  "endLine": 1397,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1408,
                  "startColumn": 21,
                  "endLine": 1408,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1413,
                  "startColumn": 21,
                  "endLine": 1413,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1418,
                  "startColumn": 21,
                  "endLine": 1418,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1431,
                  "startColumn": 21,
                  "endLine": 1431,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1436,
                  "startColumn": 21,
                  "endLine": 1436,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1441,
                  "startColumn": 21,
                  "endLine": 1441,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1446,
                  "startColumn": 21,
                  "endLine": 1446,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1295,
                  "startColumn": 22,
                  "endLine": 1295,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+4 (incl 3 for nesting)",
              "14": "+1",
              "15": "+1",
              "16": "+4 (incl 3 for nesting)",
              "17": "+2 (incl 1 for nesting)",
              "18": "+2 (incl 1 for nesting)",
              "19": "+1",
              "2": "+1",
              "20": "+2 (incl 1 for nesting)",
              "21": "+3 (incl 2 for nesting)",
              "22": "+2 (incl 1 for nesting)",
              "23": "+2 (incl 1 for nesting)",
              "24": "+2 (incl 1 for nesting)",
              "25": "+2 (incl 1 for nesting)",
              "26": "+2 (incl 1 for nesting)",
              "27": "+2 (incl 1 for nesting)",
              "28": "+2 (incl 1 for nesting)",
              "29": "+2 (incl 1 for nesting)",
              "3": "+1",
              "30": "+1 (recursion)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+5 (incl 4 for nesting)",
              "7": "+5 (incl 4 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1391,
                  "startColumn": 25,
                  "endLine": 1391,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1389,
                  "startColumn": 21,
                  "endLine": 1389,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 91 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1976,
                  "startColumn": 22,
                  "endLine": 1976,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1988,
                  "startColumn": 57,
                  "endLine": 1988,
                  "endColumn": 59
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1989,
                  "startColumn": 48,
                  "endLine": 1989,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1991,
                  "startColumn": 13,
                  "endLine": 1991,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1998,
                  "startColumn": 25,
                  "endLine": 1998,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2002,
                  "startColumn": 33,
                  "endLine": 2002,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2006,
                  "startColumn": 33,
                  "endLine": 2006,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2011,
                  "startColumn": 29,
                  "endLine": 2011,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2016,
                  "startColumn": 25,
                  "endLine": 2016,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2018,
                  "startColumn": 29,
                  "endLine": 2018,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2030,
                  "startColumn": 25,
                  "endLine": 2030,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2035,
                  "startColumn": 25,
                  "endLine": 2035,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2041,
                  "startColumn": 107,
                  "endLine": 2041,
                  "endColumn": 108
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2045,
                  "startColumn": 29,
                  "endLine": 2045,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2050,
                  "startColumn": 25,
                  "endLine": 2050,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2053,
                  "startColumn": 29,
                  "endLine": 2053,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2057,
                  "startColumn": 29,
                  "endLine": 2057,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2061,
                  "startColumn": 29,
                  "endLine": 2061,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2072,
                  "startColumn": 25,
                  "endLine": 2072,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2077,
                  "startColumn": 25,
                  "endLine": 2077,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2084,
                  "startColumn": 108,
                  "endLine": 2084,
                  "endColumn": 109
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2088,
                  "startColumn": 29,
                  "endLine": 2088,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2093,
                  "startColumn": 25,
                  "endLine": 2093,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2096,
                  "startColumn": 29,
                  "endLine": 2096,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2100,
                  "startColumn": 29,
                  "endLine": 2100,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2111,
                  "startColumn": 25,
                  "endLine": 2111,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2116,
                  "startColumn": 25,
                  "endLine": 2116,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2123,
                  "startColumn": 108,
                  "endLine": 2123,
                  "endColumn": 109
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2127,
                  "startColumn": 29,
                  "endLine": 2127,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2132,
                  "startColumn": 25,
                  "endLine": 2132,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2136,
                  "startColumn": 29,
                  "endLine": 2136,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2140,
                  "startColumn": 29,
                  "endLine": 2140,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2152,
                  "startColumn": 25,
                  "endLine": 2152,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2158,
                  "startColumn": 25,
                  "endLine": 2158,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2164,
                  "startColumn": 127,
                  "endLine": 2164,
                  "endColumn": 128
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2166,
                  "startColumn": 29,
                  "endLine": 2166,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2173,
                  "startColumn": 25,
                  "endLine": 2173,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2176,
                  "startColumn": 29,
                  "endLine": 2176,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2181,
                  "startColumn": 29,
                  "endLine": 2181,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2197,
                  "startColumn": 29,
                  "endLine": 2197,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2199,
                  "startColumn": 33,
                  "endLine": 2199,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2202,
                  "startColumn": 37,
                  "endLine": 2202,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2206,
                  "startColumn": 37,
                  "endLine": 2206,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2211,
                  "startColumn": 33,
                  "endLine": 2211,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2215,
                  "startColumn": 37,
                  "endLine": 2215,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2219,
                  "startColumn": 37,
                  "endLine": 2219,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+3 (incl 2 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+1",
              "14": "+3 (incl 2 for nesting)",
              "15": "+1",
              "16": "+1",
              "17": "+2 (incl 1 for nesting)",
              "18": "+1",
              "19": "+3 (incl 2 for nesting)",
              "2": "+1",
              "20": "+3 (incl 2 for nesting)",
              "21": "+1",
              "22": "+3 (incl 2 for nesting)",
              "23": "+1",
              "24": "+2 (incl 1 for nesting)",
              "25": "+1",
              "26": "+3 (incl 2 for nesting)",
              "27": "+3 (incl 2 for nesting)",
              "28": "+1",
              "29": "+3 (incl 2 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "30": "+1",
              "31": "+2 (incl 1 for nesting)",
              "32": "+1",
              "33": "+3 (incl 2 for nesting)",
              "34": "+3 (incl 2 for nesting)",
              "35": "+1",
              "36": "+3 (incl 2 for nesting)",
              "37": "+1",
              "38": "+1",
              "39": "+4 (incl 3 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "40": "+5 (incl 4 for nesting)",
              "41": "+1",
              "42": "+1",
              "43": "+5 (incl 4 for nesting)",
              "44": "+1",
              "5": "+1",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+3 (incl 2 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 38 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2258,
                  "startColumn": 22,
                  "endLine": 2258,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2265,
                  "startColumn": 13,
                  "endLine": 2265,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2272,
                  "startColumn": 13,
                  "endLine": 2272,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2276,
                  "startColumn": 13,
                  "endLine": 2276,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2280,
                  "startColumn": 13,
                  "endLine": 2280,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2289,
                  "startColumn": 13,
                  "endLine": 2289,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2291,
                  "startColumn": 17,
                  "endLine": 2291,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2294,
                  "startColumn": 25,
                  "endLine": 2294,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2296,
                  "startColumn": 29,
                  "endLine": 2296,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2298,
                  "startColumn": 33,
                  "endLine": 2298,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2307,
                  "startColumn": 25,
                  "endLine": 2307,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2315,
                  "startColumn": 25,
                  "endLine": 2315,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2317,
                  "startColumn": 29,
                  "endLine": 2317,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2319,
                  "startColumn": 33,
                  "endLine": 2319,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2330,
                  "startColumn": 25,
                  "endLine": 2330,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2338,
                  "startColumn": 25,
                  "endLine": 2338,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+4 (incl 3 for nesting)",
              "12": "+5 (incl 4 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "14": "+3 (incl 2 for nesting)",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+5 (incl 4 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2317,
                  "startColumn": 29,
                  "endLine": 2317,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2315,
                  "startColumn": 25,
                  "endLine": 2315,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2319,
                  "startColumn": 33,
                  "endLine": 2319,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2317,
                  "startColumn": 29,
                  "endLine": 2317,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1841,
                  "startColumn": 17,
                  "endLine": 1841,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1839,
                  "startColumn": 13,
                  "endLine": 1839,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1843,
                  "startColumn": 85,
                  "endLine": 1843,
                  "endColumn": 116
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 65 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1868,
                  "startColumn": 46,
                  "endLine": 1868,
                  "endColumn": 67
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1874,
                  "startColumn": 13,
                  "endLine": 1874,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1874,
                  "startColumn": 30,
                  "endLine": 1874,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1876,
                  "startColumn": 17,
                  "endLine": 1876,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1881,
                  "startColumn": 25,
                  "endLine": 1881,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1886,
                  "startColumn": 29,
                  "endLine": 1886,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1889,
                  "startColumn": 37,
                  "endLine": 1889,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1899,
                  "startColumn": 37,
                  "endLine": 1899,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1905,
                  "startColumn": 37,
                  "endLine": 1905,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1915,
                  "startColumn": 45,
                  "endLine": 1915,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1917,
                  "startColumn": 49,
                  "endLine": 1917,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1924,
                  "startColumn": 49,
                  "endLine": 1924,
                  "endColumn": 54
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1935,
                  "startColumn": 45,
                  "endLine": 1935,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1944,
                  "startColumn": 45,
                  "endLine": 1944,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1949,
                  "startColumn": 45,
                  "endLine": 1949,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1967,
                  "startColumn": 25,
                  "endLine": 1967,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+7 (incl 6 for nesting)",
              "11": "+6 (incl 5 for nesting)",
              "12": "+6 (incl 5 for nesting)",
              "13": "+6 (incl 5 for nesting)",
              "14": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+5 (incl 4 for nesting)",
              "6": "+5 (incl 4 for nesting)",
              "7": "+5 (incl 4 for nesting)",
              "8": "+6 (incl 5 for nesting)",
              "9": "+7 (incl 6 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 42 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2080,
                  "startColumn": 22,
                  "endLine": 2080,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2082,
                  "startColumn": 13,
                  "endLine": 2082,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2084,
                  "startColumn": 17,
                  "endLine": 2084,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2087,
                  "startColumn": 25,
                  "endLine": 2087,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2087,
                  "startColumn": 74,
                  "endLine": 2087,
                  "endColumn": 76
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2095,
                  "startColumn": 25,
                  "endLine": 2095,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2098,
                  "startColumn": 29,
                  "endLine": 2098,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2098,
                  "startColumn": 50,
                  "endLine": 2098,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2104,
                  "startColumn": 29,
                  "endLine": 2104,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2104,
                  "startColumn": 44,
                  "endLine": 2104,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2107,
                  "startColumn": 87,
                  "endLine": 2107,
                  "endColumn": 88
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2109,
                  "startColumn": 33,
                  "endLine": 2109,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2111,
                  "startColumn": 37,
                  "endLine": 2111,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2111,
                  "startColumn": 74,
                  "endLine": 2111,
                  "endColumn": 76
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2119,
                  "startColumn": 25,
                  "endLine": 2119,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2127,
                  "startColumn": 25,
                  "endLine": 2127,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2127,
                  "startColumn": 46,
                  "endLine": 2127,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+5 (incl 4 for nesting)",
              "11": "+6 (incl 5 for nesting)",
              "12": "+1",
              "13": "+1",
              "14": "+3 (incl 2 for nesting)",
              "15": "+1",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1",
              "7": "+4 (incl 3 for nesting)",
              "8": "+1",
              "9": "+5 (incl 4 for nesting)"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'valueType' to 'objectType' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 2198,
                  "startColumn": 46,
                  "endLine": 2198,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 883,
                  "startColumn": 22,
                  "endLine": 883,
                  "endColumn": 51
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 885,
                  "startColumn": 13,
                  "endLine": 885,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 885,
                  "startColumn": 58,
                  "endLine": 885,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 887,
                  "startColumn": 17,
                  "endLine": 887,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 891,
                  "startColumn": 21,
                  "endLine": 891,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 893,
                  "startColumn": 25,
                  "endLine": 893,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 895,
                  "startColumn": 29,
                  "endLine": 895,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 895,
                  "startColumn": 69,
                  "endLine": 895,
                  "endColumn": 71
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 902,
                  "startColumn": 21,
                  "endLine": 902,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+5 (incl 4 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 887,
                  "startColumn": 17,
                  "endLine": 887,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 885,
                  "startColumn": 13,
                  "endLine": 885,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1199",
          "level": "warning",
          "message": "Extract this nested code block into a separate method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonWriter.cs",
                "region": {
                  "startLine": 248,
                  "startColumn": 13,
                  "endLine": 248,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "Use a constructor overloads that allows a more meaningful exception message to be provided.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 291,
                  "startColumn": 27,
                  "endLine": 291,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/StringEnumConverter.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 64,
                  "endLine": 57,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "Use a constructor overloads that allows a more meaningful exception message to be provided.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 429,
                  "startColumn": 27,
                  "endLine": 429,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 31 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 346,
                  "startColumn": 22,
                  "endLine": 346,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 348,
                  "startColumn": 13,
                  "endLine": 348,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 352,
                  "startColumn": 64,
                  "endLine": 352,
                  "endColumn": 65
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 353,
                  "startColumn": 62,
                  "endLine": 353,
                  "endColumn": 63
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 373,
                  "startColumn": 21,
                  "endLine": 373,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 375,
                  "startColumn": 25,
                  "endLine": 375,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 377,
                  "startColumn": 29,
                  "endLine": 377,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 385,
                  "startColumn": 21,
                  "endLine": 385,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 387,
                  "startColumn": 25,
                  "endLine": 387,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 393,
                  "startColumn": 25,
                  "endLine": 393,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 399,
                  "startColumn": 21,
                  "endLine": 399,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 401,
                  "startColumn": 25,
                  "endLine": 401,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 407,
                  "startColumn": 25,
                  "endLine": 407,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 412,
                  "startColumn": 80,
                  "endLine": 412,
                  "endColumn": 81
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 416,
                  "startColumn": 21,
                  "endLine": 416,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+3 (incl 2 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S907",
          "level": "warning",
          "message": "Remove this use of 'goto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 377,
                  "startColumn": 29,
                  "endLine": 377,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 589,
                  "startColumn": 24,
                  "endLine": 589,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 598,
                  "startColumn": 13,
                  "endLine": 598,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 602,
                  "startColumn": 17,
                  "endLine": 602,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 602,
                  "startColumn": 49,
                  "endLine": 602,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 609,
                  "startColumn": 17,
                  "endLine": 609,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 609,
                  "startColumn": 46,
                  "endLine": 609,
                  "endColumn": 48
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 618,
                  "startColumn": 17,
                  "endLine": 618,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 625,
                  "startColumn": 21,
                  "endLine": 625,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 632,
                  "startColumn": 21,
                  "endLine": 632,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 638,
                  "startColumn": 21,
                  "endLine": 638,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 641,
                  "startColumn": 25,
                  "endLine": 641,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 665,
                  "startColumn": 24,
                  "endLine": 665,
                  "endColumn": 33
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 667,
                  "startColumn": 13,
                  "endLine": 667,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 680,
                  "startColumn": 13,
                  "endLine": 680,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 683,
                  "startColumn": 21,
                  "endLine": 683,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 688,
                  "startColumn": 17,
                  "endLine": 688,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 699,
                  "startColumn": 17,
                  "endLine": 699,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 706,
                  "startColumn": 17,
                  "endLine": 706,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 710,
                  "startColumn": 21,
                  "endLine": 710,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 718,
                  "startColumn": 21,
                  "endLine": 718,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 724,
                  "startColumn": 21,
                  "endLine": 724,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1"
            }
          }
        },
        {
          "ruleId": "S3626",
          "level": "warning",
          "message": "Remove this redundant jump.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 744,
                  "startColumn": 21,
                  "endLine": 744,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 21 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 33,
                  "endLine": 121,
                  "endColumn": 41
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 13,
                  "endLine": 124,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 17,
                  "endLine": 126,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 17,
                  "endLine": 136,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 13,
                  "endLine": 140,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 17,
                  "endLine": 143,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 61,
                  "endLine": 145,
                  "endColumn": 62
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 149,
                  "startColumn": 17,
                  "endLine": 149,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 13,
                  "endLine": 158,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 13,
                  "endLine": 165,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 53,
                  "endLine": 165,
                  "endColumn": 55
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 13,
                  "endLine": 173,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 175,
                  "startColumn": 17,
                  "endLine": 175,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 17,
                  "endLine": 179,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 13,
                  "endLine": 186,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/IsoDateTimeConverter.cs",
                "region": {
                  "startLine": 190,
                  "startColumn": 13,
                  "endLine": 190,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S4524",
          "level": "warning",
          "message": "Move this 'default:' case to the beginning or end of this 'switch' statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/ExpandoObjectConverter.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 21,
                  "endLine": 100,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 169,
                  "startColumn": 33,
                  "endLine": 169,
                  "endColumn": 41
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 13,
                  "endLine": 171,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 13,
                  "endLine": 183,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 17,
                  "endLine": 186,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 196,
                  "startColumn": 21,
                  "endLine": 196,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 201,
                  "startColumn": 17,
                  "endLine": 201,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 204,
                  "startColumn": 21,
                  "endLine": 204,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 211,
                  "startColumn": 17,
                  "endLine": 211,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 13,
                  "endLine": 219,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 13,
                  "endLine": 226,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 44,
                  "endLine": 226,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 13,
                  "endLine": 231,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 233,
                  "startColumn": 17,
                  "endLine": 233,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 17,
                  "endLine": 238,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanMultipleFilter.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 45,
                  "endLine": 14,
                  "endColumn": 58
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanMultipleFilter.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 13,
                  "endLine": 16,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanMultipleFilter.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 17,
                  "endLine": 20,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanMultipleFilter.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 21,
                  "endLine": 25,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanMultipleFilter.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 21,
                  "endLine": 30,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanMultipleFilter.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanMultipleFilter.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 29,
                  "endLine": 34,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+5 (incl 4 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JProperty.Async.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 17,
                  "endLine": 95,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JProperty.Async.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 13,
                  "endLine": 93,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1199",
          "level": "warning",
          "message": "Extract this nested code block into a separate method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 13,
                  "endLine": 235,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "Use a constructor overloads that allows a more meaningful exception message to be provided.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JProperty.cs",
                "region": {
                  "startLine": 199,
                  "startColumn": 23,
                  "endLine": 199,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanFilter.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 45,
                  "endLine": 14,
                  "endColumn": 58
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanFilter.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 13,
                  "endLine": 16,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanFilter.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 17,
                  "endLine": 18,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanFilter.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 17,
                  "endLine": 25,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanFilter.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 21,
                  "endLine": 30,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanFilter.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanFilter.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanFilter.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 21,
                  "endLine": 42,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ScanFilter.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 25,
                  "endLine": 44,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1",
              "7": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.Async.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 17,
                  "endLine": 98,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.Async.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 13,
                  "endLine": 96,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryScanFilter.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 42,
                  "endLine": 21,
                  "endColumn": 64
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryScanFilter.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 29,
                  "endLine": 23,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'private protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 228,
                  "startColumn": 9,
                  "endLine": 228,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JConstructor.Async.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 17,
                  "endLine": 83,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JConstructor.Async.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 13,
                  "endLine": 81,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "Use a constructor overloads that allows a more meaningful exception message to be provided.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JProperty.cs",
                "region": {
                  "startLine": 209,
                  "startColumn": 23,
                  "endLine": 209,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryFilter.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 38,
                  "endLine": 19,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryFilter.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 25,
                  "endLine": 21,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JObject.Async.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 17,
                  "endLine": 106,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JObject.Async.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 13,
                  "endLine": 104,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JArray.Async.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 17,
                  "endLine": 80,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JArray.Async.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 13,
                  "endLine": 78,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JProperty.cs",
                "region": {
                  "startLine": 386,
                  "startColumn": 17,
                  "endLine": 386,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JProperty.cs",
                "region": {
                  "startLine": 384,
                  "startColumn": 13,
                  "endLine": 384,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 56,
                  "endLine": 131,
                  "endColumn": 68
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 33,
                  "endLine": 133,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 28,
                  "endLine": 57,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 13,
                  "endLine": 63,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 17,
                  "endLine": 65,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 43,
                  "endLine": 65,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 21,
                  "endLine": 67,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 17,
                  "endLine": 77,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 25,
                  "endLine": 90,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 25,
                  "endLine": 104,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 25,
                  "endLine": 118,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 25,
                  "endLine": 136,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 46,
                  "endLine": 136,
                  "endColumn": 48
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 25,
                  "endLine": 155,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 25,
                  "endLine": 159,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+3 (incl 2 for nesting)",
              "11": "+1",
              "2": "+1",
              "3": "+3 (incl 2 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1871",
          "level": "warning",
          "message": "Either merge this case with the identical one on line 89 or change one of the implementations.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 21,
                  "endLine": 110,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 21,
                  "endLine": 96,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1871",
          "level": "warning",
          "message": "Either merge this case with the identical one on line 89 or change one of the implementations.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 21,
                  "endLine": 124,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 21,
                  "endLine": 96,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JConstructor.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 17,
                  "endLine": 235,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JConstructor.cs",
                "region": {
                  "startLine": 233,
                  "startColumn": 13,
                  "endLine": 233,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 34 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 22,
                  "endLine": 145,
                  "endColumn": 33
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 13,
                  "endLine": 147,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 48,
                  "endLine": 147,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 149,
                  "startColumn": 17,
                  "endLine": 149,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 25,
                  "endLine": 152,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 25,
                  "endLine": 158,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 25,
                  "endLine": 164,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 25,
                  "endLine": 170,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 25,
                  "endLine": 176,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 182,
                  "startColumn": 25,
                  "endLine": 182,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 188,
                  "startColumn": 25,
                  "endLine": 188,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 194,
                  "startColumn": 25,
                  "endLine": 194,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 25,
                  "endLine": 200,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 209,
                  "startColumn": 13,
                  "endLine": 209,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 211,
                  "startColumn": 17,
                  "endLine": 211,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "CA2016",
          "level": "note",
          "message": "Forward the 'cancellationToken' parameter to the 'SkipAsync' method or pass in 'CancellationToken.None' explicitly to indicate intentionally not propagating the token",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.Async.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 35,
                  "endLine": 161,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ArgumentName": "cancellationToken",
              "ParameterName": "",
              "ShouldFix": "1"
            }
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.IndexOutOfRangeException' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JProperty.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 31,
                  "endLine": 122,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.IndexOutOfRangeException' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JProperty.cs",
                "region": {
                  "startLine": 132,
                  "startColumn": 31,
                  "endLine": 132,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 17,
                  "endLine": 122,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 13,
                  "endLine": 120,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 289,
                  "startColumn": 17,
                  "endLine": 289,
                  "endColumn": 29
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 310,
                  "startColumn": 13,
                  "endLine": 310,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 492,
                  "startColumn": 32,
                  "endLine": 492,
                  "endColumn": 42
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 495,
                  "startColumn": 13,
                  "endLine": 495,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 495,
                  "startColumn": 52,
                  "endLine": 495,
                  "endColumn": 54
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 497,
                  "startColumn": 17,
                  "endLine": 497,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 499,
                  "startColumn": 21,
                  "endLine": 499,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 507,
                  "startColumn": 17,
                  "endLine": 507,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 513,
                  "startColumn": 21,
                  "endLine": 513,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 519,
                  "startColumn": 17,
                  "endLine": 519,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 523,
                  "startColumn": 21,
                  "endLine": 523,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 523,
                  "startColumn": 40,
                  "endLine": 523,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 532,
                  "startColumn": 13,
                  "endLine": 532,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'private protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 9,
                  "endLine": 105,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'private protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 9,
                  "endLine": 109,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 499,
                  "startColumn": 21,
                  "endLine": 499,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 497,
                  "startColumn": 17,
                  "endLine": 497,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 184,
                  "startColumn": 41,
                  "endLine": 184,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 188,
                  "startColumn": 13,
                  "endLine": 188,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 190,
                  "startColumn": 17,
                  "endLine": 190,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 21,
                  "endLine": 192,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 196,
                  "startColumn": 21,
                  "endLine": 196,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 25,
                  "endLine": 198,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 205,
                  "startColumn": 13,
                  "endLine": 205,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 17,
                  "endLine": 207,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 210,
                  "startColumn": 21,
                  "endLine": 210,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 413,
                  "startColumn": 17,
                  "endLine": 413,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 411,
                  "startColumn": 13,
                  "endLine": 411,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 545,
                  "startColumn": 17,
                  "endLine": 545,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "Use a constructor overloads that allows a more meaningful exception message to be provided.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 27,
                  "endLine": 83,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 9,
                  "endLine": 37,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 51,
                  "endLine": 74,
                  "endColumn": 62
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 29,
                  "endLine": 76,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/PathFilter.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 21,
                  "endLine": 22,
                  "endColumn": 33
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/PathFilter.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 21,
                  "endLine": 36,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/PathFilter.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 17,
                  "endLine": 48,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/PathFilter.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 21,
                  "endLine": 70,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3217",
          "level": "warning",
          "message": "Either change the type of 'property' to 'JToken' or iterate on a generic collection of type 'JProperty'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 676,
                  "startColumn": 22,
                  "endLine": 676,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 43 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 22,
                  "endLine": 93,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 13,
                  "endLine": 100,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 55,
                  "endLine": 100,
                  "endColumn": 57
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 17,
                  "endLine": 104,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 25,
                  "endLine": 108,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 29,
                  "endLine": 111,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 25,
                  "endLine": 133,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 25,
                  "endLine": 139,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 29,
                  "endLine": 142,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 25,
                  "endLine": 150,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 68,
                  "endLine": 150,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 25,
                  "endLine": 161,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 35,
                  "endLine": 161,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 58,
                  "endLine": 161,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 25,
                  "endLine": 165,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 29,
                  "endLine": 167,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 180,
                  "startColumn": 13,
                  "endLine": 180,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 17,
                  "endLine": 183,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 13,
                  "endLine": 189,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 17,
                  "endLine": 192,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 34,
                  "endLine": 192,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 48,
                  "endLine": 192,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+4 (incl 3 for nesting)",
              "15": "+1",
              "16": "+2 (incl 1 for nesting)",
              "17": "+1",
              "18": "+2 (incl 1 for nesting)",
              "19": "+1",
              "2": "+2 (incl 1 for nesting)",
              "20": "+1",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3217",
          "level": "warning",
          "message": "Either change the type of 'property' to 'JToken' or iterate on a generic collection of type 'JProperty'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 710,
                  "startColumn": 22,
                  "endLine": 710,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 55 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 28,
                  "endLine": 231,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 241,
                  "startColumn": 13,
                  "endLine": 241,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 17,
                  "endLine": 245,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 252,
                  "startColumn": 17,
                  "endLine": 252,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 256,
                  "startColumn": 21,
                  "endLine": 256,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 258,
                  "startColumn": 25,
                  "endLine": 258,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 269,
                  "startColumn": 21,
                  "endLine": 269,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 271,
                  "startColumn": 25,
                  "endLine": 271,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 276,
                  "startColumn": 29,
                  "endLine": 276,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 29,
                  "endLine": 280,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 288,
                  "startColumn": 21,
                  "endLine": 288,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 290,
                  "startColumn": 25,
                  "endLine": 290,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 301,
                  "startColumn": 17,
                  "endLine": 301,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 305,
                  "startColumn": 21,
                  "endLine": 305,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 310,
                  "startColumn": 21,
                  "endLine": 310,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 325,
                  "startColumn": 17,
                  "endLine": 325,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 331,
                  "startColumn": 21,
                  "endLine": 331,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 338,
                  "startColumn": 17,
                  "endLine": 338,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 342,
                  "startColumn": 21,
                  "endLine": 342,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 347,
                  "startColumn": 25,
                  "endLine": 347,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 351,
                  "startColumn": 25,
                  "endLine": 351,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 355,
                  "startColumn": 25,
                  "endLine": 355,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 370,
                  "startColumn": 17,
                  "endLine": 370,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 370,
                  "startColumn": 58,
                  "endLine": 370,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 374,
                  "startColumn": 17,
                  "endLine": 374,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 376,
                  "startColumn": 21,
                  "endLine": 376,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+4 (incl 3 for nesting)",
              "11": "+1",
              "12": "+3 (incl 2 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "14": "+1",
              "15": "+3 (incl 2 for nesting)",
              "16": "+1",
              "17": "+3 (incl 2 for nesting)",
              "18": "+4 (incl 3 for nesting)",
              "19": "+1",
              "2": "+2 (incl 1 for nesting)",
              "20": "+1",
              "21": "+1",
              "22": "+1",
              "23": "+1",
              "24": "+3 (incl 2 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+4 (incl 3 for nesting)",
              "7": "+5 (incl 4 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 786,
                  "startColumn": 23,
                  "endLine": 786,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 793,
                  "startColumn": 13,
                  "endLine": 793,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 795,
                  "startColumn": 17,
                  "endLine": 795,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 795,
                  "startColumn": 43,
                  "endLine": 795,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 797,
                  "startColumn": 21,
                  "endLine": 797,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 807,
                  "startColumn": 17,
                  "endLine": 807,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 820,
                  "startColumn": 25,
                  "endLine": 820,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 834,
                  "startColumn": 25,
                  "endLine": 834,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 848,
                  "startColumn": 25,
                  "endLine": 848,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 866,
                  "startColumn": 25,
                  "endLine": 866,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 866,
                  "startColumn": 46,
                  "endLine": 866,
                  "endColumn": 48
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 885,
                  "startColumn": 25,
                  "endLine": 885,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 889,
                  "startColumn": 25,
                  "endLine": 889,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+3 (incl 2 for nesting)",
              "11": "+1",
              "2": "+1",
              "3": "+3 (incl 2 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1871",
          "level": "warning",
          "message": "Either merge this case with the identical one on line 819 or change one of the implementations.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 833,
                  "startColumn": 21,
                  "endLine": 840,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 819,
                  "startColumn": 21,
                  "endLine": 826,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1871",
          "level": "warning",
          "message": "Either merge this case with the identical one on line 819 or change one of the implementations.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 847,
                  "startColumn": 21,
                  "endLine": 854,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 819,
                  "startColumn": 21,
                  "endLine": 826,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 36 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 488,
                  "startColumn": 33,
                  "endLine": 488,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 493,
                  "startColumn": 13,
                  "endLine": 493,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 499,
                  "startColumn": 17,
                  "endLine": 499,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 500,
                  "startColumn": 21,
                  "endLine": 500,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 505,
                  "startColumn": 17,
                  "endLine": 505,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 514,
                  "startColumn": 17,
                  "endLine": 514,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 516,
                  "startColumn": 21,
                  "endLine": 516,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 524,
                  "startColumn": 17,
                  "endLine": 524,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 526,
                  "startColumn": 21,
                  "endLine": 526,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 531,
                  "startColumn": 21,
                  "endLine": 531,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 531,
                  "startColumn": 50,
                  "endLine": 531,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 539,
                  "startColumn": 25,
                  "endLine": 539,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 547,
                  "startColumn": 17,
                  "endLine": 547,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 549,
                  "startColumn": 21,
                  "endLine": 549,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 554,
                  "startColumn": 21,
                  "endLine": 554,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 554,
                  "startColumn": 50,
                  "endLine": 554,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 562,
                  "startColumn": 25,
                  "endLine": 562,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+4 (incl 3 for nesting)",
              "11": "+2 (incl 1 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "14": "+1",
              "15": "+4 (incl 3 for nesting)",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 911,
                  "startColumn": 21,
                  "endLine": 911,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 1014,
                  "startColumn": 17,
                  "endLine": 1014,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 25 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 575,
                  "startColumn": 22,
                  "endLine": 575,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 578,
                  "startColumn": 13,
                  "endLine": 578,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 583,
                  "startColumn": 13,
                  "endLine": 583,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 583,
                  "startColumn": 48,
                  "endLine": 583,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 589,
                  "startColumn": 17,
                  "endLine": 589,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 592,
                  "startColumn": 21,
                  "endLine": 592,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 592,
                  "startColumn": 44,
                  "endLine": 592,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 596,
                  "startColumn": 25,
                  "endLine": 596,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 602,
                  "startColumn": 25,
                  "endLine": 602,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 609,
                  "startColumn": 21,
                  "endLine": 609,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 616,
                  "startColumn": 13,
                  "endLine": 616,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 618,
                  "startColumn": 17,
                  "endLine": 618,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 624,
                  "startColumn": 13,
                  "endLine": 624,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 626,
                  "startColumn": 17,
                  "endLine": 626,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 632,
                  "startColumn": 13,
                  "endLine": 632,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 634,
                  "startColumn": 17,
                  "endLine": 634,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 640,
                  "startColumn": 13,
                  "endLine": 640,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+1",
              "14": "+2 (incl 1 for nesting)",
              "15": "+1",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 34 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 1166,
                  "startColumn": 30,
                  "endLine": 1166,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 1168,
                  "startColumn": 13,
                  "endLine": 1168,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 1171,
                  "startColumn": 21,
                  "endLine": 1171,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 1180,
                  "startColumn": 21,
                  "endLine": 1180,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 1184,
                  "startColumn": 25,
                  "endLine": 1184,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 1209,
                  "startColumn": 21,
                  "endLine": 1209,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 1214,
                  "startColumn": 21,
                  "endLine": 1214,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 1221,
                  "startColumn": 21,
                  "endLine": 1221,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 1223,
                  "startColumn": 25,
                  "endLine": 1223,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 1227,
                  "startColumn": 29,
                  "endLine": 1227,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 1231,
                  "startColumn": 29,
                  "endLine": 1231,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 1233,
                  "startColumn": 33,
                  "endLine": 1233,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 1236,
                  "startColumn": 37,
                  "endLine": 1236,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 1243,
                  "startColumn": 25,
                  "endLine": 1243,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+5 (incl 4 for nesting)",
              "11": "+6 (incl 5 for nesting)",
              "12": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 823,
                  "startColumn": 28,
                  "endLine": 823,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 827,
                  "startColumn": 13,
                  "endLine": 827,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 834,
                  "startColumn": 17,
                  "endLine": 834,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 836,
                  "startColumn": 21,
                  "endLine": 836,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 840,
                  "startColumn": 29,
                  "endLine": 840,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 843,
                  "startColumn": 21,
                  "endLine": 843,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 848,
                  "startColumn": 17,
                  "endLine": 848,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 853,
                  "startColumn": 21,
                  "endLine": 853,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 860,
                  "startColumn": 17,
                  "endLine": 860,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldMultipleFilter.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 45,
                  "endLine": 21,
                  "endColumn": 58
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldMultipleFilter.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 13,
                  "endLine": 23,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldMultipleFilter.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 17,
                  "endLine": 25,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldMultipleFilter.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 21,
                  "endLine": 27,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldMultipleFilter.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 25,
                  "endLine": 31,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldMultipleFilter.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 25,
                  "endLine": 36,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldMultipleFilter.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 17,
                  "endLine": 42,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldMultipleFilter.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 21,
                  "endLine": 44,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 24 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 1943,
                  "startColumn": 24,
                  "endLine": 1943,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 1945,
                  "startColumn": 13,
                  "endLine": 1945,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 1949,
                  "startColumn": 17,
                  "endLine": 1949,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 1951,
                  "startColumn": 21,
                  "endLine": 1951,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 1958,
                  "startColumn": 25,
                  "endLine": 1958,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 1960,
                  "startColumn": 65,
                  "endLine": 1960,
                  "endColumn": 66
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 1965,
                  "startColumn": 21,
                  "endLine": 1965,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 1967,
                  "startColumn": 61,
                  "endLine": 1967,
                  "endColumn": 62
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 1972,
                  "startColumn": 17,
                  "endLine": 1972,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+5 (incl 4 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 55 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 28,
                  "endLine": 98,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 13,
                  "endLine": 100,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 17,
                  "endLine": 105,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 17,
                  "endLine": 112,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 21,
                  "endLine": 114,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 25,
                  "endLine": 118,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 29,
                  "endLine": 122,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 29,
                  "endLine": 126,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 76,
                  "endLine": 126,
                  "endColumn": 78
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 33,
                  "endLine": 128,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 71,
                  "endLine": 128,
                  "endColumn": 73
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 132,
                  "startColumn": 33,
                  "endLine": 132,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 29,
                  "endLine": 138,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 25,
                  "endLine": 144,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 21,
                  "endLine": 150,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 13,
                  "endLine": 159,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 13,
                  "endLine": 166,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 168,
                  "startColumn": 17,
                  "endLine": 168,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 13,
                  "endLine": 174,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 17,
                  "endLine": 176,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 182,
                  "startColumn": 13,
                  "endLine": 182,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 187,
                  "startColumn": 13,
                  "endLine": 187,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 17,
                  "endLine": 189,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 13,
                  "endLine": 195,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 197,
                  "startColumn": 17,
                  "endLine": 197,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 203,
                  "startColumn": 13,
                  "endLine": 203,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 28,
                  "endLine": 98,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+5 (incl 4 for nesting)",
              "12": "+4 (incl 3 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "14": "+1",
              "15": "+1",
              "16": "+2 (incl 1 for nesting)",
              "17": "+1",
              "18": "+2 (incl 1 for nesting)",
              "19": "+1",
              "2": "+2 (incl 1 for nesting)",
              "20": "+1",
              "21": "+2 (incl 1 for nesting)",
              "22": "+1",
              "23": "+2 (incl 1 for nesting)",
              "24": "+1",
              "25": "+1 (recursion)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+5 (incl 4 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+6 (incl 5 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2523,
                  "startColumn": 24,
                  "endLine": 2523,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2525,
                  "startColumn": 13,
                  "endLine": 2525,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2530,
                  "startColumn": 13,
                  "endLine": 2530,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2532,
                  "startColumn": 17,
                  "endLine": 2532,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2534,
                  "startColumn": 21,
                  "endLine": 2534,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2539,
                  "startColumn": 17,
                  "endLine": 2539,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2541,
                  "startColumn": 21,
                  "endLine": 2541,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2544,
                  "startColumn": 25,
                  "endLine": 2544,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2549,
                  "startColumn": 25,
                  "endLine": 2549,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3217",
          "level": "warning",
          "message": "Either change the type of 'propertyToken' to 'JToken' or iterate on a generic collection of type 'JProperty'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 420,
                  "startColumn": 22,
                  "endLine": 420,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2645,
                  "startColumn": 21,
                  "endLine": 2645,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2647,
                  "startColumn": 13,
                  "endLine": 2647,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2649,
                  "startColumn": 17,
                  "endLine": 2649,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2651,
                  "startColumn": 21,
                  "endLine": 2651,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2656,
                  "startColumn": 17,
                  "endLine": 2656,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2660,
                  "startColumn": 21,
                  "endLine": 2660,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2663,
                  "startColumn": 25,
                  "endLine": 2663,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2668,
                  "startColumn": 25,
                  "endLine": 2668,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2676,
                  "startColumn": 21,
                  "endLine": 2676,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2678,
                  "startColumn": 25,
                  "endLine": 2678,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2683,
                  "startColumn": 21,
                  "endLine": 2683,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 27 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2695,
                  "startColumn": 21,
                  "endLine": 2695,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2697,
                  "startColumn": 13,
                  "endLine": 2697,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2702,
                  "startColumn": 13,
                  "endLine": 2702,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2704,
                  "startColumn": 17,
                  "endLine": 2704,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2706,
                  "startColumn": 21,
                  "endLine": 2706,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2711,
                  "startColumn": 17,
                  "endLine": 2711,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2715,
                  "startColumn": 21,
                  "endLine": 2715,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2718,
                  "startColumn": 25,
                  "endLine": 2718,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2723,
                  "startColumn": 25,
                  "endLine": 2723,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2731,
                  "startColumn": 21,
                  "endLine": 2731,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2733,
                  "startColumn": 25,
                  "endLine": 2733,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2738,
                  "startColumn": 21,
                  "endLine": 2738,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S4456",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the iterator.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2603,
                  "startColumn": 36,
                  "endLine": 2603,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2607,
                  "startColumn": 23,
                  "endLine": 2607,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Schema/Extensions.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 17,
                  "endLine": 135,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 17,
                  "endLine": 134,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 132,
                  "startColumn": 13,
                  "endLine": 132,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1834",
          "level": "note",
          "message": "Use 'StringBuilder.Append(char)' instead of 'StringBuilder.Append(string)' when the input is a constant unit string",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/MemoryTraceWriter.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 23,
                  "endLine": 48,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1834",
          "level": "note",
          "message": "Use 'StringBuilder.Append(char)' instead of 'StringBuilder.Append(string)' when the input is a constant unit string",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/MemoryTraceWriter.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 23,
                  "endLine": 50,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 346,
                  "startColumn": 27,
                  "endLine": 346,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 352,
                  "startColumn": 13,
                  "endLine": 352,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 356,
                  "startColumn": 17,
                  "endLine": 356,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 359,
                  "startColumn": 21,
                  "endLine": 359,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 368,
                  "startColumn": 13,
                  "endLine": 368,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 373,
                  "startColumn": 13,
                  "endLine": 373,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 375,
                  "startColumn": 17,
                  "endLine": 375,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 379,
                  "startColumn": 21,
                  "endLine": 379,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 382,
                  "startColumn": 25,
                  "endLine": 382,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'rootType' to 'objectType' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 277,
                  "startColumn": 94,
                  "endLine": 277,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 21,
                  "endLine": 67,
                  "endColumn": 29
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 13,
                  "endLine": 75,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 13,
                  "endLine": 80,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 17,
                  "endLine": 82,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 70,
                  "endLine": 86,
                  "endColumn": 71
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 17,
                  "endLine": 88,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 13,
                  "endLine": 93,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 17,
                  "endLine": 98,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 21,
                  "endLine": 99,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 17,
                  "endLine": 107,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 81,
                  "endLine": 110,
                  "endColumn": 82
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 17,
                  "endLine": 112,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 17,
                  "endLine": 116,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 13,
                  "endLine": 121,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 22 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 300,
                  "startColumn": 22,
                  "endLine": 300,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 302,
                  "startColumn": 13,
                  "endLine": 302,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 309,
                  "startColumn": 13,
                  "endLine": 309,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 309,
                  "startColumn": 69,
                  "endLine": 309,
                  "endColumn": 71
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 316,
                  "startColumn": 13,
                  "endLine": 316,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 321,
                  "startColumn": 13,
                  "endLine": 321,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 321,
                  "startColumn": 47,
                  "endLine": 321,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 326,
                  "startColumn": 13,
                  "endLine": 326,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 326,
                  "startColumn": 47,
                  "endLine": 326,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 332,
                  "startColumn": 17,
                  "endLine": 332,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 335,
                  "startColumn": 13,
                  "endLine": 335,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 338,
                  "startColumn": 17,
                  "endLine": 338,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 344,
                  "startColumn": 17,
                  "endLine": 344,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 349,
                  "startColumn": 25,
                  "endLine": 349,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 349,
                  "startColumn": 49,
                  "endLine": 349,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 356,
                  "startColumn": 25,
                  "endLine": 356,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 356,
                  "startColumn": 49,
                  "endLine": 356,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+2 (incl 1 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+1",
              "14": "+3 (incl 2 for nesting)",
              "15": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 24,
                  "endLine": 142,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 13,
                  "endLine": 144,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 17,
                  "endLine": 155,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 56,
                  "endLine": 155,
                  "endColumn": 58
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 157,
                  "startColumn": 21,
                  "endLine": 157,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 157,
                  "startColumn": 42,
                  "endLine": 157,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 17,
                  "endLine": 167,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 39,
                  "endLine": 167,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 17,
                  "endLine": 171,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 17,
                  "endLine": 176,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 21,
                  "endLine": 178,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 180,
                  "startColumn": 25,
                  "endLine": 180,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 13,
                  "endLine": 189,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 191,
                  "startColumn": 17,
                  "endLine": 191,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 196,
                  "startColumn": 17,
                  "endLine": 196,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+1",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 243,
                  "startColumn": 17,
                  "endLine": 243,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 241,
                  "startColumn": 13,
                  "endLine": 241,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 230,
                  "startColumn": 21,
                  "endLine": 230,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 25 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 544,
                  "startColumn": 22,
                  "endLine": 544,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 546,
                  "startColumn": 13,
                  "endLine": 546,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 546,
                  "startColumn": 35,
                  "endLine": 546,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 548,
                  "startColumn": 17,
                  "endLine": 548,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 554,
                  "startColumn": 71,
                  "endLine": 554,
                  "endColumn": 72
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 556,
                  "startColumn": 17,
                  "endLine": 556,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 558,
                  "startColumn": 21,
                  "endLine": 558,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 565,
                  "startColumn": 21,
                  "endLine": 565,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 570,
                  "startColumn": 21,
                  "endLine": 570,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 574,
                  "startColumn": 25,
                  "endLine": 574,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 578,
                  "startColumn": 25,
                  "endLine": 578,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 23 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 468,
                  "startColumn": 22,
                  "endLine": 468,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 478,
                  "startColumn": 13,
                  "endLine": 478,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 483,
                  "startColumn": 21,
                  "endLine": 483,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 491,
                  "startColumn": 17,
                  "endLine": 491,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 493,
                  "startColumn": 21,
                  "endLine": 493,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 497,
                  "startColumn": 21,
                  "endLine": 497,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 505,
                  "startColumn": 13,
                  "endLine": 505,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 507,
                  "startColumn": 17,
                  "endLine": 507,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 515,
                  "startColumn": 25,
                  "endLine": 515,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 518,
                  "startColumn": 21,
                  "endLine": 518,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 523,
                  "startColumn": 21,
                  "endLine": 523,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 525,
                  "startColumn": 25,
                  "endLine": 525,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+4 (incl 3 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "Use a constructor overloads that allows a more meaningful exception message to be provided.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 386,
                  "startColumn": 27,
                  "endLine": 386,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 22 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 776,
                  "startColumn": 22,
                  "endLine": 776,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 780,
                  "startColumn": 13,
                  "endLine": 780,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 787,
                  "startColumn": 13,
                  "endLine": 787,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 792,
                  "startColumn": 17,
                  "endLine": 792,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 800,
                  "startColumn": 25,
                  "endLine": 800,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 804,
                  "startColumn": 25,
                  "endLine": 804,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 806,
                  "startColumn": 29,
                  "endLine": 806,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 812,
                  "startColumn": 21,
                  "endLine": 812,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 814,
                  "startColumn": 25,
                  "endLine": 814,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 818,
                  "startColumn": 25,
                  "endLine": 818,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 824,
                  "startColumn": 17,
                  "endLine": 824,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 776,
                  "startColumn": 22,
                  "endLine": 776,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1 (recursion)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+4 (incl 3 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 35 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 912,
                  "startColumn": 22,
                  "endLine": 912,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 921,
                  "startColumn": 13,
                  "endLine": 921,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 926,
                  "startColumn": 17,
                  "endLine": 926,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 930,
                  "startColumn": 25,
                  "endLine": 930,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 938,
                  "startColumn": 21,
                  "endLine": 938,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 940,
                  "startColumn": 25,
                  "endLine": 940,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 944,
                  "startColumn": 25,
                  "endLine": 944,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 952,
                  "startColumn": 13,
                  "endLine": 952,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 954,
                  "startColumn": 17,
                  "endLine": 954,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 960,
                  "startColumn": 25,
                  "endLine": 960,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 965,
                  "startColumn": 25,
                  "endLine": 965,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 968,
                  "startColumn": 33,
                  "endLine": 968,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 975,
                  "startColumn": 21,
                  "endLine": 975,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 977,
                  "startColumn": 25,
                  "endLine": 977,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 981,
                  "startColumn": 25,
                  "endLine": 981,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+4 (incl 3 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+4 (incl 3 for nesting)",
              "13": "+1",
              "2": "+3 (incl 2 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1012,
                  "startColumn": 22,
                  "endLine": 1012,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1020,
                  "startColumn": 13,
                  "endLine": 1020,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1026,
                  "startColumn": 13,
                  "endLine": 1026,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1028,
                  "startColumn": 17,
                  "endLine": 1028,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1030,
                  "startColumn": 21,
                  "endLine": 1030,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1035,
                  "startColumn": 17,
                  "endLine": 1035,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1037,
                  "startColumn": 21,
                  "endLine": 1037,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1037,
                  "startColumn": 64,
                  "endLine": 1037,
                  "endColumn": 66
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1042,
                  "startColumn": 17,
                  "endLine": 1042,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1042,
                  "startColumn": 44,
                  "endLine": 1042,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1046,
                  "startColumn": 21,
                  "endLine": 1046,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1056,
                  "startColumn": 22,
                  "endLine": 1056,
                  "endColumn": 41
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1059,
                  "startColumn": 90,
                  "endLine": 1059,
                  "endColumn": 91
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1066,
                  "startColumn": 13,
                  "endLine": 1066,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1071,
                  "startColumn": 13,
                  "endLine": 1071,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1082,
                  "startColumn": 17,
                  "endLine": 1082,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1089,
                  "startColumn": 25,
                  "endLine": 1089,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1097,
                  "startColumn": 25,
                  "endLine": 1097,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1102,
                  "startColumn": 25,
                  "endLine": 1102,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1104,
                  "startColumn": 29,
                  "endLine": 1104,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1114,
                  "startColumn": 21,
                  "endLine": 1114,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1116,
                  "startColumn": 25,
                  "endLine": 1116,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 1120,
                  "startColumn": 25,
                  "endLine": 1120,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 54 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 427,
                  "startColumn": 25,
                  "endLine": 427,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 432,
                  "startColumn": 13,
                  "endLine": 432,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 438,
                  "startColumn": 13,
                  "endLine": 438,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 440,
                  "startColumn": 17,
                  "endLine": 440,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 457,
                  "startColumn": 17,
                  "endLine": 457,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 462,
                  "startColumn": 13,
                  "endLine": 462,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 465,
                  "startColumn": 17,
                  "endLine": 465,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 471,
                  "startColumn": 13,
                  "endLine": 471,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 479,
                  "startColumn": 13,
                  "endLine": 479,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 487,
                  "startColumn": 21,
                  "endLine": 487,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 487,
                  "startColumn": 47,
                  "endLine": 487,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 487,
                  "startColumn": 84,
                  "endLine": 487,
                  "endColumn": 86
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 491,
                  "startColumn": 21,
                  "endLine": 491,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 497,
                  "startColumn": 21,
                  "endLine": 497,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 508,
                  "startColumn": 21,
                  "endLine": 508,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 509,
                  "startColumn": 25,
                  "endLine": 509,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 516,
                  "startColumn": 25,
                  "endLine": 516,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 533,
                  "startColumn": 21,
                  "endLine": 533,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 537,
                  "startColumn": 25,
                  "endLine": 537,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 539,
                  "startColumn": 29,
                  "endLine": 539,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 544,
                  "startColumn": 29,
                  "endLine": 544,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 549,
                  "startColumn": 29,
                  "endLine": 549,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 554,
                  "startColumn": 29,
                  "endLine": 554,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 562,
                  "startColumn": 25,
                  "endLine": 562,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 568,
                  "startColumn": 25,
                  "endLine": 568,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 575,
                  "startColumn": 21,
                  "endLine": 575,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 577,
                  "startColumn": 137,
                  "endLine": 577,
                  "endColumn": 138
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 577,
                  "startColumn": 102,
                  "endLine": 577,
                  "endColumn": 104
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+2 (incl 1 for nesting)",
              "14": "+1",
              "15": "+3 (incl 2 for nesting)",
              "16": "+2 (incl 1 for nesting)",
              "17": "+3 (incl 2 for nesting)",
              "18": "+4 (incl 3 for nesting)",
              "19": "+4 (incl 3 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "20": "+4 (incl 3 for nesting)",
              "21": "+4 (incl 3 for nesting)",
              "22": "+3 (incl 2 for nesting)",
              "23": "+1",
              "24": "+1",
              "25": "+3 (incl 2 for nesting)",
              "26": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 29 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 21,
                  "endLine": 74,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 13,
                  "endLine": 78,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 17,
                  "endLine": 81,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 17,
                  "endLine": 89,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 17,
                  "endLine": 95,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 21,
                  "endLine": 97,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 56,
                  "endLine": 97,
                  "endColumn": 58
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 25,
                  "endLine": 99,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 29,
                  "endLine": 100,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 78,
                  "endLine": 100,
                  "endColumn": 80
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 25,
                  "endLine": 106,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 29,
                  "endLine": 107,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 70,
                  "endLine": 107,
                  "endColumn": 72
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 113,
                  "startColumn": 25,
                  "endLine": 113,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 113,
                  "startColumn": 86,
                  "endLine": 113,
                  "endColumn": 88
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 17,
                  "endLine": 121,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+1",
              "12": "+4 (incl 3 for nesting)",
              "13": "+1",
              "14": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 43 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 601,
                  "startColumn": 22,
                  "endLine": 601,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 606,
                  "startColumn": 13,
                  "endLine": 606,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 611,
                  "startColumn": 17,
                  "endLine": 611,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 614,
                  "startColumn": 21,
                  "endLine": 614,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 614,
                  "startColumn": 60,
                  "endLine": 614,
                  "endColumn": 62
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 621,
                  "startColumn": 21,
                  "endLine": 621,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 624,
                  "startColumn": 25,
                  "endLine": 624,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 631,
                  "startColumn": 25,
                  "endLine": 631,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 631,
                  "startColumn": 49,
                  "endLine": 631,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 641,
                  "startColumn": 17,
                  "endLine": 641,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 649,
                  "startColumn": 21,
                  "endLine": 649,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 651,
                  "startColumn": 25,
                  "endLine": 651,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 654,
                  "startColumn": 29,
                  "endLine": 654,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 656,
                  "startColumn": 33,
                  "endLine": 656,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 668,
                  "startColumn": 17,
                  "endLine": 668,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 673,
                  "startColumn": 17,
                  "endLine": 673,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+4 (incl 3 for nesting)",
              "11": "+5 (incl 4 for nesting)",
              "12": "+6 (incl 5 for nesting)",
              "13": "+2 (incl 1 for nesting)",
              "14": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 41 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 688,
                  "startColumn": 22,
                  "endLine": 688,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 693,
                  "startColumn": 13,
                  "endLine": 693,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 697,
                  "startColumn": 17,
                  "endLine": 697,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 697,
                  "startColumn": 45,
                  "endLine": 697,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 703,
                  "startColumn": 21,
                  "endLine": 703,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 707,
                  "startColumn": 25,
                  "endLine": 707,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 710,
                  "startColumn": 29,
                  "endLine": 710,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 710,
                  "startColumn": 70,
                  "endLine": 710,
                  "endColumn": 72
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 719,
                  "startColumn": 29,
                  "endLine": 719,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 721,
                  "startColumn": 33,
                  "endLine": 721,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 728,
                  "startColumn": 33,
                  "endLine": 728,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 728,
                  "startColumn": 57,
                  "endLine": 728,
                  "endColumn": 59
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 735,
                  "startColumn": 29,
                  "endLine": 735,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 740,
                  "startColumn": 25,
                  "endLine": 740,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 751,
                  "startColumn": 25,
                  "endLine": 751,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 760,
                  "startColumn": 25,
                  "endLine": 760,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 768,
                  "startColumn": 25,
                  "endLine": 768,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 772,
                  "startColumn": 47,
                  "endLine": 772,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+1",
              "16": "+1",
              "2": "+1",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+5 (incl 4 for nesting)",
              "6": "+1",
              "7": "+5 (incl 4 for nesting)",
              "8": "+6 (incl 5 for nesting)",
              "9": "+6 (incl 5 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 656,
                  "startColumn": 33,
                  "endLine": 656,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 654,
                  "startColumn": 29,
                  "endLine": 654,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 9 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 601,
                  "startColumn": 49,
                  "endLine": 601,
                  "endColumn": 276
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this constructor to reduce its Cognitive Complexity from 21 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 113,
                  "startColumn": 16,
                  "endLine": 113,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 13,
                  "endLine": 121,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 17,
                  "endLine": 126,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 130,
                  "startColumn": 17,
                  "endLine": 130,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 21,
                  "endLine": 136,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 13,
                  "endLine": 148,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 17,
                  "endLine": 153,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 13,
                  "endLine": 161,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 17,
                  "endLine": 165,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 13,
                  "endLine": 171,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 33,
                  "endLine": 171,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 17,
                  "endLine": 179,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 54,
                  "endLine": 179,
                  "endColumn": 56
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 187,
                  "startColumn": 13,
                  "endLine": 187,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 13,
                  "endLine": 207,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 43,
                  "endLine": 207,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+2 (incl 1 for nesting)",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "2": "+1",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 9 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 688,
                  "startColumn": 44,
                  "endLine": 688,
                  "endColumn": 269
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'private protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonContract.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 9,
                  "endLine": 239,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 34 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 843,
                  "startColumn": 25,
                  "endLine": 843,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 847,
                  "startColumn": 13,
                  "endLine": 847,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 857,
                  "startColumn": 13,
                  "endLine": 857,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 861,
                  "startColumn": 17,
                  "endLine": 861,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 863,
                  "startColumn": 21,
                  "endLine": 863,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 868,
                  "startColumn": 21,
                  "endLine": 868,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 873,
                  "startColumn": 21,
                  "endLine": 873,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 878,
                  "startColumn": 21,
                  "endLine": 878,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 878,
                  "startColumn": 72,
                  "endLine": 878,
                  "endColumn": 74
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 884,
                  "startColumn": 17,
                  "endLine": 884,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 888,
                  "startColumn": 17,
                  "endLine": 888,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 893,
                  "startColumn": 17,
                  "endLine": 893,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 895,
                  "startColumn": 21,
                  "endLine": 895,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 899,
                  "startColumn": 21,
                  "endLine": 899,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 905,
                  "startColumn": 21,
                  "endLine": 905,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 912,
                  "startColumn": 17,
                  "endLine": 912,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 919,
                  "startColumn": 13,
                  "endLine": 919,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 921,
                  "startColumn": 17,
                  "endLine": 921,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 926,
                  "startColumn": 108,
                  "endLine": 926,
                  "endColumn": 109
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 926,
                  "startColumn": 73,
                  "endLine": 926,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+1",
              "16": "+2 (incl 1 for nesting)",
              "17": "+2 (incl 1 for nesting)",
              "18": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this constructor to reduce its Cognitive Complexity from 32 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 16,
                  "endLine": 116,
                  "endColumn": 33
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 43,
                  "endLine": 122,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 60,
                  "endLine": 123,
                  "endColumn": 62
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 13,
                  "endLine": 128,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 64,
                  "endLine": 135,
                  "endColumn": 66
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 13,
                  "endLine": 137,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 17,
                  "endLine": 139,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 17,
                  "endLine": 143,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 17,
                  "endLine": 148,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 17,
                  "endLine": 153,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 13,
                  "endLine": 161,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 17,
                  "endLine": 165,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 21,
                  "endLine": 166,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 172,
                  "startColumn": 17,
                  "endLine": 172,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 13,
                  "endLine": 183,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 187,
                  "startColumn": 17,
                  "endLine": 187,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 188,
                  "startColumn": 21,
                  "endLine": 188,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 204,
                  "startColumn": 13,
                  "endLine": 204,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 208,
                  "startColumn": 17,
                  "endLine": 208,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 17,
                  "endLine": 219,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 63,
                  "endLine": 219,
                  "endColumn": 65
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 227,
                  "startColumn": 17,
                  "endLine": 227,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 236,
                  "startColumn": 13,
                  "endLine": 236,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 258,
                  "startColumn": 13,
                  "endLine": 258,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 258,
                  "startColumn": 44,
                  "endLine": 258,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+1",
              "14": "+2 (incl 1 for nesting)",
              "15": "+1",
              "16": "+1",
              "17": "+2 (incl 1 for nesting)",
              "18": "+2 (incl 1 for nesting)",
              "19": "+1",
              "2": "+1",
              "20": "+1",
              "21": "+1",
              "22": "+1",
              "23": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 941,
                  "startColumn": 25,
                  "endLine": 941,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 943,
                  "startColumn": 13,
                  "endLine": 943,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 953,
                  "startColumn": 13,
                  "endLine": 953,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 955,
                  "startColumn": 17,
                  "endLine": 955,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 955,
                  "startColumn": 35,
                  "endLine": 955,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 962,
                  "startColumn": 21,
                  "endLine": 962,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 966,
                  "startColumn": 25,
                  "endLine": 966,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 968,
                  "startColumn": 29,
                  "endLine": 968,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 976,
                  "startColumn": 29,
                  "endLine": 976,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 981,
                  "startColumn": 25,
                  "endLine": 981,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 984,
                  "startColumn": 29,
                  "endLine": 984,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 984,
                  "startColumn": 51,
                  "endLine": 984,
                  "endColumn": 53
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1003,
                  "startColumn": 17,
                  "endLine": 1003,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+1",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1012,
                  "startColumn": 22,
                  "endLine": 1012,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1027,
                  "startColumn": 13,
                  "endLine": 1027,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1031,
                  "startColumn": 17,
                  "endLine": 1031,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1041,
                  "startColumn": 13,
                  "endLine": 1041,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1041,
                  "startColumn": 43,
                  "endLine": 1041,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1043,
                  "startColumn": 17,
                  "endLine": 1043,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1043,
                  "startColumn": 41,
                  "endLine": 1043,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1050,
                  "startColumn": 13,
                  "endLine": 1050,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1052,
                  "startColumn": 161,
                  "endLine": 1052,
                  "endColumn": 162
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1058,
                  "startColumn": 13,
                  "endLine": 1058,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1059,
                  "startColumn": 17,
                  "endLine": 1059,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1058,
                  "startColumn": 36,
                  "endLine": 1058,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1063,
                  "startColumn": 17,
                  "endLine": 1063,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1065,
                  "startColumn": 21,
                  "endLine": 1065,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1065,
                  "startColumn": 45,
                  "endLine": 1065,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 984,
                  "startColumn": 29,
                  "endLine": 984,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 981,
                  "startColumn": 30,
                  "endLine": 981,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 22,
                  "endLine": 56,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 13,
                  "endLine": 61,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 17,
                  "endLine": 94,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 17,
                  "endLine": 100,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 21,
                  "endLine": 104,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 25,
                  "endLine": 110,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 21,
                  "endLine": 116,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 13,
                  "endLine": 124,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 130,
                  "startColumn": 23,
                  "endLine": 130,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 13,
                  "endLine": 134,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 17,
                  "endLine": 138,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 21,
                  "endLine": 144,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 25,
                  "endLine": 147,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 33,
                  "endLine": 150,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 33,
                  "endLine": 158,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+5 (incl 4 for nesting)",
              "5": "+5 (incl 4 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 91,
                  "endLine": 239,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 35 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 44,
                  "endLine": 225,
                  "endColumn": 66
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 49,
                  "endLine": 239,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 243,
                  "startColumn": 13,
                  "endLine": 243,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 255,
                  "startColumn": 17,
                  "endLine": 255,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 258,
                  "startColumn": 21,
                  "endLine": 258,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 258,
                  "startColumn": 59,
                  "endLine": 258,
                  "endColumn": 61
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 260,
                  "startColumn": 25,
                  "endLine": 260,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 265,
                  "startColumn": 25,
                  "endLine": 265,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 269,
                  "startColumn": 29,
                  "endLine": 269,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 273,
                  "startColumn": 29,
                  "endLine": 273,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 278,
                  "startColumn": 29,
                  "endLine": 278,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 278,
                  "startColumn": 68,
                  "endLine": 278,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 283,
                  "startColumn": 29,
                  "endLine": 283,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 283,
                  "startColumn": 88,
                  "endLine": 283,
                  "endColumn": 90
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 293,
                  "startColumn": 17,
                  "endLine": 293,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 300,
                  "startColumn": 17,
                  "endLine": 300,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 305,
                  "startColumn": 13,
                  "endLine": 305,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 308,
                  "startColumn": 17,
                  "endLine": 308,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 310,
                  "startColumn": 21,
                  "endLine": 310,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 310,
                  "startColumn": 51,
                  "endLine": 310,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+2 (incl 1 for nesting)",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "14": "+2 (incl 1 for nesting)",
              "15": "+1",
              "16": "+2 (incl 1 for nesting)",
              "17": "+3 (incl 2 for nesting)",
              "18": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1",
              "7": "+5 (incl 4 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 325,
                  "startColumn": 17,
                  "endLine": 325,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 323,
                  "startColumn": 13,
                  "endLine": 323,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 21 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1080,
                  "startColumn": 22,
                  "endLine": 1080,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1099,
                  "startColumn": 13,
                  "endLine": 1099,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1106,
                  "startColumn": 13,
                  "endLine": 1106,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1114,
                  "startColumn": 13,
                  "endLine": 1114,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1115,
                  "startColumn": 17,
                  "endLine": 1115,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1115,
                  "startColumn": 55,
                  "endLine": 1115,
                  "endColumn": 57
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1122,
                  "startColumn": 17,
                  "endLine": 1122,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1126,
                  "startColumn": 81,
                  "endLine": 1126,
                  "endColumn": 83
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1130,
                  "startColumn": 13,
                  "endLine": 1130,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1130,
                  "startColumn": 36,
                  "endLine": 1130,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1132,
                  "startColumn": 17,
                  "endLine": 1132,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1132,
                  "startColumn": 41,
                  "endLine": 1132,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1141,
                  "startColumn": 13,
                  "endLine": 1141,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1141,
                  "startColumn": 45,
                  "endLine": 1141,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1148,
                  "startColumn": 13,
                  "endLine": 1148,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1149,
                  "startColumn": 17,
                  "endLine": 1149,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1157,
                  "startColumn": 13,
                  "endLine": 1157,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1161,
                  "startColumn": 13,
                  "endLine": 1161,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1165,
                  "startColumn": 17,
                  "endLine": 1165,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+1",
              "16": "+1",
              "17": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 340,
                  "startColumn": 46,
                  "endLine": 340,
                  "endColumn": 66
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 358,
                  "startColumn": 13,
                  "endLine": 358,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 364,
                  "startColumn": 17,
                  "endLine": 364,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 371,
                  "startColumn": 13,
                  "endLine": 371,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 378,
                  "startColumn": 13,
                  "endLine": 378,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 383,
                  "startColumn": 17,
                  "endLine": 383,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 388,
                  "startColumn": 17,
                  "endLine": 388,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 399,
                  "startColumn": 17,
                  "endLine": 399,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 399,
                  "startColumn": 58,
                  "endLine": 399,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 402,
                  "startColumn": 21,
                  "endLine": 402,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 408,
                  "startColumn": 17,
                  "endLine": 408,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 413,
                  "startColumn": 21,
                  "endLine": 413,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 422,
                  "startColumn": 13,
                  "endLine": 422,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 429,
                  "startColumn": 13,
                  "endLine": 429,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+3 (incl 2 for nesting)",
              "11": "+1",
              "12": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+3 (incl 2 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1218,
                  "startColumn": 23,
                  "endLine": 1218,
                  "endColumn": 36
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1221,
                  "startColumn": 13,
                  "endLine": 1221,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1226,
                  "startColumn": 13,
                  "endLine": 1226,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1228,
                  "startColumn": 17,
                  "endLine": 1228,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1233,
                  "startColumn": 17,
                  "endLine": 1233,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1237,
                  "startColumn": 21,
                  "endLine": 1237,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1246,
                  "startColumn": 13,
                  "endLine": 1246,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1251,
                  "startColumn": 17,
                  "endLine": 1251,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1258,
                  "startColumn": 13,
                  "endLine": 1258,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1258,
                  "startColumn": 54,
                  "endLine": 1258,
                  "endColumn": 56
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1258,
                  "startColumn": 92,
                  "endLine": 1258,
                  "endColumn": 94
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1262,
                  "startColumn": 17,
                  "endLine": 1262,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1270,
                  "startColumn": 13,
                  "endLine": 1270,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1275,
                  "startColumn": 13,
                  "endLine": 1275,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1277,
                  "startColumn": 17,
                  "endLine": 1277,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+1",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 11 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1080,
                  "startColumn": 46,
                  "endLine": 1091,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1871",
          "level": "warning",
          "message": "Either merge this branch with the identical one on line 1302 or change one of the implementations.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1319,
                  "startColumn": 13,
                  "endLine": 1322,
                  "endColumn": 14
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1302,
                  "startColumn": 13,
                  "endLine": 1305,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 491,
                  "startColumn": 29,
                  "endLine": 491,
                  "endColumn": 54
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 494,
                  "startColumn": 13,
                  "endLine": 494,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 509,
                  "startColumn": 13,
                  "endLine": 509,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 513,
                  "startColumn": 13,
                  "endLine": 513,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 520,
                  "startColumn": 13,
                  "endLine": 520,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 523,
                  "startColumn": 18,
                  "endLine": 523,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 527,
                  "startColumn": 17,
                  "endLine": 527,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 539,
                  "startColumn": 21,
                  "endLine": 539,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 541,
                  "startColumn": 25,
                  "endLine": 541,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 556,
                  "startColumn": 13,
                  "endLine": 556,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 565,
                  "startColumn": 21,
                  "endLine": 565,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+1",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 48 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1354,
                  "startColumn": 24,
                  "endLine": 1354,
                  "endColumn": 42
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1356,
                  "startColumn": 94,
                  "endLine": 1356,
                  "endColumn": 95
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1358,
                  "startColumn": 13,
                  "endLine": 1358,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1367,
                  "startColumn": 13,
                  "endLine": 1367,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1372,
                  "startColumn": 13,
                  "endLine": 1372,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1378,
                  "startColumn": 105,
                  "endLine": 1378,
                  "endColumn": 106
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1381,
                  "startColumn": 13,
                  "endLine": 1381,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1383,
                  "startColumn": 17,
                  "endLine": 1383,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1387,
                  "startColumn": 25,
                  "endLine": 1387,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1397,
                  "startColumn": 33,
                  "endLine": 1397,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1403,
                  "startColumn": 45,
                  "endLine": 1403,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1412,
                  "startColumn": 45,
                  "endLine": 1412,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1419,
                  "startColumn": 45,
                  "endLine": 1419,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1418,
                  "startColumn": 81,
                  "endLine": 1418,
                  "endColumn": 83
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1424,
                  "startColumn": 29,
                  "endLine": 1424,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1429,
                  "startColumn": 29,
                  "endLine": 1429,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1435,
                  "startColumn": 29,
                  "endLine": 1435,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1435,
                  "startColumn": 66,
                  "endLine": 1435,
                  "endColumn": 68
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1439,
                  "startColumn": 29,
                  "endLine": 1439,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1446,
                  "startColumn": 25,
                  "endLine": 1446,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1448,
                  "startColumn": 29,
                  "endLine": 1448,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1452,
                  "startColumn": 29,
                  "endLine": 1452,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1466,
                  "startColumn": 32,
                  "endLine": 1466,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1468,
                  "startColumn": 13,
                  "endLine": 1468,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+4 (incl 3 for nesting)",
              "11": "+4 (incl 3 for nesting)",
              "12": "+1",
              "13": "+3 (incl 2 for nesting)",
              "14": "+3 (incl 2 for nesting)",
              "15": "+3 (incl 2 for nesting)",
              "16": "+1",
              "17": "+1",
              "18": "+3 (incl 2 for nesting)",
              "19": "+4 (incl 3 for nesting)",
              "2": "+1",
              "20": "+1",
              "21": "+1",
              "22": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 629,
                  "startColumn": 34,
                  "endLine": 629,
                  "endColumn": 57
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 633,
                  "startColumn": 13,
                  "endLine": 633,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 636,
                  "startColumn": 17,
                  "endLine": 636,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 639,
                  "startColumn": 21,
                  "endLine": 639,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 641,
                  "startColumn": 25,
                  "endLine": 641,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 644,
                  "startColumn": 29,
                  "endLine": 644,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 644,
                  "startColumn": 56,
                  "endLine": 644,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+5 (incl 4 for nesting)",
              "5": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 50 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1477,
                  "startColumn": 24,
                  "endLine": 1477,
                  "endColumn": 53
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1481,
                  "startColumn": 13,
                  "endLine": 1481,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1497,
                  "startColumn": 13,
                  "endLine": 1497,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1501,
                  "startColumn": 17,
                  "endLine": 1501,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1505,
                  "startColumn": 25,
                  "endLine": 1505,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1507,
                  "startColumn": 29,
                  "endLine": 1507,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1519,
                  "startColumn": 37,
                  "endLine": 1519,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1519,
                  "startColumn": 73,
                  "endLine": 1519,
                  "endColumn": 75
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1523,
                  "startColumn": 37,
                  "endLine": 1523,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1532,
                  "startColumn": 25,
                  "endLine": 1532,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1537,
                  "startColumn": 21,
                  "endLine": 1537,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1541,
                  "startColumn": 25,
                  "endLine": 1541,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1545,
                  "startColumn": 29,
                  "endLine": 1545,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1545,
                  "startColumn": 60,
                  "endLine": 1545,
                  "endColumn": 62
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1551,
                  "startColumn": 29,
                  "endLine": 1551,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1556,
                  "startColumn": 25,
                  "endLine": 1556,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1562,
                  "startColumn": 17,
                  "endLine": 1562,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1564,
                  "startColumn": 21,
                  "endLine": 1564,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1566,
                  "startColumn": 25,
                  "endLine": 1566,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1577,
                  "startColumn": 33,
                  "endLine": 1577,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1581,
                  "startColumn": 33,
                  "endLine": 1581,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1592,
                  "startColumn": 21,
                  "endLine": 1592,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1599,
                  "startColumn": 13,
                  "endLine": 1599,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+4 (incl 3 for nesting)",
              "11": "+5 (incl 4 for nesting)",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+1",
              "16": "+3 (incl 2 for nesting)",
              "17": "+4 (incl 3 for nesting)",
              "18": "+5 (incl 4 for nesting)",
              "19": "+1",
              "2": "+2 (incl 1 for nesting)",
              "20": "+1",
              "21": "+1",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+5 (incl 4 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 23 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 867,
                  "startColumn": 22,
                  "endLine": 867,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 875,
                  "startColumn": 13,
                  "endLine": 875,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 887,
                  "startColumn": 17,
                  "endLine": 887,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 891,
                  "startColumn": 21,
                  "endLine": 891,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 899,
                  "startColumn": 21,
                  "endLine": 899,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 899,
                  "startColumn": 42,
                  "endLine": 899,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 905,
                  "startColumn": 21,
                  "endLine": 905,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 911,
                  "startColumn": 21,
                  "endLine": 911,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 917,
                  "startColumn": 21,
                  "endLine": 917,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 917,
                  "startColumn": 43,
                  "endLine": 917,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 923,
                  "startColumn": 21,
                  "endLine": 923,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 30 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1627,
                  "startColumn": 24,
                  "endLine": 1627,
                  "endColumn": 36
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1630,
                  "startColumn": 82,
                  "endLine": 1630,
                  "endColumn": 83
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1632,
                  "startColumn": 13,
                  "endLine": 1632,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1638,
                  "startColumn": 13,
                  "endLine": 1638,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1648,
                  "startColumn": 13,
                  "endLine": 1648,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1658,
                  "startColumn": 13,
                  "endLine": 1658,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1662,
                  "startColumn": 21,
                  "endLine": 1662,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1664,
                  "startColumn": 25,
                  "endLine": 1664,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1674,
                  "startColumn": 33,
                  "endLine": 1674,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1674,
                  "startColumn": 69,
                  "endLine": 1674,
                  "endColumn": 71
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1678,
                  "startColumn": 33,
                  "endLine": 1678,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1687,
                  "startColumn": 21,
                  "endLine": 1687,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1692,
                  "startColumn": 17,
                  "endLine": 1692,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1696,
                  "startColumn": 21,
                  "endLine": 1696,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1700,
                  "startColumn": 25,
                  "endLine": 1700,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1700,
                  "startColumn": 56,
                  "endLine": 1700,
                  "endColumn": 58
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1706,
                  "startColumn": 25,
                  "endLine": 1706,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1711,
                  "startColumn": 21,
                  "endLine": 1711,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1718,
                  "startColumn": 13,
                  "endLine": 1718,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+4 (incl 3 for nesting)",
              "14": "+1",
              "15": "+1",
              "16": "+1",
              "17": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 45 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1825,
                  "startColumn": 24,
                  "endLine": 1825,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1829,
                  "startColumn": 13,
                  "endLine": 1829,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1834,
                  "startColumn": 13,
                  "endLine": 1834,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1834,
                  "startColumn": 49,
                  "endLine": 1834,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1835,
                  "startColumn": 52,
                  "endLine": 1835,
                  "endColumn": 54
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1839,
                  "startColumn": 13,
                  "endLine": 1839,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1844,
                  "startColumn": 13,
                  "endLine": 1844,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1854,
                  "startColumn": 13,
                  "endLine": 1854,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1856,
                  "startColumn": 17,
                  "endLine": 1856,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1863,
                  "startColumn": 29,
                  "endLine": 1863,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1871,
                  "startColumn": 29,
                  "endLine": 1871,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1871,
                  "startColumn": 50,
                  "endLine": 1871,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1873,
                  "startColumn": 33,
                  "endLine": 1873,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1880,
                  "startColumn": 33,
                  "endLine": 1880,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1885,
                  "startColumn": 29,
                  "endLine": 1885,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1887,
                  "startColumn": 94,
                  "endLine": 1887,
                  "endColumn": 95
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1893,
                  "startColumn": 33,
                  "endLine": 1893,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1893,
                  "startColumn": 68,
                  "endLine": 1893,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1897,
                  "startColumn": 33,
                  "endLine": 1897,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1905,
                  "startColumn": 25,
                  "endLine": 1905,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1907,
                  "startColumn": 29,
                  "endLine": 1907,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1911,
                  "startColumn": 29,
                  "endLine": 1911,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1923,
                  "startColumn": 32,
                  "endLine": 1923,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1925,
                  "startColumn": 13,
                  "endLine": 1925,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+4 (incl 3 for nesting)",
              "12": "+4 (incl 3 for nesting)",
              "13": "+1",
              "14": "+4 (incl 3 for nesting)",
              "15": "+4 (incl 3 for nesting)",
              "16": "+1",
              "17": "+1",
              "18": "+3 (incl 2 for nesting)",
              "19": "+4 (incl 3 for nesting)",
              "2": "+1",
              "20": "+1",
              "21": "+1",
              "22": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 36 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1474,
                  "startColumn": 22,
                  "endLine": 1474,
                  "endColumn": 55
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1482,
                  "startColumn": 13,
                  "endLine": 1482,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1482,
                  "startColumn": 47,
                  "endLine": 1482,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1486,
                  "startColumn": 13,
                  "endLine": 1486,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1497,
                  "startColumn": 13,
                  "endLine": 1497,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1503,
                  "startColumn": 13,
                  "endLine": 1503,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1509,
                  "startColumn": 13,
                  "endLine": 1509,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1518,
                  "startColumn": 13,
                  "endLine": 1518,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1522,
                  "startColumn": 13,
                  "endLine": 1522,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1526,
                  "startColumn": 13,
                  "endLine": 1526,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1531,
                  "startColumn": 13,
                  "endLine": 1531,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1535,
                  "startColumn": 13,
                  "endLine": 1535,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1543,
                  "startColumn": 13,
                  "endLine": 1543,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1556,
                  "startColumn": 86,
                  "endLine": 1556,
                  "endColumn": 87
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1560,
                  "startColumn": 13,
                  "endLine": 1560,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1572,
                  "startColumn": 17,
                  "endLine": 1572,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1574,
                  "startColumn": 75,
                  "endLine": 1574,
                  "endColumn": 76
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1575,
                  "startColumn": 72,
                  "endLine": 1575,
                  "endColumn": 73
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1576,
                  "startColumn": 93,
                  "endLine": 1576,
                  "endColumn": 94
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1582,
                  "startColumn": 13,
                  "endLine": 1582,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1593,
                  "startColumn": 17,
                  "endLine": 1593,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1599,
                  "startColumn": 13,
                  "endLine": 1599,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1608,
                  "startColumn": 60,
                  "endLine": 1608,
                  "endColumn": 62
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1610,
                  "startColumn": 13,
                  "endLine": 1610,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1613,
                  "startColumn": 60,
                  "endLine": 1613,
                  "endColumn": 62
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1621,
                  "startColumn": 13,
                  "endLine": 1621,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1628,
                  "startColumn": 13,
                  "endLine": 1628,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1633,
                  "startColumn": 13,
                  "endLine": 1633,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1637,
                  "startColumn": 13,
                  "endLine": 1637,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+1",
              "14": "+2 (incl 1 for nesting)",
              "15": "+3 (incl 2 for nesting)",
              "16": "+3 (incl 2 for nesting)",
              "17": "+3 (incl 2 for nesting)",
              "18": "+1",
              "19": "+1",
              "2": "+1",
              "20": "+1",
              "21": "+1",
              "22": "+1",
              "23": "+1",
              "24": "+1",
              "25": "+1",
              "26": "+1",
              "27": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 144 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1951,
                  "startColumn": 24,
                  "endLine": 1951,
                  "endColumn": 62
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1956,
                  "startColumn": 80,
                  "endLine": 1956,
                  "endColumn": 82
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1960,
                  "startColumn": 13,
                  "endLine": 1960,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1960,
                  "startColumn": 37,
                  "endLine": 1960,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1971,
                  "startColumn": 13,
                  "endLine": 1971,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1973,
                  "startColumn": 17,
                  "endLine": 1973,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1975,
                  "startColumn": 21,
                  "endLine": 1975,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1977,
                  "startColumn": 25,
                  "endLine": 1977,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1991,
                  "startColumn": 13,
                  "endLine": 1991,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1994,
                  "startColumn": 17,
                  "endLine": 1994,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1996,
                  "startColumn": 21,
                  "endLine": 1996,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1996,
                  "startColumn": 50,
                  "endLine": 1996,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2000,
                  "startColumn": 25,
                  "endLine": 2000,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2004,
                  "startColumn": 25,
                  "endLine": 2004,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2007,
                  "startColumn": 33,
                  "endLine": 2007,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2010,
                  "startColumn": 25,
                  "endLine": 2010,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2020,
                  "startColumn": 17,
                  "endLine": 2020,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2020,
                  "startColumn": 49,
                  "endLine": 2020,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2025,
                  "startColumn": 17,
                  "endLine": 2025,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2025,
                  "startColumn": 49,
                  "endLine": 2025,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2029,
                  "startColumn": 21,
                  "endLine": 2029,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2031,
                  "startColumn": 25,
                  "endLine": 2031,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2031,
                  "startColumn": 71,
                  "endLine": 2031,
                  "endColumn": 73
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2033,
                  "startColumn": 29,
                  "endLine": 2033,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2038,
                  "startColumn": 29,
                  "endLine": 2038,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2059,
                  "startColumn": 13,
                  "endLine": 2059,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2067,
                  "startColumn": 13,
                  "endLine": 2067,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2069,
                  "startColumn": 17,
                  "endLine": 2069,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2069,
                  "startColumn": 34,
                  "endLine": 2069,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2080,
                  "startColumn": 17,
                  "endLine": 2080,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2085,
                  "startColumn": 17,
                  "endLine": 2085,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2085,
                  "startColumn": 45,
                  "endLine": 2085,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2090,
                  "startColumn": 21,
                  "endLine": 2090,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2094,
                  "startColumn": 25,
                  "endLine": 2094,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2094,
                  "startColumn": 66,
                  "endLine": 2094,
                  "endColumn": 68
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2097,
                  "startColumn": 29,
                  "endLine": 2097,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2101,
                  "startColumn": 116,
                  "endLine": 2101,
                  "endColumn": 117
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2104,
                  "startColumn": 33,
                  "endLine": 2104,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2106,
                  "startColumn": 99,
                  "endLine": 2106,
                  "endColumn": 100
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2108,
                  "startColumn": 37,
                  "endLine": 2108,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2116,
                  "startColumn": 21,
                  "endLine": 2116,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2120,
                  "startColumn": 25,
                  "endLine": 2120,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2123,
                  "startColumn": 29,
                  "endLine": 2123,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2125,
                  "startColumn": 105,
                  "endLine": 2125,
                  "endColumn": 106
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2126,
                  "startColumn": 98,
                  "endLine": 2126,
                  "endColumn": 99
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2132,
                  "startColumn": 37,
                  "endLine": 2132,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2150,
                  "startColumn": 13,
                  "endLine": 2150,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2152,
                  "startColumn": 17,
                  "endLine": 2152,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2154,
                  "startColumn": 21,
                  "endLine": 2154,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2154,
                  "startColumn": 45,
                  "endLine": 2154,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2161,
                  "startColumn": 13,
                  "endLine": 2161,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2163,
                  "startColumn": 17,
                  "endLine": 2163,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2165,
                  "startColumn": 21,
                  "endLine": 2165,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+4 (incl 3 for nesting)",
              "12": "+1",
              "13": "+5 (incl 4 for nesting)",
              "14": "+1",
              "15": "+2 (incl 1 for nesting)",
              "16": "+1",
              "17": "+2 (incl 1 for nesting)",
              "18": "+1",
              "19": "+3 (incl 2 for nesting)",
              "2": "+1",
              "20": "+4 (incl 3 for nesting)",
              "21": "+1",
              "22": "+5 (incl 4 for nesting)",
              "23": "+5 (incl 4 for nesting)",
              "24": "+1",
              "25": "+1",
              "26": "+2 (incl 1 for nesting)",
              "27": "+1",
              "28": "+2 (incl 1 for nesting)",
              "29": "+1",
              "3": "+1",
              "30": "+1",
              "31": "+3 (incl 2 for nesting)",
              "32": "+4 (incl 3 for nesting)",
              "33": "+1",
              "34": "+5 (incl 4 for nesting)",
              "35": "+6 (incl 5 for nesting)",
              "36": "+6 (incl 5 for nesting)",
              "37": "+7 (incl 6 for nesting)",
              "38": "+7 (incl 6 for nesting)",
              "39": "+1",
              "4": "+2 (incl 1 for nesting)",
              "40": "+4 (incl 3 for nesting)",
              "41": "+5 (incl 4 for nesting)",
              "42": "+6 (incl 5 for nesting)",
              "43": "+6 (incl 5 for nesting)",
              "44": "+6 (incl 5 for nesting)",
              "45": "+1",
              "46": "+2 (incl 1 for nesting)",
              "47": "+3 (incl 2 for nesting)",
              "48": "+1",
              "49": "+1",
              "5": "+3 (incl 2 for nesting)",
              "50": "+2 (incl 1 for nesting)",
              "51": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1905",
          "level": "warning",
          "message": "Remove this unnecessary cast to 'MemberInfo'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1484,
                  "startColumn": 81,
                  "endLine": 1484,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1977,
                  "startColumn": 25,
                  "endLine": 1977,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1975,
                  "startColumn": 21,
                  "endLine": 1975,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1996,
                  "startColumn": 21,
                  "endLine": 1996,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1994,
                  "startColumn": 17,
                  "endLine": 1994,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2031,
                  "startColumn": 25,
                  "endLine": 2031,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2029,
                  "startColumn": 21,
                  "endLine": 2029,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2696",
          "level": "warning",
          "message": "Remove this set, which updates a 'static' field from an instance method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/CamelCasePropertyNamesContractResolver.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 21,
                  "endLine": 82,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/CamelCasePropertyNamesContractResolver.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 78,
                  "endLine": 40,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldFilter.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 45,
                  "endLine": 16,
                  "endColumn": 58
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldFilter.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 13,
                  "endLine": 18,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldFilter.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 17,
                  "endLine": 20,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldFilter.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 21,
                  "endLine": 22,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldFilter.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 25,
                  "endLine": 26,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldFilter.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 25,
                  "endLine": 30,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldFilter.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldFilter.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldFilter.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 17,
                  "endLine": 43,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/FieldFilter.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 21,
                  "endLine": 45,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArrayIndexFilter.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 45,
                  "endLine": 11,
                  "endColumn": 58
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArrayIndexFilter.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 13,
                  "endLine": 13,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArrayIndexFilter.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 17,
                  "endLine": 15,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArrayIndexFilter.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 21,
                  "endLine": 19,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArrayIndexFilter.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 17,
                  "endLine": 24,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArrayIndexFilter.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 21,
                  "endLine": 26,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArrayIndexFilter.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 37,
                  "endLine": 26,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArrayIndexFilter.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 25,
                  "endLine": 28,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArrayIndexFilter.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 21,
                  "endLine": 33,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArrayIndexFilter.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 25,
                  "endLine": 35,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 53 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2202,
                  "startColumn": 46,
                  "endLine": 2202,
                  "endColumn": 77
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2206,
                  "startColumn": 13,
                  "endLine": 2206,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2208,
                  "startColumn": 17,
                  "endLine": 2208,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2221,
                  "startColumn": 25,
                  "endLine": 2221,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2223,
                  "startColumn": 29,
                  "endLine": 2223,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2225,
                  "startColumn": 33,
                  "endLine": 2225,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2232,
                  "startColumn": 33,
                  "endLine": 2232,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2237,
                  "startColumn": 33,
                  "endLine": 2237,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2237,
                  "startColumn": 63,
                  "endLine": 2237,
                  "endColumn": 65
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2241,
                  "startColumn": 33,
                  "endLine": 2241,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2248,
                  "startColumn": 29,
                  "endLine": 2248,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2250,
                  "startColumn": 33,
                  "endLine": 2250,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2256,
                  "startColumn": 25,
                  "endLine": 2256,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2258,
                  "startColumn": 29,
                  "endLine": 2258,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2263,
                  "startColumn": 29,
                  "endLine": 2263,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2263,
                  "startColumn": 53,
                  "endLine": 2263,
                  "endColumn": 55
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2268,
                  "startColumn": 29,
                  "endLine": 2268,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2274,
                  "startColumn": 25,
                  "endLine": 2274,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2278,
                  "startColumn": 25,
                  "endLine": 2278,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2291,
                  "startColumn": 28,
                  "endLine": 2291,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2293,
                  "startColumn": 13,
                  "endLine": 2293,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+5 (incl 4 for nesting)",
              "11": "+1",
              "12": "+4 (incl 3 for nesting)",
              "13": "+4 (incl 3 for nesting)",
              "14": "+1",
              "15": "+4 (incl 3 for nesting)",
              "16": "+3 (incl 2 for nesting)",
              "17": "+1",
              "18": "+1",
              "19": "+1",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+5 (incl 4 for nesting)",
              "5": "+5 (incl 4 for nesting)",
              "6": "+5 (incl 4 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 48 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 45,
                  "endLine": 14,
                  "endColumn": 58
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 13,
                  "endLine": 16,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 13,
                  "endLine": 21,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 17,
                  "endLine": 23,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 64,
                  "endLine": 27,
                  "endColumn": 65
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 61,
                  "endLine": 28,
                  "endColumn": 62
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 21,
                  "endLine": 31,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 21,
                  "endLine": 37,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 71,
                  "endLine": 43,
                  "endColumn": 72
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 71,
                  "endLine": 44,
                  "endColumn": 72
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 21,
                  "endLine": 50,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 25,
                  "endLine": 52,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 21,
                  "endLine": 57,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 25,
                  "endLine": 59,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 47,
                  "endLine": 62,
                  "endColumn": 48
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 45,
                  "endLine": 63,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 17,
                  "endLine": 67,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 21,
                  "endLine": 69,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+4 (incl 3 for nesting)",
              "11": "+1",
              "12": "+4 (incl 3 for nesting)",
              "13": "+5 (incl 4 for nesting)",
              "14": "+5 (incl 4 for nesting)",
              "15": "+1",
              "16": "+3 (incl 2 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 59 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2344,
                  "startColumn": 24,
                  "endLine": 2344,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2350,
                  "startColumn": 17,
                  "endLine": 2350,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2349,
                  "startColumn": 124,
                  "endLine": 2349,
                  "endColumn": 126
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2353,
                  "startColumn": 13,
                  "endLine": 2353,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2361,
                  "startColumn": 13,
                  "endLine": 2361,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2363,
                  "startColumn": 17,
                  "endLine": 2363,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2369,
                  "startColumn": 25,
                  "endLine": 2369,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2380,
                  "startColumn": 29,
                  "endLine": 2380,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2382,
                  "startColumn": 33,
                  "endLine": 2382,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2382,
                  "startColumn": 57,
                  "endLine": 2382,
                  "endColumn": 59
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2387,
                  "startColumn": 33,
                  "endLine": 2387,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2392,
                  "startColumn": 33,
                  "endLine": 2392,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2401,
                  "startColumn": 29,
                  "endLine": 2401,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2401,
                  "startColumn": 50,
                  "endLine": 2401,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2403,
                  "startColumn": 33,
                  "endLine": 2403,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2411,
                  "startColumn": 29,
                  "endLine": 2411,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2413,
                  "startColumn": 33,
                  "endLine": 2413,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2420,
                  "startColumn": 33,
                  "endLine": 2420,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2428,
                  "startColumn": 33,
                  "endLine": 2428,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2434,
                  "startColumn": 25,
                  "endLine": 2434,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2436,
                  "startColumn": 29,
                  "endLine": 2436,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2440,
                  "startColumn": 29,
                  "endLine": 2440,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2456,
                  "startColumn": 32,
                  "endLine": 2456,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2458,
                  "startColumn": 13,
                  "endLine": 2458,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2463,
                  "startColumn": 13,
                  "endLine": 2463,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2465,
                  "startColumn": 17,
                  "endLine": 2465,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+4 (incl 3 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+1",
              "13": "+4 (incl 3 for nesting)",
              "14": "+1",
              "15": "+4 (incl 3 for nesting)",
              "16": "+4 (incl 3 for nesting)",
              "17": "+4 (incl 3 for nesting)",
              "18": "+3 (incl 2 for nesting)",
              "19": "+4 (incl 3 for nesting)",
              "2": "+1",
              "20": "+1",
              "21": "+1",
              "22": "+1",
              "23": "+1",
              "24": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+1",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 35 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2547,
                  "startColumn": 22,
                  "endLine": 2547,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2549,
                  "startColumn": 13,
                  "endLine": 2549,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2549,
                  "startColumn": 51,
                  "endLine": 2549,
                  "endColumn": 53
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2553,
                  "startColumn": 66,
                  "endLine": 2553,
                  "endColumn": 67
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2555,
                  "startColumn": 21,
                  "endLine": 2555,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2558,
                  "startColumn": 29,
                  "endLine": 2558,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2558,
                  "startColumn": 72,
                  "endLine": 2558,
                  "endColumn": 74
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2563,
                  "startColumn": 29,
                  "endLine": 2563,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2563,
                  "startColumn": 49,
                  "endLine": 2563,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2565,
                  "startColumn": 33,
                  "endLine": 2565,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2570,
                  "startColumn": 33,
                  "endLine": 2570,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2570,
                  "startColumn": 159,
                  "endLine": 2570,
                  "endColumn": 161
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2577,
                  "startColumn": 29,
                  "endLine": 2577,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2581,
                  "startColumn": 29,
                  "endLine": 2581,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2588,
                  "startColumn": 17,
                  "endLine": 2588,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2590,
                  "startColumn": 21,
                  "endLine": 2590,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/Newtonsoft.Json/Src/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2594,
                  "startColumn": 21,
                  "endLine": 2594,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+3 (incl 2 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+2 (incl 1 for nesting)",
              "14": "+3 (incl 2 for nesting)",
              "15": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+4 (incl 3 for nesting)",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        }
      ],
      "rules": {
        "CA1070": {
          "id": "CA1070",
          "shortDescription": "Do not declare event fields as virtual",
          "fullDescription": "Do not declare virtual events in a base class. Overridden events in a derived class have undefined behavior. The C# compiler does not handle this correctly and it is unpredictable whether a subscriber to the derived event will actually be subscribing to the base class event.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1070",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1834": {
          "id": "CA1834",
          "shortDescription": "Consider using 'StringBuilder.Append(char)' when applicable",
          "fullDescription": "'StringBuilder.Append(char)' is more efficient than 'StringBuilder.Append(string)' when the string is a single character. When calling 'Append' with a constant, prefer using a constant char rather than a constant string containing one character.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1834",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2016": {
          "id": "CA2016",
          "shortDescription": "Forward the 'CancellationToken' parameter to methods",
          "fullDescription": "Forward the 'CancellationToken' parameter to methods to ensure the operation cancellation notifications gets properly propagated, or pass in 'CancellationToken.None' explicitly to indicate intentionally not propagating the token.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2016",
          "properties": {
            "category": "Reliability",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS0618": {
          "id": "CS0618",
          "shortDescription": "Type or member is obsolete",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS1574": {
          "id": "CS1574",
          "shortDescription": "XML comment has cref attribute that could not be resolved",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1574)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8600": {
          "id": "CS8600",
          "shortDescription": "Converting null literal or possible null value to non-nullable type.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8600)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8601": {
          "id": "CS8601",
          "shortDescription": "Possible null reference assignment.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8601)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8603": {
          "id": "CS8603",
          "shortDescription": "Possible null reference return.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8603)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possible null reference argument.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8762": {
          "id": "CS8762",
          "shortDescription": "Parameter must have a non-null value when exiting in some condition.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8762)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8767": {
          "id": "CS8767",
          "shortDescription": "Nullability of reference types in type of parameter doesn't match implicitly implemented member (possibly because of nullability attributes).",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8767)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code’s readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S107": {
          "id": "S107",
          "shortDescription": "Methods should not have too many parameters",
          "fullDescription": "A long parameter list can indicate that a new structure should be created to wrap the numerous parameters or that the function is doing too many things.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-107",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1075": {
          "id": "S1075",
          "shortDescription": "URIs should not be hardcoded",
          "fullDescription": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, …​etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1075",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S108": {
          "id": "S108",
          "shortDescription": "Nested blocks of code should not be left empty",
          "fullDescription": "Most of the time a block of code is empty when a piece of code is really missing. So such empty block must be either filled or removed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-108",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General exceptions should never be thrown",
          "fullDescription": "Throwing such general exceptions as Exception, SystemException, ApplicationException, IndexOutOfRangeException, NullReferenceException, OutOfMemoryException and ExecutionEngineException prevents calling methods from handling true, system-generated exceptions differently than application-generated errors.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1125": {
          "id": "S1125",
          "shortDescription": "Boolean literals should not be redundant",
          "fullDescription": "Redundant Boolean literals should be removed from expressions to improve readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1125",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1135": {
          "id": "S1135",
          "shortDescription": "Track uses of \"TODO\" tags",
          "fullDescription": "TODO tags are commonly used to mark places where some more code is required, but which the developer wants to implement later.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1135",
          "properties": {
            "category": "Info Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1168": {
          "id": "S1168",
          "shortDescription": "Empty arrays and collections should be returned instead of null",
          "fullDescription": "Returning null instead of an actual array, collection or map forces callers of the method to explicitly test for nullity, making them more complex and less readable.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1168",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1172": {
          "id": "S1172",
          "shortDescription": "Unused method parameters should be removed",
          "fullDescription": "Unused parameters are misleading. Whatever the values passed to such parameters, the behavior will be the same.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1172",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1186": {
          "id": "S1186",
          "shortDescription": "Methods should not be empty",
          "fullDescription": "There are several reasons for a method not to have a method body:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1186",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1199": {
          "id": "S1199",
          "shortDescription": "Nested code blocks should not be used",
          "fullDescription": "Nested code blocks can be used to create a new scope and restrict the visibility of the variables defined inside it. Using this feature in a method typically indicates that the method has too many responsibilities, and should be refactored into smaller methods.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1199",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1210": {
          "id": "S1210",
          "shortDescription": "\"Equals\" and the comparison operators should be overridden when implementing \"IComparable\"",
          "fullDescription": "When you implement IComparable or IComparable<T> on a class you should also override Equals(object) and overload the comparison operators (==, !=, <, <=, >, >=). That’s because the CLR cannot automatically call your CompareTo implementation from Equals(object) or from the base comparison operator implementations. Additionally, it is best practice to override GetHashCode along with Equals.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1210",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Programmers should not comment out code as it bloats programs and reduces readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1450": {
          "id": "S1450",
          "shortDescription": "Private fields only used as local variables in methods should become local variables",
          "fullDescription": "When the value of a private field is always assigned to in a class' methods before being read, then it is not being used to store class information. Therefore, it should become a local variable in the relevant methods to prevent any misunderstanding.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1450",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1871": {
          "id": "S1871",
          "shortDescription": "Two branches in a conditional structure should not have exactly the same implementation",
          "fullDescription": "Having two cases in the same switch statement or branches in the same if structure with the same implementation is at best duplicate code, and at worst a coding error. If the same logic is truly needed for both instances, then in an if structure they should be combined, or for a switch, one should fall through to the other.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1871",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1905": {
          "id": "S1905",
          "shortDescription": "Redundant casts should not be used",
          "fullDescription": "Unnecessary casting expressions make the code harder to read and understand.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1905",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1940": {
          "id": "S1940",
          "shortDescription": "Boolean checks should not be inverted",
          "fullDescription": "It is needlessly complex to invert the result of a boolean comparison. The opposite comparison should be made instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1940",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1944": {
          "id": "S1944",
          "shortDescription": "Inappropriate casts should not be made",
          "fullDescription": "Inappropriate casts are issues that will lead to unexpected behavior or runtime errors, such as InvalidCastExceptions. The compiler will catch bad casts from one class to another, but not bad casts to interfaces. Nor will it catch nullable values that are known to be null but that are cast to their underlying value types anyway.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1944",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2178": {
          "id": "S2178",
          "shortDescription": "Short-circuit logic should be used in boolean contexts",
          "fullDescription": "The use of non-short-circuit logic in a boolean context is likely a mistake - one that could cause serious program errors as conditions are evaluated under the wrong circumstances.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2178",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2290": {
          "id": "S2290",
          "shortDescription": "Field-like events should not be virtual",
          "fullDescription": "Field-like events are events that do not have explicit add and remove methods. The compiler generates a private delegate field to back the event, as well as generating the implicit add and remove methods.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2290",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2292": {
          "id": "S2292",
          "shortDescription": "Trivial properties should be auto-implemented",
          "fullDescription": "Trivial properties, which include no logic but setting and getting a backing field should be converted to auto-implemented properties, yielding cleaner and more readable code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2292",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2328": {
          "id": "S2328",
          "shortDescription": "\"GetHashCode\" should not reference mutable fields",
          "fullDescription": "GetHashCode is used to file an object in a Dictionary or Hashtable. If GetHashCode uses non-readonly fields and those fields change after the object is stored, the object immediately becomes mis-filed in the Hashtable. Any subsequent test to see if the object is in the Hashtable will return a false negative.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2328",
          "properties": {
            "category": "Minor Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2342": {
          "id": "S2342",
          "shortDescription": "Enumeration types should comply with a naming convention",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks that all enum names match a provided regular expression.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2342",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2344": {
          "id": "S2344",
          "shortDescription": "Enumeration type names should not have \"Flags\" or \"Enum\" suffixes",
          "fullDescription": "The information that an enumeration type is actually an enumeration or a set of flags should not be duplicated in its name.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2344",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2346": {
          "id": "S2346",
          "shortDescription": "Flags enumerations zero-value members should be named \"None\"",
          "fullDescription": "Consistent use of \"None\" in flags enumerations indicates that all flag values are cleared. The value 0 should not be used to indicate any other state, since there is no way to check that the bit 0 is set.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2346",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2365": {
          "id": "S2365",
          "shortDescription": "Properties should not make collection or array copies",
          "fullDescription": "Most developers expect property access to be as efficient as field access. However, if a property returns a copy of an array or collection, it will be much slower than simple field access, contrary to the caller’s likely expectations. Therefore, such properties should be refactored into methods so that callers are not surprised by the unexpectedly poor performance.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2365",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2372": {
          "id": "S2372",
          "shortDescription": "Exceptions should not be thrown from property getters",
          "fullDescription": "Property getters should be simple operations that are always safe to call. If exceptions need to be thrown, it is best to convert the property to a method.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2372",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2589": {
          "id": "S2589",
          "shortDescription": "Boolean expressions should not be gratuitous",
          "fullDescription": "If a boolean expression doesn’t change the evaluation of the condition, then it is entirely unnecessary, and can be removed. If it is gratuitous because it does not match the programmer’s intent, then it’s a bug and the expression should be fixed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2589",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2696": {
          "id": "S2696",
          "shortDescription": "Instance members should not write to \"static\" fields",
          "fullDescription": "Correctly updating a static field from a non-static method is tricky to get right and could easily lead to bugs if there are multiple class instances and/or multiple threads in play.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2696",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2743": {
          "id": "S2743",
          "shortDescription": "Static fields should not be used in generic types",
          "fullDescription": "A static field in a generic type is not shared among instances of different closed constructed types, thus LengthLimitedSingletonCollection<int>.instances and LengthLimitedSingletonCollection<string>.instances will point to different objects, even though instances is seemingly shared among all LengthLimitedSingletonCollection<> generic classes.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2743",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2933": {
          "id": "S2933",
          "shortDescription": "Fields that are only assigned in the constructor should be \"readonly\"",
          "fullDescription": "readonly fields can only be assigned in a class constructor. If a class has a field that’s not marked readonly but is only set in the constructor, it could cause confusion about the field’s intended use. To avoid confusion, such fields should be marked readonly to make their intended use explicit, and to prevent future maintainers from inadvertently changing their use.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2933",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2953": {
          "id": "S2953",
          "shortDescription": "Methods named \"Dispose\" should implement \"IDisposable.Dispose\"",
          "fullDescription": "Dispose as a method name should be used exclusively to implement IDisposable.Dispose to prevent any confusion.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2953",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2971": {
          "id": "S2971",
          "shortDescription": "\"IEnumerable\" LINQs should be simplified",
          "fullDescription": "In the interests of readability, code that can be simplified should be simplified. To that end, there are several ways IEnumerable language integrated queries (LINQ) can be simplified",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2971",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3217": {
          "id": "S3217",
          "shortDescription": "\"Explicit\" conversions of \"foreach\" loops should not be used",
          "fullDescription": "The foreach statement was introduced in the C# language prior to generics to make it easier to work with the non-generic collections available at that time such as ArrayList. The foreach statements allows you to downcast elements of a collection of Objects to any other type. The problem is that to achieve the cast, the foreach statements silently performs explicit type conversion, which at runtime can result in an InvalidCastException.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3217",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3220": {
          "id": "S3220",
          "shortDescription": "Method calls should not resolve ambiguously to overloads with \"params\"",
          "fullDescription": "The rules for method resolution are complex and perhaps not properly understood by all coders. The params keyword can make method declarations overlap in non-obvious ways, so that slight changes in the argument types of an invocation can resolve to different methods.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3220",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3237": {
          "id": "S3237",
          "shortDescription": "\"value\" parameters should be used",
          "fullDescription": "In property and indexer set methods, and in event add and remove methods, the implicit value parameter holds the value the accessor was called with. Not using the value means that the accessor ignores the caller’s intent which could cause unexpected results at runtime.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3237",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3241": {
          "id": "S3241",
          "shortDescription": "Methods should not return values that are never used",
          "fullDescription": "Private methods are clearly intended for use only within their own scope. When such methods return values that are never used by any of their callers, then clearly there is no need to actually make the return, and it should be removed in the interests of efficiency and clarity.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3241",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3246": {
          "id": "S3246",
          "shortDescription": "Generic type parameters should be co/contravariant when possible",
          "fullDescription": "In the interests of making code as usable as possible, interfaces and delegates with generic parameters should use the out and in modifiers when possible to make the interfaces and delegates covariant and contravariant, respectively.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3246",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3260": {
          "id": "S3260",
          "shortDescription": "Non-derived \"private\" classes and records should be \"sealed\"",
          "fullDescription": "private classes and records aren’t visible outside of their assemblies anyway, so if they’re not extended inside the assemblies, they should be made explicitly non-extensible with the addition of the sealed keyword.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3260",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3267": {
          "id": "S3267",
          "shortDescription": "Loops should be simplified with \"LINQ\" expressions",
          "fullDescription": "When a loop is filtering, selecting or aggregating, those functions can be handled with a clearer, more concise LINQ expression instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3267",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3358": {
          "id": "S3358",
          "shortDescription": "Ternary operators should not be nested",
          "fullDescription": "Just because you can do something, doesn’t mean you should, and that’s the case with nested ternary operations. Nesting ternary operators results in the kind of code that may seem clear as day when you write it, but six months later will leave maintainers (or worse - future you) scratching their heads and cursing.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3358",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3442": {
          "id": "S3442",
          "shortDescription": "\"abstract\" classes should not have \"public\" constructors",
          "fullDescription": "Since abstract classes can’t be instantiated, there’s no point in their having public or internal constructors. If there is basic initialization logic that should run when an extending class instance is created, you can by all means put it in a constructor, but make that constructor private, private protected or protected.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3442",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3626": {
          "id": "S3626",
          "shortDescription": "Jump statements should not be redundant",
          "fullDescription": "Jump statements, such as return, yield break, goto, and continue let you change the default flow of program execution, but jump statements that direct the control flow to the original direction are just a waste of keystrokes.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3626",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3928": {
          "id": "S3928",
          "shortDescription": "Parameter names used into ArgumentException constructors should match an existing one ",
          "fullDescription": "Some constructors of the ArgumentException, ArgumentNullException, ArgumentOutOfRangeException and DuplicateWaitObjectException classes must be fed with a valid parameter name. This rule raises an issue in two cases:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3928",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3963": {
          "id": "S3963",
          "shortDescription": "\"static\" fields should be initialized inline",
          "fullDescription": "When a static constructor serves no other purpose that initializing static fields, it comes with an unnecessary performance cost because the compiler generates a check before each static method or instance constructor invocation.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3963",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4035": {
          "id": "S4035",
          "shortDescription": "Classes implementing \"IEquatable<T>\" should be sealed",
          "fullDescription": "When a class implements the IEquatable<T> interface, it enters a contract that, in effect, states \"I know how to compare two instances of type T or any type derived from T for equality.\". However if that class is derived, it is very unlikely that the base class will know how to make a meaningful comparison. Therefore that implicit contract is now broken.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4035",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4136": {
          "id": "S4136",
          "shortDescription": "Method overloads should be grouped together",
          "fullDescription": "For clarity, all overloads of the same method should be grouped together. That lets both users and maintainers quickly understand all the current available options.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4136",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4144": {
          "id": "S4144",
          "shortDescription": "Methods should not have identical implementations",
          "fullDescription": "When two methods have the same implementation, either it was a mistake - something else was intended - or the duplication was intentional, but may be confusing to maintainers. In the latter case, one implementation should invoke the other.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4275": {
          "id": "S4275",
          "shortDescription": "Getters and setters should access the expected fields",
          "fullDescription": "Properties provide a way to enforce encapsulation by providing public, protected or internal methods that give controlled access to private fields. However in classes with multiple fields it is not unusual that cut and paste is used to quickly create the needed properties, which can result in the wrong field being accessed by a getter or setter.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4275",
          "properties": {
            "category": "Critical Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4456": {
          "id": "S4456",
          "shortDescription": "Parameter validation in yielding methods should be wrapped",
          "fullDescription": "Because of the way yield methods are rewritten by the compiler (they become lazily evaluated state machines) any exceptions thrown during the parameters check will happen only when the collection is iterated over. That could happen far away from the source of the buggy code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4456",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4524": {
          "id": "S4524",
          "shortDescription": "\"default\" clauses should be first or last",
          "fullDescription": "switch can contain a default clause for various reasons: to handle unexpected values, to show that all the cases were properly considered.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4524",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4581": {
          "id": "S4581",
          "shortDescription": "\"new Guid()\" should not be used",
          "fullDescription": "When the syntax new Guid() (i.e. parameterless instantiation) is used, it must be that one of three things is wanted:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4581",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S907": {
          "id": "S907",
          "shortDescription": "\"goto\" statement should not be used",
          "fullDescription": "goto is an unstructured control flow statement. It makes code less readable and maintainable. Structured control flow statements such as if, for, while, continue or break should be used instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-907",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S927": {
          "id": "S927",
          "shortDescription": "Parameter names should match base declaration and other partial definitions",
          "fullDescription": "The name of a parameter in an externally visible. This rule raises an issue when method override does not match the name of the parameter in the base declaration of the method, or the name of the parameter in the interface declaration of the method or the name of any other partial definition.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-927",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}