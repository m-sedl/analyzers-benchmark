{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.0.0.0",
        "fileVersion": "4.0.1-1.22181.2 (487283bc)",
        "semanticVersion": "4.0.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS0612",
          "level": "warning",
          "message": "'LabelData' is obsolete",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/OnChainWalletTransactionData.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 35,
                  "endLine": 17,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0612",
          "level": "warning",
          "message": "'LabelData' is obsolete",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/OnChainWalletUTXOData.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 35,
                  "endLine": 19,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0612",
          "level": "warning",
          "message": "'LabelData' is obsolete",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/OnChainWalletTransactionData.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 35,
                  "endLine": 17,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0612",
          "level": "warning",
          "message": "'LabelData' is obsolete",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/OnChainWalletUTXOData.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 35,
                  "endLine": 19,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0612",
          "level": "warning",
          "message": "'LabelData' is obsolete",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/OnChainWalletTransactionData.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 92,
                  "endLine": 17,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.CustodianAccounts.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 13,
                  "endLine": 62,
                  "endColumn": 132
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/DepositAddressData.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 5,
                  "endLine": 8,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'WordcountJsonConverter' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/JsonConverters/WordcountJsonConverter.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 14,
                  "endLine": 8,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'WordlistJsonConverter' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/JsonConverters/WordlistJsonConverter.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 14,
                  "endLine": 8,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'GreenfieldAPIException' to match pascal case naming rules, consider using 'GreenfieldApiException'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/GreenFieldAPIException.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/GreenFieldAPIException.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/GreenFieldAPIException.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 12,
                  "endLine": 5,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/GreenFieldAPIException.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 12,
                  "endLine": 5,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'GreenfieldAPIException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'GreenfieldAPIException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/GreenFieldValidationException.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 18,
                  "endLine": 7,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/GreenFieldValidationException.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 12,
                  "endLine": 7,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/GreenFieldValidationException.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 12,
                  "endLine": 7,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'GreenfieldValidationException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'GreenfieldValidationException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Permissions.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 18,
                  "endLine": 7,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'OnChainWalletUTXOData' to match pascal case naming rules, consider using 'OnChainWalletUtxoData'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/OnChainWalletUTXOData.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 18,
                  "endLine": 10,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/SendEmailRequest.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/SendEmailRequest.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/SendEmailRequest.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'GreenfieldAPIError' to match pascal case naming rules, consider using 'GreenfieldApiError'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/GreenfieldAPIError.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'GreenfieldPermissionAPIError' to match pascal case naming rules, consider using 'GreenfieldPermissionApiError'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/GreenfieldPermissionAPIError.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'LNURLPayPaymentMethodBaseData' to match pascal case naming rules, consider using 'LnurlPayPaymentMethodBaseData'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/LNURLPayPaymentMethodBaseData.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 18,
                  "endLine": 3,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'LNURLPayPaymentMethodData' to match pascal case naming rules, consider using 'LnurlPayPaymentMethodData'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/LNURLPayPaymentMethodData.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 18,
                  "endLine": 3,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1123",
          "level": "warning",
          "message": "Add an explanation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/LabelData.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 6,
                  "endLine": 8,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3887",
          "level": "warning",
          "message": "Use an immutable collection or reduce the accessibility of the non-private readonly field 'PermissionNodes'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/PermissionMetadata.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 32,
                  "endLine": 34,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2386",
          "level": "warning",
          "message": "Use an immutable collection or reduce the accessibility of the public static field 'PermissionNodes'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/PermissionMetadata.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 32,
                  "endLine": 34,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.APIKeys.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 26,
                  "endLine": 9,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Apps.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 26,
                  "endLine": 9,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3963",
          "level": "warning",
          "message": "Initialize all 'static fields' inline and remove the 'static constructor'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/JsonConverters/WordcountJsonConverter.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 5,
                  "endLine": 21,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3963",
          "level": "warning",
          "message": "Initialize all 'static fields' inline and remove the 'static constructor'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/JsonConverters/WordlistJsonConverter.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 5,
                  "endLine": 26,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Authorization.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 26,
                  "endLine": 7,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 26,
                  "endLine": 14,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.CustodianAccounts.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 26,
                  "endLine": 9,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Custodians.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 26,
                  "endLine": 8,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Health.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 26,
                  "endLine": 7,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Invoices.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 26,
                  "endLine": 12,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Internal.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 26,
                  "endLine": 10,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Store.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 26,
                  "endLine": 10,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.LightningNetworkPaymentMethods.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 26,
                  "endLine": 9,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.LNURLPayPaymentMethods.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 26,
                  "endLine": 9,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.APIKeys.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 47,
                  "endLine": 17,
                  "endColumn": 59
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.APIKeys.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 23,
                  "endLine": 20,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Misc.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 26,
                  "endLine": 10,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Notifications.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 26,
                  "endLine": 10,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.OnChainPaymentMethods.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 26,
                  "endLine": 9,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.OnChainWallet.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 26,
                  "endLine": 12,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4456",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the iterator.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Permissions.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 47,
                  "endLine": 165,
                  "endColumn": 60
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Permissions.cs",
                "region": {
                  "startLine": 168,
                  "startColumn": 23,
                  "endLine": 168,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.PaymentRequests.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 26,
                  "endLine": 10,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.PayoutProcessors.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 26,
                  "endLine": 9,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.APIKeys.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 35,
                  "endLine": 31,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.APIKeys.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 23,
                  "endLine": 34,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.PullPayments.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 26,
                  "endLine": 10,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.ServerInfo.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 26,
                  "endLine": 7,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Apps.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 55,
                  "endLine": 12,
                  "endColumn": 75
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Apps.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 23,
                  "endLine": 16,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Apps.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 55,
                  "endLine": 23,
                  "endColumn": 75
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Apps.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 23,
                  "endLine": 27,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.StoreEmail.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 26,
                  "endLine": 8,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.StorePaymentMethods.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 26,
                  "endLine": 8,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Apps.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 48,
                  "endLine": 34,
                  "endColumn": 54
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Apps.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 23,
                  "endLine": 37,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.StorePayoutProcessors.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 26,
                  "endLine": 10,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.StoreRatesConfiguration.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 26,
                  "endLine": 9,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Stores.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 26,
                  "endLine": 10,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.StoreUsers.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 26,
                  "endLine": 10,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Users.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 26,
                  "endLine": 9,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2583",
          "level": "warning",
          "message": "Change this condition so that it does not always evaluate to 'false'; some subsequent code is never executed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/GreenFieldAPIException.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 17,
                  "endLine": 9,
                  "endColumn": 30
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/GreenFieldAPIException.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 17,
                  "endLine": 10,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Apps.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 35,
                  "endLine": 44,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Apps.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 23,
                  "endLine": 47,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BTCPayServerClient' to match pascal case naming rules, consider using 'BtcPayServerClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Webhooks.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 26,
                  "endLine": 8,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3875",
          "level": "warning",
          "message": "Remove this overload of 'operator =='.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Permissions.cs",
                "region": {
                  "startLine": 229,
                  "startColumn": 37,
                  "endLine": 229,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 10 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/WithdrawalResponseData.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 34,
                  "endLine": 27,
                  "endColumn": 127
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1643",
          "level": "warning",
          "message": "Use a StringBuilder instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 21,
                  "endLine": 140,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/WebhookEvent.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 21,
                  "endLine": 33,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/WebhookEvent.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 17,
                  "endLine": 27,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3963",
          "level": "warning",
          "message": "Initialize all 'static fields' inline and remove the 'static constructor'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/WebhookEvent.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 9,
                  "endLine": 19,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3963",
          "level": "warning",
          "message": "Initialize all 'static fields' inline and remove the 'static constructor'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/Models/PermissionMetadata.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 9,
                  "endLine": 33,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Invoices.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 48,
                  "endLine": 81,
                  "endColumn": 61
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Invoices.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 23,
                  "endLine": 85,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'Status' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Invoices.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 23,
                  "endLine": 109,
                  "endColumn": 120
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Invoices.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 48,
                  "endLine": 92,
                  "endColumn": 61
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Invoices.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 23,
                  "endLine": 96,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Invoices.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 48,
                  "endLine": 103,
                  "endColumn": 65
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Invoices.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 23,
                  "endLine": 107,
                  "endColumn": 65
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Invoices.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 23,
                  "endLine": 109,
                  "endColumn": 120
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Internal.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 35,
                  "endLine": 30,
                  "endColumn": 57
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Internal.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 23,
                  "endLine": 34,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Internal.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 57,
                  "endLine": 66,
                  "endColumn": 76
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Internal.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 23,
                  "endLine": 70,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Internal.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 57,
                  "endLine": 77,
                  "endColumn": 76
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Internal.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 23,
                  "endLine": 81,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Internal.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 57,
                  "endLine": 88,
                  "endColumn": 76
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Internal.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 23,
                  "endLine": 92,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 10 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Invoices.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 72,
                  "endLine": 22,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Internal.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 57,
                  "endLine": 117,
                  "endColumn": 79
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Internal.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 23,
                  "endLine": 121,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Store.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 35,
                  "endLine": 30,
                  "endColumn": 57
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Store.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 23,
                  "endLine": 34,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Store.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 57,
                  "endLine": 68,
                  "endColumn": 76
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Store.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 23,
                  "endLine": 72,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Store.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 57,
                  "endLine": 79,
                  "endColumn": 76
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Store.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 23,
                  "endLine": 83,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Store.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 57,
                  "endLine": 90,
                  "endColumn": 76
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Store.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 23,
                  "endLine": 94,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Store.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 57,
                  "endLine": 119,
                  "endColumn": 79
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Lightning.Store.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 23,
                  "endLine": 123,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'ProceedWithBroadcast' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.OnChainWallet.cs",
                "region": {
                  "startLine": 115,
                  "startColumn": 23,
                  "endLine": 116,
                  "endColumn": 120
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'ProceedWithBroadcast' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.OnChainWallet.cs",
                "region": {
                  "startLine": 130,
                  "startColumn": 23,
                  "endLine": 131,
                  "endColumn": 106
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.OnChainWallet.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 48,
                  "endLine": 124,
                  "endColumn": 89
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.OnChainWallet.cs",
                "region": {
                  "startLine": 130,
                  "startColumn": 23,
                  "endLine": 131,
                  "endColumn": 106
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.OnChainWallet.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 65,
                  "endLine": 109,
                  "endColumn": 89
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.OnChainWallet.cs",
                "region": {
                  "startLine": 115,
                  "startColumn": 23,
                  "endLine": 116,
                  "endColumn": 120
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.PaymentRequests.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 55,
                  "endLine": 40,
                  "endColumn": 75
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.PaymentRequests.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 23,
                  "endLine": 44,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.PaymentRequests.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 55,
                  "endLine": 51,
                  "endColumn": 75
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.PaymentRequests.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 23,
                  "endLine": 55,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Stores.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 46,
                  "endLine": 32,
                  "endColumn": 57
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Stores.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 23,
                  "endLine": 35,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Stores.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 46,
                  "endLine": 40,
                  "endColumn": 57
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Stores.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 23,
                  "endLine": 43,
                  "endColumn": 65
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.Stores.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 23,
                  "endLine": 45,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.StoreUsers.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 35,
                  "endLine": 26,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Client/BTCPayServerClient.StoreUsers.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 23,
                  "endLine": 30,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS0612": {
          "id": "CS0612",
          "shortDescription": "Type or member is obsolete",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0612)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks whether or not type names are using PascalCase. To reduce noise, two consecutive upper case characters are allowed unless they form the whole type name. So, MyXClass is compliant, but XC on its own is not.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code’s readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S107": {
          "id": "S107",
          "shortDescription": "Methods should not have too many parameters",
          "fullDescription": "A long parameter list can indicate that a new structure should be created to wrap the numerous parameters or that the function is doing too many things.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-107",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1104": {
          "id": "S1104",
          "shortDescription": "Fields should not have public accessibility",
          "fullDescription": "Public fields in public classes do not respect the encapsulation principle and has three main disadvantages:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1104",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Utility classes, which are collections of static members, are not meant to be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1123": {
          "id": "S1123",
          "shortDescription": "\"Obsolete\" attributes should include explanations",
          "fullDescription": "The Obsolete attribute can be applied with or without arguments, but marking something Obsolete without including advice as to why it’s obsolete or on what to use instead will lead maintainers to waste time trying to figure those things out - every single time the warning is encountered.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1123",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Programmers should not comment out code as it bloats programs and reduces readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1643": {
          "id": "S1643",
          "shortDescription": "Strings should not be concatenated using '+' in a loop",
          "fullDescription": "StringBuilder is more efficient than string concatenation, especially when the operator is repeated over and over as in loops.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1643",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2386": {
          "id": "S2386",
          "shortDescription": "Mutable fields should not be \"public static\"",
          "fullDescription": "public static mutable fields of classes which are accessed directly should be protected to the degree possible. This can be done by reducing the accessibility of the field or by changing the return type to an immutable type.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2386",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2583": {
          "id": "S2583",
          "shortDescription": "Conditionally executed code should be reachable",
          "fullDescription": "Conditional expressions which are always true or false can lead to dead code. Such code is always buggy and should never be used in production.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2583",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3875": {
          "id": "S3875",
          "shortDescription": "\"operator==\" should not be overloaded on reference types",
          "fullDescription": "The use of == to compare two objects is expected to do a reference comparison. That is, it is expected to return true if and only if they are the same object instance. Overloading the operator to do anything else will inevitably lead to the introduction of bugs by callers. On the other hand, overloading it to do exactly that is pointless; that’s what == does by default.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3875",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3887": {
          "id": "S3887",
          "shortDescription": "Mutable, non-private fields should not be \"readonly\"",
          "fullDescription": "Using the readonly keyword on a field means that it can’t be changed after initialization. However, when applied to collections or arrays, that’s only partly true. readonly enforces that another instance can’t be assigned to the field, but it cannot keep the contents from being updated. That means that in practice, the field value really can be changed, and the use of readonly on such a field is misleading, and you’re likely to not be getting the behavior you expect.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3887",
          "properties": {
            "category": "Minor Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3903": {
          "id": "S3903",
          "shortDescription": "Types should be defined in named namespaces",
          "fullDescription": "Types are declared in namespaces in order to prevent name collisions and as a way to organize them into the object hierarchy. Types that are defined outside any named namespace are in a global namespace that cannot be referenced in code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3903",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3925": {
          "id": "S3925",
          "shortDescription": "\"ISerializable\" should be implemented correctly",
          "fullDescription": "The ISerializable interface is the mechanism to control the type serialization process. If not implemented correctly this could result in an invalid serialization and hard to detect bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3925",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3928": {
          "id": "S3928",
          "shortDescription": "Parameter names used into ArgumentException constructors should match an existing one ",
          "fullDescription": "Some constructors of the ArgumentException, ArgumentNullException, ArgumentOutOfRangeException and DuplicateWaitObjectException classes must be fed with a valid parameter name. This rule raises an issue in two cases:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3928",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3963": {
          "id": "S3963",
          "shortDescription": "\"static\" fields should be initialized inline",
          "fullDescription": "When a static constructor serves no other purpose that initializing static fields, it comes with an unnecessary performance cost because the compiler generates a check before each static method or instance constructor invocation.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3963",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4456": {
          "id": "S4456",
          "shortDescription": "Parameter validation in yielding methods should be wrapped",
          "fullDescription": "Because of the way yield methods are rewritten by the compiler (they become lazily evaluated state machines) any exceptions thrown during the parameters check will happen only when the collection is iterated over. That could happen far away from the source of the buggy code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4456",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4457": {
          "id": "S4457",
          "shortDescription": "Parameter validation in \"async\"/\"await\" methods should be wrapped",
          "fullDescription": "Because of the way async/await methods are rewritten by the compiler, any exceptions thrown during the parameters check will happen only when the task is observed. That could happen far away from the source of the buggy code or never happen for fire-and-forget tasks.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4457",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}