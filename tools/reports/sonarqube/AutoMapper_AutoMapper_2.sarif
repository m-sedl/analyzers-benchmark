{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.0.0.0",
        "fileVersion": "4.0.1-1.22181.2 (487283bc)",
        "semanticVersion": "4.0.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<int>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/ArraysAndLists.cs",
                "region": {
                  "startLine": 309,
                  "startColumn": 52,
                  "endLine": 309,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<int>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/ArraysAndLists.cs",
                "region": {
                  "startLine": 341,
                  "startColumn": 52,
                  "endLine": 341,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2211",
          "level": "note",
          "message": "Non-constant fields should not be visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Mappers/CustomMapperTests.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 39,
                  "endLine": 120,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2211",
          "level": "note",
          "message": "Non-constant fields should not be visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/GenericTypeConverter.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 38,
                  "endLine": 68,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2211",
          "level": "note",
          "message": "Non-constant fields should not be visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/GenericTypeConverter.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 43,
                  "endLine": 69,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2211",
          "level": "note",
          "message": "Non-constant fields should not be visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/GenericTypeConverter.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 27,
                  "endLine": 70,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2211",
          "level": "note",
          "message": "Non-constant fields should not be visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/GenericTypeConverter.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 43,
                  "endLine": 71,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2211",
          "level": "note",
          "message": "Non-constant fields should not be visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/GenericTypeConverter.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 43,
                  "endLine": 72,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2211",
          "level": "note",
          "message": "Non-constant fields should not be visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/GenericTypeConverter.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 51,
                  "endLine": 108,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<SourceMember>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MapToAttributeTest.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 52,
                  "endLine": 23,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<string>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/CollectionMapping.cs",
                "region": {
                  "startLine": 494,
                  "startColumn": 91,
                  "endLine": 494,
                  "endColumn": 104
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1816",
          "level": "note",
          "message": "Change AutoMapperTester.Dispose() to call GC.SuppressFinalize(object). This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/AutoMapperTester.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 17,
                  "endLine": 18,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/BasicFlattening.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 17,
                  "endLine": 78,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/BasicFlattening.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 17,
                  "endLine": 84,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/ValueTypes.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 17,
                  "endLine": 32,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/BidirectionalRelationshipsWithoutPR.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 17,
                  "endLine": 52,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/TypeExtensionsTests.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 21,
                  "endLine": 20,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'Value5' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/TypeExtensionsTests.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 23,
                  "endLine": 16,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetValue' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/ShouldMapMethod.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 20,
                  "endLine": 8,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/WithoutPreserveReferencesSameDestination.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 17,
                  "endLine": 25,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/ReverseMapping.cs",
                "region": {
                  "startLine": 469,
                  "startColumn": 9,
                  "endLine": 469,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/ReverseMapping.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 17,
                  "endLine": 121,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/UseDestinationValue.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 17,
                  "endLine": 100,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/SubclassMappings.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 17,
                  "endLine": 26,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<SourceTree<string>>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/OpenGenerics.cs",
                "region": {
                  "startLine": 336,
                  "startColumn": 54,
                  "endLine": 336,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<Person>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/SequenceContainsNoElementsTest.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 30,
                  "endLine": 13,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "ShouldDiscoverMissingMappingsInIncludedType creates a new instance of MapperConfiguration which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/ReportMissingInclude.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 26,
                  "endLine": 68,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "ShouldDiscoverMissingMappingsInIncludedType creates a new instance of MapperConfiguration which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/ReportMissingInclude.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 26,
                  "endLine": 49,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "ShouldDiscoverMissingMappingsInIncludedType creates a new instance of MapperConfiguration which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/ReportMissingInclude.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 26,
                  "endLine": 30,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "ShouldDiscoverMissingMappingsInIncludedType creates a new instance of MapperConfiguration which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/ReportMissingInclude.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 26,
                  "endLine": 11,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/RepeatedMappingConfigurationTest.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 17,
                  "endLine": 26,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "should_not_throw_duplicated_key_exception creates a new instance of MapperConfiguration which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/RepeatedMappingConfigurationTest.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 9,
                  "endLine": 39,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetOtherValue' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MemberResolution.cs",
                "region": {
                  "startLine": 1493,
                  "startColumn": 20,
                  "endLine": 1493,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetOtherValue' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MemberResolution.cs",
                "region": {
                  "startLine": 1440,
                  "startColumn": 20,
                  "endLine": 1440,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetOtherValue' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MemberResolution.cs",
                "region": {
                  "startLine": 1397,
                  "startColumn": 20,
                  "endLine": 1397,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetOtherValue' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MemberResolution.cs",
                "region": {
                  "startLine": 1354,
                  "startColumn": 20,
                  "endLine": 1354,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetOtherValue' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MemberResolution.cs",
                "region": {
                  "startLine": 1310,
                  "startColumn": 20,
                  "endLine": 1310,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetOtherValue' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MemberResolution.cs",
                "region": {
                  "startLine": 1259,
                  "startColumn": 20,
                  "endLine": 1259,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetItems' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/NullBehavior.cs",
                "region": {
                  "startLine": 630,
                  "startColumn": 22,
                  "endLine": 630,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/PreserveReferencesSameDestination.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 17,
                  "endLine": 25,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetItems' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/NullBehavior.cs",
                "region": {
                  "startLine": 538,
                  "startColumn": 22,
                  "endLine": 538,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetItems' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/NullBehavior.cs",
                "region": {
                  "startLine": 453,
                  "startColumn": 22,
                  "endLine": 453,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'SomeSubSubValue' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MemberResolution.cs",
                "region": {
                  "startLine": 870,
                  "startColumn": 23,
                  "endLine": 870,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'SomeSubValue' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MemberResolution.cs",
                "region": {
                  "startLine": 860,
                  "startColumn": 23,
                  "endLine": 860,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'SomeMethodToGetMoreBlarg' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MemberResolution.cs",
                "region": {
                  "startLine": 841,
                  "startColumn": 20,
                  "endLine": 841,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'IAmSomeMethod' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MemberResolution.cs",
                "region": {
                  "startLine": 849,
                  "startColumn": 23,
                  "endLine": 849,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/NullConstructorParameterName.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 17,
                  "endLine": 8,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'SomeOtherCoolValue' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MemberResolution.cs",
                "region": {
                  "startLine": 694,
                  "startColumn": 23,
                  "endLine": 694,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'SomeCoolValue' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MemberResolution.cs",
                "region": {
                  "startLine": 684,
                  "startColumn": 23,
                  "endLine": 684,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetSomeOtherCoolValue' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MemberResolution.cs",
                "region": {
                  "startLine": 637,
                  "startColumn": 23,
                  "endLine": 637,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetSomeCoolValue' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MemberResolution.cs",
                "region": {
                  "startLine": 627,
                  "startColumn": 23,
                  "endLine": 627,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MappingInheritance/PreserveReferencesWithInheritance.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 21,
                  "endLine": 91,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'CreateDynamicObject' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/NullConstructorParameterName.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 12,
                  "endLine": 16,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'Ignored' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MemberResolution.cs",
                "region": {
                  "startLine": 587,
                  "startColumn": 21,
                  "endLine": 587,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetValue' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MemberResolution.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 20,
                  "endLine": 36,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "Should_detect_unrelated_override creates a new instance of MapperConfiguration which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/MappingInheritance/ShouldSupportOnlyDestinationTypeBeingDerived.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 26,
                  "endLine": 58,
                  "endColumn": 123
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "Should_report_missing_property creates a new instance of MapperConfiguration which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/NonExistingProperty.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 26,
                  "endLine": 16,
                  "endColumn": 119
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Internal/CreateProxyThreading.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 17,
                  "endLine": 8,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Internal/TypeMapFactorySpecs.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 9,
                  "endLine": 42,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetProperties' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Internal/GenerateSimilarType.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 58,
                  "endLine": 61,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "Should_throw creates a new instance of MapperConfiguration which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/IMappingExpression/IncludeMembers.cs",
                "region": {
                  "startLine": 1092,
                  "startColumn": 9,
                  "endLine": 1095,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/MultiThreadingIssues.cs",
                "region": {
                  "startLine": 1147,
                  "startColumn": 17,
                  "endLine": 1147,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/InterfaceMapping.cs",
                "region": {
                  "startLine": 214,
                  "startColumn": 17,
                  "endLine": 214,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "Should_find_inherited_members_by_name creates a new instance of MapperConfiguration which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/InterfaceMapping.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 9,
                  "endLine": 216,
                  "endColumn": 109
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "Sould_not_throw_exception_when_reverse_property_does_not_exist creates a new instance of MapperConfiguration which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/IgnoreAllTests.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 71,
                  "endLine": 220,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "Should_throw_on_nonexistent_parameter creates a new instance of MapperConfiguration which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/IMappingExpression/ForCtorParam.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 38,
                  "endLine": 123,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "Should_throw_when_no_constructor_is_present creates a new instance of MapperConfiguration which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/IMappingExpression/ForCtorParam.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 38,
                  "endLine": 139,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "Should_throw_when_parameter_is_misspelt creates a new instance of MapperConfiguration which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/IMappingExpression/ForCtorParam.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 38,
                  "endLine": 155,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/MultiThreadingIssues.cs",
                "region": {
                  "startLine": 616,
                  "startColumn": 17,
                  "endLine": 616,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'OtherValue' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/ExtensionMethods.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 20,
                  "endLine": 235,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'source'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/ExtensionMethods.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 45,
                  "endLine": 67,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2208",
          "level": "note",
          "message": "Call the ArgumentException constructor that contains a message and/or paramName parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/ExpressionBridge.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 19,
                  "endLine": 56,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetString' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Dictionaries.cs",
                "region": {
                  "startLine": 470,
                  "startColumn": 31,
                  "endLine": 470,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Mappers/ReadOnlyCollectionMapperTests.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 63,
                  "endLine": 146,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Mappers/ReadOnlyCollectionMapperTests.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 66,
                  "endLine": 152,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Mappers/ReadOnlyCollectionMapperTests.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 64,
                  "endLine": 158,
                  "endColumn": 93
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Mappers/ReadOnlyCollectionMapperTests.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 65,
                  "endLine": 164,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetSomeCoolValues' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/General.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 41,
                  "endLine": 139,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Mappers/ReadOnlyCollectionMapperTests.cs",
                "region": {
                  "startLine": 180,
                  "startColumn": 63,
                  "endLine": 180,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Mappers/ReadOnlyCollectionMapperTests.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 66,
                  "endLine": 186,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Mappers/ReadOnlyCollectionMapperTests.cs",
                "region": {
                  "startLine": 197,
                  "startColumn": 65,
                  "endLine": 197,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/CustomCollectionTester.cs",
                "region": {
                  "startLine": 4,
                  "startColumn": 17,
                  "endLine": 4,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetString' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/CustomCollectionTester.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 23,
                  "endLine": 16,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/CollectionMapping.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 17,
                  "endLine": 98,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'Validate' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/ConfigurationFeatureTest.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 18,
                  "endLine": 53,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/MultiThreadingIssues.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 17,
                  "endLine": 42,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1840",
          "level": "note",
          "message": "Use 'Environment.CurrentManagedThreadId' instead of 'Thread.CurrentThread.ManagedThreadId'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/MultiThreadingIssues.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 73,
                  "endLine": 66,
                  "endColumn": 109
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/ConvertMapperThreading.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 17,
                  "endLine": 16,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "Should_work creates a new instance of MapperConfiguration which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/ConvertMapperThreading.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 13,
                  "endLine": 20,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/MapAtRuntime/MapAtRuntime.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 17,
                  "endLine": 85,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'Method' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/ConfigurationValidation.cs",
                "region": {
                  "startLine": 719,
                  "startColumn": 21,
                  "endLine": 719,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'Value' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/ConfigurationValidation.cs",
                "region": {
                  "startLine": 695,
                  "startColumn": 23,
                  "endLine": 695,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/MapAtRuntimeWithCollections/MapAtRuntimeWithCollections.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 17,
                  "endLine": 106,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'Map' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Mappers/CustomMapperTests.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 23,
                  "endLine": 52,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Constructors.cs",
                "region": {
                  "startLine": 205,
                  "startColumn": 17,
                  "endLine": 205,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Constructors.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 17,
                  "endLine": 140,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/ConditionalMapping.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 17,
                  "endLine": 30,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/MemberNamedTypeBug.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 17,
                  "endLine": 23,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/MapExpandoObjectProperty.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 17,
                  "endLine": 23,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'CalculateTotal' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/MapFromClosureBug.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 21,
                  "endLine": 29,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "'OneTimeEnumerator_should_throw_exception_if_enumerating_twice' calls 'Count' but does not use the value the method returns. Linq methods are known to not have side effects. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/LazyCollectionMapping.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 63,
                  "endLine": 47,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/GenericCreateMapWithCircularReferences.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 17,
                  "endLine": 17,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/ExistingArrays.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 17,
                  "endLine": 12,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/ExistingArrays.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 17,
                  "endLine": 20,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<string>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/ExistingArrays.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 22,
                  "endLine": 41,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<string>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/ExistingArrays.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 22,
                  "endLine": 30,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetItems' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/CollectionBaseClassGetConvention.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 33,
                  "endLine": 10,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/CollectionMapperMapsISetIncorrectly.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 17,
                  "endLine": 21,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'base_has_include_of_source_but_mapping_with_both_sides_being_unmapped_types_from_the_base_fails' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Bug/BaseMapWithIncludesAndUnincludedMappings.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 17,
                  "endLine": 30,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<EntitySource>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/UnitTests/Projection/MoreExplanatoryExceptionTests.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 13,
                  "endLine": 14,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1507": {
          "id": "CA1507",
          "shortDescription": "Use nameof to express symbol names",
          "fullDescription": "Using nameof helps keep your code valid when refactoring.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1507",
          "properties": {
            "category": "Maintainability",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1806": {
          "id": "CA1806",
          "shortDescription": "Do not ignore method results",
          "fullDescription": "A new object is created but never used; or a method that creates and returns a new string is called and the new string is never used; or a COM or P/Invoke method returns an HRESULT or error code that is never used.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1806",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1816": {
          "id": "CA1816",
          "shortDescription": "Dispose methods should call SuppressFinalize",
          "fullDescription": "A method that is an implementation of Dispose does not call GC.SuppressFinalize; or a method that is not an implementation of Dispose calls GC.SuppressFinalize; or a method calls GC.SuppressFinalize and passes something other than this (Me in Visual Basic).",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1816",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1825": {
          "id": "CA1825",
          "shortDescription": "Avoid zero-length array allocations",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1825",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1829": {
          "id": "CA1829",
          "shortDescription": "Use Length/Count property instead of Count() when available",
          "fullDescription": "Enumerable.Count() potentially enumerates the sequence while a Length/Count property is a direct access.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1829",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1840": {
          "id": "CA1840",
          "shortDescription": "Use 'Environment.CurrentManagedThreadId'",
          "fullDescription": "'Environment.CurrentManagedThreadId' is simpler and faster than 'Thread.CurrentThread.ManagedThreadId'.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1840",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2208": {
          "id": "CA2208",
          "shortDescription": "Instantiate argument exceptions correctly",
          "fullDescription": "A call is made to the default (parameterless) constructor of an exception type that is or derives from ArgumentException, or an incorrect string argument is passed to a parameterized constructor of an exception type that is or derives from ArgumentException.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2208",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2211": {
          "id": "CA2211",
          "shortDescription": "Non-constant fields should not be visible",
          "fullDescription": "Static fields that are neither constants nor read-only are not thread-safe. Access to such a field must be carefully controlled and requires advanced programming techniques to synchronize access to the class object.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2211",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "S2699": {
          "id": "S2699",
          "shortDescription": "Tests should include assertions",
          "fullDescription": "A test case without assertions ensures only that no exceptions are thrown. Beyond basic runnability, it ensures nothing about the behavior of the code under test.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2699",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}