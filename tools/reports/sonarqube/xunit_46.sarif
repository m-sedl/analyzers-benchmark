{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.0.0.0",
        "fileVersion": "4.0.1-1.22181.2 (487283bc)",
        "semanticVersion": "4.0.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/FactDiscoverer.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 6,
                  "endLine": 33,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 6,
                  "endLine": 42,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 6,
                  "endLine": 83,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Framework/XunitTestFrameworkExecutor.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 4,
                  "endLine": 7,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Framework/_ITestFramework.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 4,
                  "endLine": 13,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestCaseRunnerBase.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 6,
                  "endLine": 29,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'ExceptionExtensions' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/ExceptionExtensions.cs",
                "region": {
                  "startLine": 4,
                  "startColumn": 14,
                  "endLine": 4,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename interface '_ITestFrameworkDiscoverer' to match pascal case naming rules, trim underscores from the name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Framework/_ITestFrameworkDiscoverer.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 18,
                  "endLine": 13,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/MessageBus.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 14,
                  "endLine": 12,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/MessageBus.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 14,
                  "endLine": 12,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/MessageBus.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 14,
                  "endLine": 55,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'MessageBus' or mark the type as 'sealed'.",
              "1": "'MessageBus.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename interface '_ITestFrameworkExecutor' to match pascal case naming rules, trim underscores from the name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Framework/_ITestFrameworkExecutor.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 18,
                  "endLine": 13,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/ObjectExtensions.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 102,
                  "endLine": 12,
                  "endColumn": 124
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/ObjectExtensions.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 112,
                  "endLine": 13,
                  "endColumn": 134
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/PreserveWorkingFolder.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 14,
                  "endLine": 10,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/PreserveWorkingFolder.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 14,
                  "endLine": 10,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/PreserveWorkingFolder.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 14,
                  "endLine": 28,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'PreserveWorkingFolder' or mark the type as 'sealed'.",
              "1": "'PreserveWorkingFolder.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/SynchronousMessageBus.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 14,
                  "endLine": 9,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/SynchronousMessageBus.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 14,
                  "endLine": 9,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/SynchronousMessageBus.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 14,
                  "endLine": 20,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'SynchronousMessageBus' or mark the type as 'sealed'.",
              "1": "'SynchronousMessageBus.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'MatrixTheoryData' class to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/MatrixTheoryData.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 14,
                  "endLine": 52,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'MatrixTheoryData' class to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/MatrixTheoryData.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 14,
                  "endLine": 165,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'MatrixTheoryData' class to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/MatrixTheoryData.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 14,
                  "endLine": 103,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'Culture' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 24,
                  "endLine": 22,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 24,
                  "endLine": 174,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'DiagnosticMessages' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 22,
                  "endLine": 32,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
                "region": {
                  "startLine": 184,
                  "startColumn": 22,
                  "endLine": 184,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'DiagnosticMessagesOrDefault' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 21,
                  "endLine": 43,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 21,
                  "endLine": 195,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'SynchronousMessageReporting' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 22,
                  "endLine": 147,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
                "region": {
                  "startLine": 308,
                  "startColumn": 22,
                  "endLine": 308,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'SynchronousMessageReportingOrDefault' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 21,
                  "endLine": 158,
                  "endColumn": 57
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
                "region": {
                  "startLine": 319,
                  "startColumn": 21,
                  "endLine": 319,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S3376",
          "level": "warning",
          "message": "Make this class name end with 'Attribute'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/MemberDataAttributeBase.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 23,
                  "endLine": 17,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2743",
          "level": "warning",
          "message": "A static field in a generic type is not shared among instances of different close constructed types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestAssemblyRunner.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 41,
                  "endLine": 23,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2743",
          "level": "warning",
          "message": "A static field in a generic type is not shared among instances of different close constructed types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestAssemblyRunner.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 47,
                  "endLine": 24,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename interface '_ITestFramework' to match pascal case naming rules, trim underscores from the name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Framework/_ITestFramework.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Record.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 14,
                  "endLine": 12,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TestContextAccessor.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 36,
                  "endLine": 14,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'Instance' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TestContextAccessor.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 36,
                  "endLine": 14,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/MaxConcurrencySyncContext.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 14,
                  "endLine": 14,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/MaxConcurrencySyncContext.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 14,
                  "endLine": 14,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/MaxConcurrencySyncContext.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 14,
                  "endLine": 41,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'MaxConcurrencySyncContext' or mark the type as 'sealed'.",
              "1": "'MaxConcurrencySyncContext.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Messages/DelegatingMessageBus.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 14,
                  "endLine": 12,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Messages/DelegatingMessageBus.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 14,
                  "endLine": 12,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Messages/DelegatingMessageBus.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 14,
                  "endLine": 39,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'DelegatingMessageBus' or mark the type as 'sealed'.",
              "1": "'DelegatingMessageBus.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TestTimeoutException.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 14,
                  "endLine": 8,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TestTimeoutException.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 8,
                  "endLine": 8,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TestTimeoutException.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 8,
                  "endLine": 8,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'TestTimeoutException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'TestTimeoutException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename interface '_ITestCollection' to match pascal case naming rules, trim underscores from the name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/TestCases/_ITestCollection.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 18,
                  "endLine": 8,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename interface '_ITestMethod' to match pascal case naming rules, trim underscores from the name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/TestCases/_ITestMethod.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 18,
                  "endLine": 6,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename interface '_ITestOutputHelper' to match pascal case naming rules, trim underscores from the name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/TestCases/_ITestOutputHelper.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 18,
                  "endLine": 6,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2953",
          "level": "warning",
          "message": "Either implement 'IDisposable.Dispose', or totally rename this method to prevent confusion.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Messages/DelegatingMessageSink.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 14,
                  "endLine": 31,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 33,
                  "endLine": 26,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'Instance' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 33,
                  "endLine": 26,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/RunSummary.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 13,
                  "endLine": 11,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/RunSummary.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 13,
                  "endLine": 16,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/RunSummary.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 13,
                  "endLine": 21,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/RunSummary.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 13,
                  "endLine": 26,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/RunSummary.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 17,
                  "endLine": 31,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestRunner.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 32,
                  "endLine": 24,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'Instance' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestRunner.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 32,
                  "endLine": 24,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/TestDiscoveryVisitor.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 7,
                  "endLine": 8,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/TestDiscoveryVisitor.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 7,
                  "endLine": 8,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/TestDiscoveryVisitor.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 14,
                  "endLine": 23,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'TestDiscoveryVisitor' or mark the type as 'sealed'.",
              "1": "'TestDiscoveryVisitor.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private field 'NullableTypeInfo'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'TheoryData' class to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/TheoryData.cs",
                "region": {
                  "startLine": 141,
                  "startColumn": 14,
                  "endLine": 141,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2743",
          "level": "warning",
          "message": "A static field in a generic type is not shared among instances of different close constructed types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 37,
                  "endLine": 23,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2743",
          "level": "warning",
          "message": "A static field in a generic type is not shared among instances of different close constructed types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 28,
                  "endLine": 24,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2743",
          "level": "warning",
          "message": "A static field in a generic type is not shared among instances of different close constructed types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 300,
                  "startColumn": 22,
                  "endLine": 300,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'TheoryData' class to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/TheoryData.cs",
                "region": {
                  "startLine": 190,
                  "startColumn": 14,
                  "endLine": 190,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'TheoryData' class to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/TheoryData.cs",
                "region": {
                  "startLine": 241,
                  "startColumn": 14,
                  "endLine": 241,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 368,
                  "startColumn": 17,
                  "endLine": 368,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'TheoryData' class to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/TheoryData.cs",
                "region": {
                  "startLine": 294,
                  "startColumn": 14,
                  "endLine": 294,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'TheoryData' class to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/TheoryData.cs",
                "region": {
                  "startLine": 349,
                  "startColumn": 14,
                  "endLine": 349,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Utility/CultureOverride.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 7,
                  "endLine": 6,
                  "endColumn": 22
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Utility/CultureOverride.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 7,
                  "endLine": 6,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Utility/CultureOverride.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 14,
                  "endLine": 24,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'CultureOverride' or mark the type as 'sealed'.",
              "1": "'CultureOverride.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'TheoryData' class to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/TheoryData.cs",
                "region": {
                  "startLine": 406,
                  "startColumn": 14,
                  "endLine": 406,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'TheoryData' class to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/TheoryData.cs",
                "region": {
                  "startLine": 465,
                  "startColumn": 14,
                  "endLine": 465,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2326",
          "level": "warning",
          "message": "'TFixture' is not used in the interface.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/IClassFixture.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 32,
                  "endLine": 18,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'TheoryData' class to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/TheoryData.cs",
                "region": {
                  "startLine": 526,
                  "startColumn": 14,
                  "endLine": 526,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2326",
          "level": "warning",
          "message": "'TFixture' is not used in the interface.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/ICollectionFixture.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 37,
                  "endLine": 17,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename interface '_ITest' to match pascal case naming rules, trim underscores from the name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/TestCases/_ITest.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 18,
                  "endLine": 8,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename interface '_ITestAssembly' to match pascal case naming rules, trim underscores from the name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/TestCases/_ITestAssembly.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 18,
                  "endLine": 8,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename interface '_ITestCase' to match pascal case naming rules, trim underscores from the name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/TestCases/_ITestCase.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 18,
                  "endLine": 10,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename interface '_ITestClass' to match pascal case naming rules, trim underscores from the name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/TestCases/_ITestClass.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 18,
                  "endLine": 6,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 10 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/TheoryData.cs",
                "region": {
                  "startLine": 559,
                  "startColumn": 17,
                  "endLine": 559,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2486",
          "level": "warning",
          "message": "Handle the exception or explain in a comment why it can be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/AsyncTestSyncContext.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 3,
                  "endLine": 89,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/AsyncTestSyncContext.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 9,
                  "endLine": 89,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/ClassDataAttribute.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 56,
                  "endLine": 70,
                  "endColumn": 68
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/ClassDataAttribute.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 9,
                  "endLine": 91,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 9 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/TheoryData.cs",
                "region": {
                  "startLine": 497,
                  "startColumn": 17,
                  "endLine": 497,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 8 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/TheoryData.cs",
                "region": {
                  "startLine": 437,
                  "startColumn": 17,
                  "endLine": 437,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 39 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 15,
                  "endLine": 58,
                  "endColumn": 21
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 4,
                  "endLine": 72,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 18,
                  "endLine": 72,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 4,
                  "endLine": 74,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 18,
                  "endLine": 74,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 4,
                  "endLine": 79,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 4,
                  "endLine": 84,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 5,
                  "endLine": 90,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 4,
                  "endLine": 100,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 5,
                  "endLine": 106,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 4,
                  "endLine": 116,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 4,
                  "endLine": 121,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 4,
                  "endLine": 126,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 5,
                  "endLine": 128,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 5,
                  "endLine": 136,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 24,
                  "endLine": 136,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 6,
                  "endLine": 139,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 6,
                  "endLine": 143,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 7,
                  "endLine": 144,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 4,
                  "endLine": 153,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 36,
                  "endLine": 153,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 4,
                  "endLine": 158,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 5,
                  "endLine": 161,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 4,
                  "endLine": 173,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 5,
                  "endLine": 176,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 187,
                  "startColumn": 5,
                  "endLine": 187,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+2 (incl 1 for nesting)",
              "14": "+1",
              "15": "+3 (incl 2 for nesting)",
              "16": "+3 (incl 2 for nesting)",
              "17": "+4 (incl 3 for nesting)",
              "18": "+1",
              "19": "+1",
              "2": "+1",
              "20": "+1",
              "21": "+2 (incl 1 for nesting)",
              "22": "+1",
              "23": "+2 (incl 1 for nesting)",
              "24": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S2696",
          "level": "warning",
          "message": "Make the enclosing instance method 'static' or remove this set on the 'static' field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 331,
                  "startColumn": 5,
                  "endLine": 331,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 300,
                  "startColumn": 22,
                  "endLine": 300,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2696",
          "level": "warning",
          "message": "Remove this set, which updates a 'static' field from an instance method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 408,
                  "startColumn": 6,
                  "endLine": 408,
                  "endColumn": 22
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 378,
                  "startColumn": 23,
                  "endLine": 378,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Utility/AsyncManualResetEvent.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 24,
                  "endLine": 48,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3877",
          "level": "warning",
          "message": "Remove this 'throw' statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/TestDiscoveryVisitor.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 4,
                  "endLine": 26,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Messages/DelegatingMessageSink.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 14,
                  "endLine": 31,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1117",
          "level": "warning",
          "message": "Rename 'finalMessage' which hides the field with the same name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Messages/DelegatingMessageSink.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 32,
                  "endLine": 84,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Messages/DelegatingMessageBus.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 14,
                  "endLine": 39,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1117",
          "level": "warning",
          "message": "Rename 'finalMessage' which hides the field with the same name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Messages/DelegatingMessageBus.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 32,
                  "endLine": 84,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3877",
          "level": "warning",
          "message": "Remove this 'throw' statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/MaxConcurrencySyncContext.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 4,
                  "endLine": 44,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/SynchronousMessageBus.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 14,
                  "endLine": 20,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 8 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/TestCases/TestMethodTestCase.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 30,
                  "endLine": 48,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2486",
          "level": "warning",
          "message": "Handle the exception or explain in a comment why it can be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/PreserveWorkingFolder.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 3,
                  "endLine": 35,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/PreserveWorkingFolder.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 9,
                  "endLine": 35,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2486",
          "level": "warning",
          "message": "Handle the exception or explain in a comment why it can be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/MessageBus.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 5,
                  "endLine": 50,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/MessageBus.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 11,
                  "endLine": 50,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3877",
          "level": "warning",
          "message": "Remove this 'throw' statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Internal/MessageBus.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 4,
                  "endLine": 58,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 46 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 70,
                  "endLine": 120,
                  "endColumn": 78
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 132,
                  "startColumn": 3,
                  "endLine": 132,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 4,
                  "endLine": 137,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 3,
                  "endLine": 139,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 5,
                  "endLine": 146,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 154,
                  "startColumn": 6,
                  "endLine": 154,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 7,
                  "endLine": 158,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 7,
                  "endLine": 167,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 180,
                  "startColumn": 6,
                  "endLine": 180,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 184,
                  "startColumn": 7,
                  "endLine": 184,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 7,
                  "endLine": 193,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 206,
                  "startColumn": 6,
                  "endLine": 206,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 210,
                  "startColumn": 6,
                  "endLine": 210,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 6,
                  "endLine": 226,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 7,
                  "endLine": 235,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 7,
                  "endLine": 238,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 261,
                  "startColumn": 7,
                  "endLine": 261,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 5,
                  "endLine": 275,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 291,
                  "startColumn": 4,
                  "endLine": 291,
                  "endColumn": 9
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+4 (incl 3 for nesting)",
              "14": "+4 (incl 3 for nesting)",
              "15": "+4 (incl 3 for nesting)",
              "16": "+2 (incl 1 for nesting)",
              "17": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1117",
          "level": "warning",
          "message": "Rename 'assembly' which hides the field with the same name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/TestCases/TestAssembly.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 7,
                  "endLine": 74,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'theoryAttribute' to 'factAttribute' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/Frameworks/TheoryDiscoverer.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 19,
                  "endLine": 123,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 11 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestRunner.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 39,
                  "endLine": 91,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 10 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestMethodRunner.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 39,
                  "endLine": 42,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 31,
                  "endLine": 82,
                  "endColumn": 59
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 3,
                  "endLine": 89,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 4,
                  "endLine": 101,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 115,
                  "startColumn": 5,
                  "endLine": 115,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 5,
                  "endLine": 117,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 6,
                  "endLine": 124,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 7,
                  "endLine": 142,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 5,
                  "endLine": 147,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+4 (incl 3 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 29,
                  "endLine": 158,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 3,
                  "endLine": 164,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 32,
                  "endLine": 170,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 4,
                  "endLine": 176,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 181,
                  "startColumn": 5,
                  "endLine": 181,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 184,
                  "startColumn": 6,
                  "endLine": 184,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 184,
                  "startColumn": 57,
                  "endLine": 184,
                  "endColumn": 59
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 188,
                  "startColumn": 7,
                  "endLine": 188,
                  "endColumn": 9
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+5 (incl 4 for nesting)"
            }
          }
        },
        {
          "ruleId": "S2971",
          "level": "warning",
          "message": "Drop 'Where' and move the condition into the 'Single'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 7,
                  "endLine": 170,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 10 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestInvoker.cs",
                "region": {
                  "startLine": 251,
                  "startColumn": 36,
                  "endLine": 261,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4201",
          "level": "warning",
          "message": "Remove this unnecessary null check; 'is' returns false for nulls.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestCollectionRunner.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 7,
                  "endLine": 129,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 8 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestCollectionRunner.cs",
                "region": {
                  "startLine": 221,
                  "startColumn": 39,
                  "endLine": 229,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 10 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestClassRunner.cs",
                "region": {
                  "startLine": 234,
                  "startColumn": 39,
                  "endLine": 244,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 9 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestCaseRunner.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 46,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 21 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 276,
                  "startColumn": 14,
                  "endLine": 276,
                  "endColumn": 42
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 278,
                  "startColumn": 3,
                  "endLine": 278,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 282,
                  "startColumn": 3,
                  "endLine": 282,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 285,
                  "startColumn": 3,
                  "endLine": 285,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 285,
                  "startColumn": 27,
                  "endLine": 285,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 287,
                  "startColumn": 4,
                  "endLine": 287,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 292,
                  "startColumn": 3,
                  "endLine": 292,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 292,
                  "startColumn": 32,
                  "endLine": 292,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 294,
                  "startColumn": 4,
                  "endLine": 294,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 296,
                  "startColumn": 4,
                  "endLine": 296,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 3,
                  "endLine": 299,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 32,
                  "endLine": 299,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 302,
                  "startColumn": 4,
                  "endLine": 302,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 304,
                  "startColumn": 4,
                  "endLine": 304,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 306,
                  "startColumn": 5,
                  "endLine": 306,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 308,
                  "startColumn": 5,
                  "endLine": 308,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExtensibilityPointFactory.cs",
                "region": {
                  "startLine": 312,
                  "startColumn": 3,
                  "endLine": 312,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+1",
              "13": "+3 (incl 2 for nesting)",
              "14": "+1",
              "15": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1117",
          "level": "warning",
          "message": "Rename 'exceptions' which hides the field with the same name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/ExceptionAggregator.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 7,
                  "endLine": 155,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/DataAttribute.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 35,
                  "endLine": 136,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/DataAttribute.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 3,
                  "endLine": 143,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/DataAttribute.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 4,
                  "endLine": 147,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/DataAttribute.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 5,
                  "endLine": 148,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/DataAttribute.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 3,
                  "endLine": 166,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/DataAttribute.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 3,
                  "endLine": 176,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/DataAttribute.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 25,
                  "endLine": 176,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/DataAttribute.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 4,
                  "endLine": 178,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/DataAttribute.cs",
                "region": {
                  "startLine": 181,
                  "startColumn": 5,
                  "endLine": 181,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/DataAttribute.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 6,
                  "endLine": 185,
                  "endColumn": 9
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3236",
          "level": "warning",
          "message": "Remove this argument from the method call; it hides the caller information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Framework/TestFrameworkDiscoverer.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 54,
                  "endLine": 40,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'IsInstanceOfType()' method instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/DataAttribute.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 8,
                  "endLine": 178,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "False"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/DataAttribute.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 4,
                  "endLine": 178,
                  "endColumn": 6
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/DataAttribute.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 3,
                  "endLine": 176,
                  "endColumn": 5
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1121",
          "level": "warning",
          "message": "Extract the assignment of 'nonParallel' from this expression.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 217,
                  "startColumn": 18,
                  "endLine": 217,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1121",
          "level": "warning",
          "message": "Extract the assignment of 'parallel' from this expression.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 15,
                  "endLine": 219,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 22 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 191,
                  "startColumn": 49,
                  "endLine": 191,
                  "endColumn": 72
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 3,
                  "endLine": 193,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 199,
                  "startColumn": 3,
                  "endLine": 199,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 204,
                  "startColumn": 3,
                  "endLine": 204,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 211,
                  "startColumn": 3,
                  "endLine": 211,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 4,
                  "endLine": 216,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 218,
                  "startColumn": 4,
                  "endLine": 218,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 222,
                  "startColumn": 3,
                  "endLine": 222,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 223,
                  "startColumn": 4,
                  "endLine": 223,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 228,
                  "startColumn": 5,
                  "endLine": 228,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 230,
                  "startColumn": 3,
                  "endLine": 230,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 4,
                  "endLine": 231,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 6,
                  "endLine": 235,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 5,
                  "endLine": 238,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 31 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 37,
                  "endLine": 28,
                  "endColumn": 63
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 3,
                  "endLine": 32,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 4,
                  "endLine": 41,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 5,
                  "endLine": 44,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 6,
                  "endLine": 46,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 6,
                  "endLine": 48,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 6,
                  "endLine": 58,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 7,
                  "endLine": 60,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 7,
                  "endLine": 62,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 5,
                  "endLine": 68,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 6,
                  "endLine": 70,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 6,
                  "endLine": 72,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 5,
                  "endLine": 79,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 5,
                  "endLine": 85,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 6,
                  "endLine": 88,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 6,
                  "endLine": 95,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 115,
                  "startColumn": 3,
                  "endLine": 115,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+2 (incl 1 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "14": "+3 (incl 2 for nesting)",
              "15": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 228,
                  "startColumn": 35,
                  "endLine": 228,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 35,
                  "endLine": 238,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 9 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/XunitDelayEnumeratedTheoryTestCaseRunner.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 39,
                  "endLine": 152,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 32 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 40,
                  "endLine": 49,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 4,
                  "endLine": 81,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 4,
                  "endLine": 83,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 41,
                  "endLine": 89,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 5,
                  "endLine": 96,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 5,
                  "endLine": 112,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 5,
                  "endLine": 129,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 6,
                  "endLine": 131,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 7,
                  "endLine": 134,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 6,
                  "endLine": 143,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 6,
                  "endLine": 159,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 175,
                  "startColumn": 6,
                  "endLine": 175,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 194,
                  "startColumn": 5,
                  "endLine": 194,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 6,
                  "endLine": 195,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 201,
                  "startColumn": 5,
                  "endLine": 201,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 213,
                  "startColumn": 6,
                  "endLine": 213,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 229,
                  "startColumn": 5,
                  "endLine": 229,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+2 (incl 1 for nesting)",
              "14": "+3 (incl 2 for nesting)",
              "15": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 31 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 45,
                  "endLine": 134,
                  "endColumn": 66
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 4,
                  "endLine": 143,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 57,
                  "endLine": 155,
                  "endColumn": 58
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 7,
                  "endLine": 156,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 91,
                  "endLine": 160,
                  "endColumn": 92
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 155,
                  "endLine": 160,
                  "endColumn": 156
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 186,
                  "endLine": 160,
                  "endColumn": 187
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 7,
                  "endLine": 164,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 168,
                  "startColumn": 8,
                  "endLine": 168,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 8,
                  "endLine": 170,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 9,
                  "endLine": 173,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 4,
                  "endLine": 185,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+3 (incl 2 for nesting)",
              "10": "+1",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1",
              "7": "+4 (incl 3 for nesting)",
              "8": "+1",
              "9": "+5 (incl 4 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 196,
                  "startColumn": 37,
                  "endLine": 196,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 204,
                  "startColumn": 5,
                  "endLine": 204,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 224,
                  "startColumn": 6,
                  "endLine": 224,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 229,
                  "startColumn": 7,
                  "endLine": 229,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 8,
                  "endLine": 235,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 66,
                  "endLine": 235,
                  "endColumn": 68
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 7,
                  "endLine": 245,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 35,
                  "endLine": 245,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 257,
                  "startColumn": 8,
                  "endLine": 257,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 261,
                  "startColumn": 7,
                  "endLine": 261,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 267,
                  "startColumn": 6,
                  "endLine": 267,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 270,
                  "startColumn": 6,
                  "endLine": 270,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 270,
                  "startColumn": 34,
                  "endLine": 270,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestInvoker.cs",
                "region": {
                  "startLine": 282,
                  "startColumn": 7,
                  "endLine": 282,
                  "endColumn": 9
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+2 (incl 1 for nesting)",
              "1": "+2 (incl 1 for nesting)",
              "10": "+2 (incl 1 for nesting)",
              "11": "+1",
              "12": "+3 (incl 2 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 6,
                  "endLine": 195,
                  "endColumn": 8
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestRunner.cs",
                "region": {
                  "startLine": 194,
                  "startColumn": 5,
                  "endLine": 194,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3236",
          "level": "warning",
          "message": "Remove this argument from the method call; it hides the caller information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestCollectionRunnerContext.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 57,
                  "endLine": 40,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3236",
          "level": "warning",
          "message": "Remove this argument from the method call; it hides the caller information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestClassRunnerContext.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 57,
                  "endLine": 47,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestClassRunner.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 30,
                  "endLine": 36,
                  "endColumn": 65
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestClassRunner.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 50,
                  "endLine": 38,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestClassRunner.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 3,
                  "endLine": 39,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestClassRunner.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 4,
                  "endLine": 42,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestClassRunner.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 5,
                  "endLine": 48,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestClassRunner.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 6,
                  "endLine": 52,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestClassRunner.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 6,
                  "endLine": 54,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestClassRunner.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 6,
                  "endLine": 56,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestClassRunner.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 6,
                  "endLine": 58,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestClassRunner.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 6,
                  "endLine": 60,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestClassRunner.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 5,
                  "endLine": 64,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestAssemblyRunnerContext.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 2,
                  "endLine": 24,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2486",
          "level": "warning",
          "message": "Handle the exception or explain in a comment why it can be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestAssemblyRunnerContext.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 3,
                  "endLine": 125,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestAssemblyRunnerContext.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 9,
                  "endLine": 125,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2486",
          "level": "warning",
          "message": "Handle the exception or explain in a comment why it can be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestAssemblyRunner.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 4,
                  "endLine": 126,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Runners/TestAssemblyRunner.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 10,
                  "endLine": 126,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3236",
          "level": "warning",
          "message": "Remove this argument from the method call; it hides the caller information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Framework/XunitTestFrameworkExecutor.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 54,
                  "endLine": 40,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3236",
          "level": "warning",
          "message": "Remove this argument from the method call; it hides the caller information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.core/Sdk/v3/Framework/TestFrameworkExecutor.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 54,
                  "endLine": 38,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks whether or not type names are using PascalCase. To reduce noise, two consecutive upper case characters are allowed unless they form the whole type name. So, MyXClass is compliant, but XC on its own is not.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code’s readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S107": {
          "id": "S107",
          "shortDescription": "Methods should not have too many parameters",
          "fullDescription": "A long parameter list can indicate that a new structure should be created to wrap the numerous parameters or that the function is doing too many things.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-107",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S108": {
          "id": "S108",
          "shortDescription": "Nested blocks of code should not be left empty",
          "fullDescription": "Most of the time a block of code is empty when a piece of code is really missing. So such empty block must be either filled or removed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-108",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1104": {
          "id": "S1104",
          "shortDescription": "Fields should not have public accessibility",
          "fullDescription": "Public fields in public classes do not respect the encapsulation principle and has three main disadvantages:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1104",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1117": {
          "id": "S1117",
          "shortDescription": "Local variables should not shadow class fields",
          "fullDescription": "Overriding or shadowing a variable declared in an outer scope can strongly impact the readability, and therefore the maintainability, of a piece of code. Further, it could lead maintainers to introduce bugs because they think they’re using one variable but are really using another.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1117",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Utility classes, which are collections of static members, are not meant to be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1121": {
          "id": "S1121",
          "shortDescription": "Assignments should not be made from within sub-expressions",
          "fullDescription": "Assignments within sub-expressions are hard to spot and therefore make the code less readable. Ideally, sub-expressions should not have side-effects.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1121",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1135": {
          "id": "S1135",
          "shortDescription": "Track uses of \"TODO\" tags",
          "fullDescription": "TODO tags are commonly used to mark places where some more code is required, but which the developer wants to implement later.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1135",
          "properties": {
            "category": "Info Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1144": {
          "id": "S1144",
          "shortDescription": "Unused private types or members should be removed",
          "fullDescription": "private or internal types or private members that are never executed or referenced are dead code: unnecessary, inoperative code that should be removed. Cleaning out dead code decreases the size of the maintained codebase, making it easier to understand the program and preventing bugs from being introduced.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay",
              "Unnecessary"
            ]
          }
        },
        "S1186": {
          "id": "S1186",
          "shortDescription": "Methods should not be empty",
          "fullDescription": "There are several reasons for a method not to have a method body:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1186",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2219": {
          "id": "S2219",
          "shortDescription": "Runtime type checking should be simplified",
          "fullDescription": "To check the type of an object there are several options:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2219",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2223": {
          "id": "S2223",
          "shortDescription": "Non-constant static fields should not be visible",
          "fullDescription": "A static field that is neither constant nor read-only is not thread-safe. Correctly accessing these fields from different threads needs synchronization with locks. Improper synchronization may lead to unexpected results, thus publicly visible static fields are best suited for storing non-changing data shared by many consumers. To enforce this intent, these fields should be marked readonly or converted to constants.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2223",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2326": {
          "id": "S2326",
          "shortDescription": "Unused type parameters should be removed",
          "fullDescription": "Type parameters that aren’t used are dead code, which can only distract and possibly confuse developers during maintenance. Therefore, unused type parameters should be removed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2326",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2436": {
          "id": "S2436",
          "shortDescription": "Types and methods should not have too many generic parameters",
          "fullDescription": "A method or class with too many type parameters has likely aggregated too many responsibilities and should be split.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2436",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2486": {
          "id": "S2486",
          "shortDescription": "Generic exceptions should not be ignored",
          "fullDescription": "When exceptions occur, it is usually a bad idea to simply ignore them. Instead, it is better to handle them properly, or at least to log them.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2486",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2696": {
          "id": "S2696",
          "shortDescription": "Instance members should not write to \"static\" fields",
          "fullDescription": "Correctly updating a static field from a non-static method is tricky to get right and could easily lead to bugs if there are multiple class instances and/or multiple threads in play.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2696",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2743": {
          "id": "S2743",
          "shortDescription": "Static fields should not be used in generic types",
          "fullDescription": "A static field in a generic type is not shared among instances of different closed constructed types, thus LengthLimitedSingletonCollection<int>.instances and LengthLimitedSingletonCollection<string>.instances will point to different objects, even though instances is seemingly shared among all LengthLimitedSingletonCollection<> generic classes.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2743",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2953": {
          "id": "S2953",
          "shortDescription": "Methods named \"Dispose\" should implement \"IDisposable.Dispose\"",
          "fullDescription": "Dispose as a method name should be used exclusively to implement IDisposable.Dispose to prevent any confusion.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2953",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2971": {
          "id": "S2971",
          "shortDescription": "\"IEnumerable\" LINQs should be simplified",
          "fullDescription": "In the interests of readability, code that can be simplified should be simplified. To that end, there are several ways IEnumerable language integrated queries (LINQ) can be simplified",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2971",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3011": {
          "id": "S3011",
          "shortDescription": "Reflection should not be used to increase accessibility of classes, methods, or fields",
          "fullDescription": "This rule raises an issue when reflection is used to change the visibility of a class, method or field, and when it is used to directly update a field value. Altering or bypassing the accessibility of classes, methods, or fields violates the encapsulation principle and could lead to run-time errors.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3011",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3236": {
          "id": "S3236",
          "shortDescription": "Caller information arguments should not be provided explicitly",
          "fullDescription": "Caller information attributes: CallerFilePathAttribute, CallerLineNumberAttribute, and CallerArgumentExpressionAttribute provide a way to get information about the caller of a method through optional parameters. But the arguments for these optional parameters are only generated if they are not explicitly defined in the call. Thus, specifying the argument values defeats the purpose of the attributes.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3236",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3260": {
          "id": "S3260",
          "shortDescription": "Non-derived \"private\" classes and records should be \"sealed\"",
          "fullDescription": "private classes and records aren’t visible outside of their assemblies anyway, so if they’re not extended inside the assemblies, they should be made explicitly non-extensible with the addition of the sealed keyword.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3260",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3376": {
          "id": "S3376",
          "shortDescription": "Attribute, EventArgs, and Exception type names should end with the type being extended",
          "fullDescription": "Adherence to the standard naming conventions makes your code not only more readable, but more usable. For instance, class FirstAttribute : Attribute can be used simply with First, but you must use the full name for class AttributeOne : Attribute.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3376",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3442": {
          "id": "S3442",
          "shortDescription": "\"abstract\" classes should not have \"public\" constructors",
          "fullDescription": "Since abstract classes can’t be instantiated, there’s no point in their having public or internal constructors. If there is basic initialization logic that should run when an extending class instance is created, you can by all means put it in a constructor, but make that constructor private, private protected or protected.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3442",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3877": {
          "id": "S3877",
          "shortDescription": "Exceptions should not be thrown from unexpected methods",
          "fullDescription": "It is expected that some methods should be called with caution, but others, such as ToString, are expected to \"just work\". Throwing an exception from such a method is likely to break callers' code unexpectedly.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3877",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3903": {
          "id": "S3903",
          "shortDescription": "Types should be defined in named namespaces",
          "fullDescription": "Types are declared in namespaces in order to prevent name collisions and as a way to organize them into the object hierarchy. Types that are defined outside any named namespace are in a global namespace that cannot be referenced in code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3903",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3925": {
          "id": "S3925",
          "shortDescription": "\"ISerializable\" should be implemented correctly",
          "fullDescription": "The ISerializable interface is the mechanism to control the type serialization process. If not implemented correctly this could result in an invalid serialization and hard to detect bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3925",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4136": {
          "id": "S4136",
          "shortDescription": "Method overloads should be grouped together",
          "fullDescription": "For clarity, all overloads of the same method should be grouped together. That lets both users and maintainers quickly understand all the current available options.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4136",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4201": {
          "id": "S4201",
          "shortDescription": "Null checks should not be used with \"is\"",
          "fullDescription": "There’s no need to null test in conjunction with an is test. null is not an instance of anything, so a null check is redundant.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4201",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4457": {
          "id": "S4457",
          "shortDescription": "Parameter validation in \"async\"/\"await\" methods should be wrapped",
          "fullDescription": "Because of the way async/await methods are rewritten by the compiler, any exceptions thrown during the parameters check will happen only when the task is observed. That could happen far away from the source of the buggy code or never happen for fire-and-forget tasks.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4457",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S927": {
          "id": "S927",
          "shortDescription": "Parameter names should match base declaration and other partial definitions",
          "fullDescription": "The name of a parameter in an externally visible. This rule raises an issue when method override does not match the name of the parameter in the base declaration of the method, or the name of the parameter in the interface declaration of the method or the name of any other partial definition.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-927",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}