{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.0.0.0",
        "fileVersion": "4.0.1-1.22181.2 (487283bc)",
        "semanticVersion": "4.0.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 594,
                  "startColumn": 11,
                  "endLine": 594,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/DummySoundEngine.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 8,
                  "endLine": 63,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/DummySoundEngine.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 8,
                  "endLine": 63,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/DummySoundEngine.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 15,
                  "endLine": 65,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'NullSoundSource' or mark the type as 'sealed'.",
              "1": "'NullSoundSource.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/ThreadedGraphicsContext.cs",
                "region": {
                  "startLine": 498,
                  "startColumn": 8,
                  "endLine": 498,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/ThreadedGraphicsContext.cs",
                "region": {
                  "startLine": 498,
                  "startColumn": 8,
                  "endLine": 498,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/ThreadedGraphicsContext.cs",
                "region": {
                  "startLine": 545,
                  "startColumn": 15,
                  "endLine": 545,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'ThreadedVertexBuffer' or mark the type as 'sealed'.",
              "1": "'ThreadedVertexBuffer.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/ThreadedGraphicsContext.cs",
                "region": {
                  "startLine": 551,
                  "startColumn": 8,
                  "endLine": 551,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/ThreadedGraphicsContext.cs",
                "region": {
                  "startLine": 551,
                  "startColumn": 8,
                  "endLine": 551,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/ThreadedGraphicsContext.cs",
                "region": {
                  "startLine": 641,
                  "startColumn": 15,
                  "endLine": 641,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'ThreadedTexture' or mark the type as 'sealed'.",
              "1": "'ThreadedTexture.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/ThreadedGraphicsContext.cs",
                "region": {
                  "startLine": 448,
                  "startColumn": 8,
                  "endLine": 448,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/ThreadedGraphicsContext.cs",
                "region": {
                  "startLine": 448,
                  "startColumn": 8,
                  "endLine": 448,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/ThreadedGraphicsContext.cs",
                "region": {
                  "startLine": 492,
                  "startColumn": 15,
                  "endLine": 492,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'ThreadedFrameBuffer' or mark the type as 'sealed'.",
              "1": "'ThreadedFrameBuffer.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Delegate has 9 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 434,
                  "startColumn": 34,
                  "endLine": 435,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'data' to 'vertices' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/VertexBuffer.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 27,
                  "endLine": 58,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'data' to 'vertices' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/VertexBuffer.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 27,
                  "endLine": 63,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'length' to 'size' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/ThreadedGraphicsContext.cs",
                "region": {
                  "startLine": 402,
                  "startColumn": 55,
                  "endLine": 402,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'left' to 'x' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/ThreadedGraphicsContext.cs",
                "region": {
                  "startLine": 427,
                  "startColumn": 33,
                  "endLine": 427,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'top' to 'y' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/ThreadedGraphicsContext.cs",
                "region": {
                  "startLine": 427,
                  "startColumn": 43,
                  "endLine": 427,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'type' to 'pt' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/ThreadedGraphicsContext.cs",
                "region": {
                  "startLine": 417,
                  "startColumn": 44,
                  "endLine": 417,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'name' to 'param' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Shader.cs",
                "region": {
                  "startLine": 182,
                  "startColumn": 33,
                  "endLine": 182,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 't' to 'texture' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Shader.cs",
                "region": {
                  "startLine": 182,
                  "startColumn": 48,
                  "endLine": 182,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Shader.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 5,
                  "endLine": 39,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'name' to 'param' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Shader.cs",
                "region": {
                  "startLine": 260,
                  "startColumn": 32,
                  "endLine": 260,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2486",
          "level": "warning",
          "message": "Handle the exception or explain in a comment why it can be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 7,
                  "endLine": 216,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this constructor to reduce its Cognitive Complexity from 54 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 10,
                  "endLine": 136,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 5,
                  "endLine": 145,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 5,
                  "endLine": 151,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 5,
                  "endLine": 159,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 6,
                  "endLine": 161,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 58,
                  "endLine": 167,
                  "endColumn": 59
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 5,
                  "endLine": 171,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 5,
                  "endLine": 176,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 26,
                  "endLine": 176,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 184,
                  "startColumn": 5,
                  "endLine": 184,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 6,
                  "endLine": 189,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 32,
                  "endLine": 189,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 190,
                  "startColumn": 7,
                  "endLine": 190,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 5,
                  "endLine": 193,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 6,
                  "endLine": 198,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 32,
                  "endLine": 198,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 212,
                  "startColumn": 8,
                  "endLine": 212,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 213,
                  "startColumn": 9,
                  "endLine": 213,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 213,
                  "startColumn": 40,
                  "endLine": 213,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 7,
                  "endLine": 216,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 221,
                  "startColumn": 5,
                  "endLine": 221,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 221,
                  "startColumn": 47,
                  "endLine": 221,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 5,
                  "endLine": 226,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 234,
                  "startColumn": 5,
                  "endLine": 234,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 234,
                  "startColumn": 54,
                  "endLine": 234,
                  "endColumn": 56
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 240,
                  "startColumn": 5,
                  "endLine": 240,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 246,
                  "startColumn": 6,
                  "endLine": 246,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 246,
                  "startColumn": 34,
                  "endLine": 246,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 262,
                  "startColumn": 7,
                  "endLine": 262,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 271,
                  "startColumn": 5,
                  "endLine": 271,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 279,
                  "startColumn": 5,
                  "endLine": 279,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 284,
                  "startColumn": 5,
                  "endLine": 284,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 286,
                  "startColumn": 5,
                  "endLine": 286,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 289,
                  "startColumn": 5,
                  "endLine": 289,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 6,
                  "endLine": 299,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 306,
                  "startColumn": 5,
                  "endLine": 306,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 317,
                  "startColumn": 4,
                  "endLine": 317,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 317,
                  "startColumn": 57,
                  "endLine": 317,
                  "endColumn": 59
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 323,
                  "startColumn": 4,
                  "endLine": 323,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+3 (incl 2 for nesting)",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "14": "+1",
              "15": "+3 (incl 2 for nesting)",
              "16": "+4 (incl 3 for nesting)",
              "17": "+1",
              "18": "+3 (incl 2 for nesting)",
              "19": "+1",
              "2": "+1",
              "20": "+1",
              "21": "+1",
              "22": "+1",
              "23": "+1",
              "24": "+1",
              "25": "+2 (incl 1 for nesting)",
              "26": "+1",
              "27": "+3 (incl 2 for nesting)",
              "28": "+1",
              "29": "+1",
              "3": "+2 (incl 1 for nesting)",
              "30": "+1",
              "31": "+1",
              "32": "+1",
              "33": "+2 (incl 1 for nesting)",
              "34": "+1",
              "35": "+1",
              "36": "+1",
              "37": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 13,
                  "endLine": 216,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 190,
                  "startColumn": 7,
                  "endLine": 190,
                  "endColumn": 9
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 6,
                  "endLine": 189,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 7,
                  "endLine": 31,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 7,
                  "endLine": 31,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 31 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 15,
                  "endLine": 64,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 5,
                  "endLine": 72,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 7,
                  "endLine": 76,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 56,
                  "endLine": 76,
                  "endColumn": 58
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 8,
                  "endLine": 83,
                  "endColumn": 14
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 8,
                  "endLine": 116,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 8,
                  "endLine": 137,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 9,
                  "endLine": 163,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 194,
                  "startColumn": 59,
                  "endLine": 194,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 197,
                  "startColumn": 63,
                  "endLine": 197,
                  "endColumn": 64
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 212,
                  "startColumn": 8,
                  "endLine": 212,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 212,
                  "startColumn": 56,
                  "endLine": 212,
                  "endColumn": 58
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 8,
                  "endLine": 215,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2Input.cs",
                "region": {
                  "startLine": 223,
                  "startColumn": 4,
                  "endLine": 223,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+3 (incl 2 for nesting)",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1117",
          "level": "warning",
          "message": "Rename 'window' which hides the field with the same name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 535,
                  "startColumn": 8,
                  "endLine": 535,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1117",
          "level": "warning",
          "message": "Rename 'context' which hides the field with the same name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/Sdl2PlatformWindow.cs",
                "region": {
                  "startLine": 544,
                  "startColumn": 8,
                  "endLine": 544,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2486",
          "level": "warning",
          "message": "Handle the exception or explain in a comment why it can be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 708,
                  "startColumn": 4,
                  "endLine": 708,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 661,
                  "startColumn": 22,
                  "endLine": 661,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 672,
                  "startColumn": 5,
                  "endLine": 672,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 675,
                  "startColumn": 6,
                  "endLine": 675,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 675,
                  "startColumn": 28,
                  "endLine": 675,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 681,
                  "startColumn": 5,
                  "endLine": 681,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 681,
                  "startColumn": 33,
                  "endLine": 681,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 685,
                  "startColumn": 6,
                  "endLine": 685,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 688,
                  "startColumn": 5,
                  "endLine": 688,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 688,
                  "startColumn": 24,
                  "endLine": 688,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 688,
                  "startColumn": 39,
                  "endLine": 688,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 696,
                  "startColumn": 5,
                  "endLine": 696,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 699,
                  "startColumn": 5,
                  "endLine": 699,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 699,
                  "startColumn": 29,
                  "endLine": 699,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 699,
                  "startColumn": 44,
                  "endLine": 699,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 699,
                  "startColumn": 74,
                  "endLine": 699,
                  "endColumn": 76
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 701,
                  "startColumn": 6,
                  "endLine": 701,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 708,
                  "startColumn": 4,
                  "endLine": 708,
                  "endColumn": 9
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+2 (incl 1 for nesting)",
              "15": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 708,
                  "startColumn": 22,
                  "endLine": 708,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 701,
                  "startColumn": 6,
                  "endLine": 701,
                  "endColumn": 8
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 699,
                  "startColumn": 5,
                  "endLine": 699,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 25 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 483,
                  "startColumn": 22,
                  "endLine": 483,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 495,
                  "startColumn": 4,
                  "endLine": 495,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 500,
                  "startColumn": 4,
                  "endLine": 500,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 507,
                  "startColumn": 4,
                  "endLine": 507,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 507,
                  "startColumn": 59,
                  "endLine": 507,
                  "endColumn": 61
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 511,
                  "startColumn": 4,
                  "endLine": 511,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 511,
                  "startColumn": 59,
                  "endLine": 511,
                  "endColumn": 61
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 514,
                  "startColumn": 5,
                  "endLine": 514,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 514,
                  "startColumn": 34,
                  "endLine": 514,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 519,
                  "startColumn": 4,
                  "endLine": 519,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 519,
                  "startColumn": 59,
                  "endLine": 519,
                  "endColumn": 61
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 522,
                  "startColumn": 5,
                  "endLine": 522,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 522,
                  "startColumn": 42,
                  "endLine": 522,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 527,
                  "startColumn": 4,
                  "endLine": 527,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 531,
                  "startColumn": 49,
                  "endLine": 531,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 542,
                  "startColumn": 5,
                  "endLine": 542,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 605,
                  "startColumn": 5,
                  "endLine": 605,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 607,
                  "startColumn": 6,
                  "endLine": 607,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 612,
                  "startColumn": 6,
                  "endLine": 612,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 631,
                  "startColumn": 5,
                  "endLine": 631,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 649,
                  "startColumn": 4,
                  "endLine": 649,
                  "endColumn": 9
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+1",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "14": "+2 (incl 1 for nesting)",
              "15": "+1",
              "16": "+2 (incl 1 for nesting)",
              "17": "+1",
              "18": "+1",
              "19": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this constructor to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 542,
                  "startColumn": 10,
                  "endLine": 542,
                  "endColumn": 30
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 559,
                  "startColumn": 6,
                  "endLine": 559,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 569,
                  "startColumn": 6,
                  "endLine": 569,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 592,
                  "startColumn": 7,
                  "endLine": 592,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 598,
                  "startColumn": 8,
                  "endLine": 598,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 600,
                  "startColumn": 8,
                  "endLine": 600,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 610,
                  "startColumn": 6,
                  "endLine": 610,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 618,
                  "startColumn": 7,
                  "endLine": 618,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 628,
                  "startColumn": 7,
                  "endLine": 628,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+2 (incl 1 for nesting)",
              "1": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.OutOfMemoryException' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenGL.cs",
                "region": {
                  "startLine": 762,
                  "startColumn": 11,
                  "endLine": 762,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 652,
                  "startColumn": 4,
                  "endLine": 653,
                  "endColumn": 5
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'soundSource' to 'sound' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/DummySoundEngine.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/DummySoundEngine.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 8,
                  "endLine": 50,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/DummySoundEngine.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 15,
                  "endLine": 53,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/DummySoundEngine.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 15,
                  "endLine": 54,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/DummySoundEngine.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 15,
                  "endLine": 55,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/DummySoundEngine.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 15,
                  "endLine": 56,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/DummySoundEngine.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 15,
                  "endLine": 57,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/DummySoundEngine.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 15,
                  "endLine": 58,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/DummySoundEngine.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 15,
                  "endLine": 59,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/DummySoundEngine.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 15,
                  "endLine": 60,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/DummySoundEngine.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 15,
                  "endLine": 65,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/DummySoundEngine.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 15,
                  "endLine": 74,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'position' to 'pos' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/DummySoundEngine.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 32,
                  "endLine": 74,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 23 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 201,
                  "startColumn": 17,
                  "endLine": 201,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 203,
                  "startColumn": 4,
                  "endLine": 203,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 4,
                  "endLine": 215,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 218,
                  "startColumn": 5,
                  "endLine": 218,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 6,
                  "endLine": 220,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 222,
                  "startColumn": 6,
                  "endLine": 222,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 6,
                  "endLine": 226,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 228,
                  "startColumn": 6,
                  "endLine": 228,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 233,
                  "startColumn": 6,
                  "endLine": 233,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 237,
                  "startColumn": 6,
                  "endLine": 237,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 4,
                  "endLine": 245,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'soundSource' to 'sound' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 201,
                  "startColumn": 37,
                  "endLine": 201,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1121",
          "level": "warning",
          "message": "Extract the assignment of 'volume' from this expression.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 276,
                  "startColumn": 49,
                  "endLine": 276,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2589",
          "level": "warning",
          "message": "Change this condition so that it does not always evaluate to 'true'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/OpenAlSoundEngine.cs",
                "region": {
                  "startLine": 309,
                  "startColumn": 13,
                  "endLine": 309,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/FreeTypeFont.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 5,
                  "endLine": 136,
                  "endColumn": 7
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/OpenRA/OpenRA.Platforms.Default/FreeTypeFont.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 4,
                  "endLine": 134,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code’s readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S107": {
          "id": "S107",
          "shortDescription": "Methods should not have too many parameters",
          "fullDescription": "A long parameter list can indicate that a new structure should be created to wrap the numerous parameters or that the function is doing too many things.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-107",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S108": {
          "id": "S108",
          "shortDescription": "Nested blocks of code should not be left empty",
          "fullDescription": "Most of the time a block of code is empty when a piece of code is really missing. So such empty block must be either filled or removed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-108",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1117": {
          "id": "S1117",
          "shortDescription": "Local variables should not shadow class fields",
          "fullDescription": "Overriding or shadowing a variable declared in an outer scope can strongly impact the readability, and therefore the maintainability, of a piece of code. Further, it could lead maintainers to introduce bugs because they think they’re using one variable but are really using another.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1117",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General exceptions should never be thrown",
          "fullDescription": "Throwing such general exceptions as Exception, SystemException, ApplicationException, IndexOutOfRangeException, NullReferenceException, OutOfMemoryException and ExecutionEngineException prevents calling methods from handling true, system-generated exceptions differently than application-generated errors.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1121": {
          "id": "S1121",
          "shortDescription": "Assignments should not be made from within sub-expressions",
          "fullDescription": "Assignments within sub-expressions are hard to spot and therefore make the code less readable. Ideally, sub-expressions should not have side-effects.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1121",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1135": {
          "id": "S1135",
          "shortDescription": "Track uses of \"TODO\" tags",
          "fullDescription": "TODO tags are commonly used to mark places where some more code is required, but which the developer wants to implement later.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1135",
          "properties": {
            "category": "Info Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1186": {
          "id": "S1186",
          "shortDescription": "Methods should not be empty",
          "fullDescription": "There are several reasons for a method not to have a method body:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1186",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2486": {
          "id": "S2486",
          "shortDescription": "Generic exceptions should not be ignored",
          "fullDescription": "When exceptions occur, it is usually a bad idea to simply ignore them. Instead, it is better to handle them properly, or at least to log them.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2486",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2589": {
          "id": "S2589",
          "shortDescription": "Boolean expressions should not be gratuitous",
          "fullDescription": "If a boolean expression doesn’t change the evaluation of the condition, then it is entirely unnecessary, and can be removed. If it is gratuitous because it does not match the programmer’s intent, then it’s a bug and the expression should be fixed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2589",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3358": {
          "id": "S3358",
          "shortDescription": "Ternary operators should not be nested",
          "fullDescription": "Just because you can do something, doesn’t mean you should, and that’s the case with nested ternary operations. Nesting ternary operators results in the kind of code that may seem clear as day when you write it, but six months later will leave maintainers (or worse - future you) scratching their heads and cursing.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3358",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S927": {
          "id": "S927",
          "shortDescription": "Parameter names should match base declaration and other partial definitions",
          "fullDescription": "The name of a parameter in an externally visible. This rule raises an issue when method override does not match the name of the parameter in the base declaration of the method, or the name of the parameter in the interface declaration of the method or the name of any other partial definition.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-927",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}