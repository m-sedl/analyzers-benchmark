{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.4.0.0",
        "fileVersion": "4.4.0-2.22426.8 (7886fad5)",
        "semanticVersion": "4.4.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS0612",
          "level": "warning",
          "message": "'CoreAnnotationNames.DefiningQuery' is obsolete",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Extensions/InMemoryEntityTypeBuilderExtensions.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 47,
                  "endLine": 106,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0612",
          "level": "warning",
          "message": "'CoreAnnotationNames.DefiningQuery' is obsolete",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Extensions/InMemoryEntityTypeExtensions.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 42,
                  "endLine": 26,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0612",
          "level": "warning",
          "message": "'CoreAnnotationNames.DefiningQuery' is obsolete",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Extensions/InMemoryEntityTypeExtensions.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 36,
                  "endLine": 41,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0612",
          "level": "warning",
          "message": "'CoreAnnotationNames.DefiningQuery' is obsolete",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Extensions/InMemoryEntityTypeExtensions.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 36,
                  "endLine": 59,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0612",
          "level": "warning",
          "message": "'CoreAnnotationNames.DefiningQuery' is obsolete",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Extensions/InMemoryEntityTypeExtensions.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 38,
                  "endLine": 72,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1530,
                  "startColumn": 11,
                  "endLine": 1530,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "EF1001",
          "level": "warning",
          "message": "Microsoft.EntityFrameworkCore.Design.Internal.CSharpRuntimeAnnotationCodeGenerator is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Design/Internal/InMemoryCSharpRuntimeAnnotationCodeGenerator.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 61,
                  "endLine": 15,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 948,
                  "startColumn": 16,
                  "endLine": 948,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 972,
                  "startColumn": 16,
                  "endLine": 972,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/InMemoryDatabaseRoot.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 20,
                  "endLine": 29,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2344",
          "level": "warning",
          "message": "Rename this enumeration to remove the 'Flags' suffix.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/CodeAnnotations.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 15,
                  "endLine": 81,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2344",
          "level": "warning",
          "message": "Rename this enumeration to remove the 'Flags' suffix.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/CodeAnnotations.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 15,
                  "endLine": 91,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Diagnostics/Internal/InMemoryLoggingDefinitions.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 33,
                  "endLine": 20,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Diagnostics/Internal/InMemoryLoggingDefinitions.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 33,
                  "endLine": 28,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 5,
                  "endLine": 12,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 5,
                  "endLine": 24,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 5,
                  "endLine": 34,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 5,
                  "endLine": 46,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 5,
                  "endLine": 52,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 5,
                  "endLine": 56,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 5,
                  "endLine": 70,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 5,
                  "endLine": 78,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 5,
                  "endLine": 84,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 5,
                  "endLine": 88,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 5,
                  "endLine": 92,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 5,
                  "endLine": 118,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 5,
                  "endLine": 122,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 5,
                  "endLine": 138,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 5,
                  "endLine": 142,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 5,
                  "endLine": 146,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 5,
                  "endLine": 160,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 5,
                  "endLine": 166,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 5,
                  "endLine": 170,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 5,
                  "endLine": 174,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 5,
                  "endLine": 178,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 188,
                  "startColumn": 5,
                  "endLine": 188,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 5,
                  "endLine": 195,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 199,
                  "startColumn": 5,
                  "endLine": 199,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 206,
                  "startColumn": 5,
                  "endLine": 206,
                  "endColumn": 90
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 5,
                  "endLine": 216,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 236,
                  "startColumn": 5,
                  "endLine": 236,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 546,
                  "startColumn": 9,
                  "endLine": 546,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 552,
                  "startColumn": 9,
                  "endLine": 552,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 558,
                  "startColumn": 13,
                  "endLine": 558,
                  "endColumn": 115
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableMethods.cs",
                "region": {
                  "startLine": 573,
                  "startColumn": 13,
                  "endLine": 573,
                  "endColumn": 111
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 328,
                  "startColumn": 12,
                  "endLine": 328,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryTransaction.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 14,
                  "endLine": 12,
                  "endColumn": 33
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryTransaction.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 14,
                  "endLine": 12,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryTransaction.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 25,
                  "endLine": 66,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryTransaction.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 12,
                  "endLine": 66,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'InMemoryTransaction' or mark the type as 'sealed'.",
              "1": "'InMemoryTransaction.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'.",
              "2": "'InMemoryTransaction.Dispose()' should not be 'virtual' or 'abstract'."
            }
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private constructor 'QueryingEnumerable'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryShapedQueryCompilingExpressionVisitor.QueryingEnumerable.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 9,
                  "endLine": 42,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4144",
          "level": "warning",
          "message": "Update this method so that its implementation is not identical to 'CommitTransactionAsync'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 25,
                  "endLine": 96,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryTransactionManager.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 25,
                  "endLine": 75,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private field 'ValueBufferCountMemberInfo'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 5,
                  "endLine": 21,
                  "endColumn": 85
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private constructor 'ResultEnumerable'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.Helper.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 9,
                  "endLine": 18,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field '_defaultIfEmpty' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 905,
                  "startColumn": 22,
                  "endLine": 905,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private property 'TranslationErrorDetails'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1164,
                  "startColumn": 9,
                  "endLine": 1165,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'TranslateSelectMany' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 882,
                  "startColumn": 47,
                  "endLine": 882,
                  "endColumn": 66
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 934,
                  "startColumn": 47,
                  "endLine": 934,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/StringBuilderExtensions.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 31,
                  "endLine": 55,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/StringBuilderExtensions.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 17,
                  "endLine": 57,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "EF1001",
          "level": "warning",
          "message": "Microsoft.EntityFrameworkCore.Design.Internal.CSharpRuntimeAnnotationCodeGeneratorDependencies is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Design/Internal/InMemoryCSharpRuntimeAnnotationCodeGenerator.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 9,
                  "endLine": 24,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "EF1001",
          "level": "warning",
          "message": "Microsoft.EntityFrameworkCore.Design.Internal.CSharpRuntimeAnnotationCodeGenerator is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Design/Internal/InMemoryCSharpRuntimeAnnotationCodeGenerator.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 9,
                  "endLine": 25,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'NonCapturingLazyInitializer.EnsureInitialized' method to no more than the 3 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/NonCapturingLazyInitializer.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 26,
                  "endLine": 51,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "EF1001",
          "level": "warning",
          "message": "Microsoft.EntityFrameworkCore.Design.Internal.ICSharpRuntimeAnnotationCodeGenerator is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Design/Internal/InMemoryDesignTimeServices.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 9,
                  "endLine": 30,
                  "endColumn": 107
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 15,
                  "endLine": 72,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "EF1001",
          "level": "warning",
          "message": "Microsoft.EntityFrameworkCore.Metadata.Internal.CoreAnnotationNames is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Extensions/InMemoryEntityTypeBuilderExtensions.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 67,
                  "endLine": 106,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "EF1001",
          "level": "warning",
          "message": "Microsoft.EntityFrameworkCore.Metadata.Internal.CoreAnnotationNames is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Extensions/InMemoryEntityTypeExtensions.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 62,
                  "endLine": 26,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "EF1001",
          "level": "warning",
          "message": "Microsoft.EntityFrameworkCore.Metadata.Internal.CoreAnnotationNames is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Extensions/InMemoryEntityTypeExtensions.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 56,
                  "endLine": 41,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "EF1001",
          "level": "warning",
          "message": "Microsoft.EntityFrameworkCore.Metadata.Internal.CoreAnnotationNames is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Extensions/InMemoryEntityTypeExtensions.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 56,
                  "endLine": 59,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "EF1001",
          "level": "warning",
          "message": "Microsoft.EntityFrameworkCore.Metadata.Internal.CoreAnnotationNames is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Extensions/InMemoryEntityTypeExtensions.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 58,
                  "endLine": 72,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Infrastructure/Internal/InMemoryModelValidator.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 17,
                  "endLine": 51,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Infrastructure/Internal/InMemoryModelValidator.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 13,
                  "endLine": 49,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 13,
                  "endLine": 34,
                  "endColumn": 15
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 9,
                  "endLine": 32,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Graph.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 38,
                  "endLine": 33,
                  "endColumn": 73
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Graph.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Check.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 19,
                  "endLine": 117,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1751",
          "level": "warning",
          "message": "Refactor the containing loop to do more than one iteration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/EnumerableExtensions.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 13,
                  "endLine": 122,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'resultType' to 'castType' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 217,
                  "startColumn": 96,
                  "endLine": 217,
                  "endColumn": 106
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 52 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 33,
                  "endLine": 89,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 9,
                  "endLine": 91,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 9,
                  "endLine": 96,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 17,
                  "endLine": 97,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 13,
                  "endLine": 101,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 17,
                  "endLine": 103,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 25,
                  "endLine": 110,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 115,
                  "startColumn": 25,
                  "endLine": 115,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 25,
                  "endLine": 136,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 29,
                  "endLine": 137,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 29,
                  "endLine": 144,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 25,
                  "endLine": 155,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 29,
                  "endLine": 158,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 33,
                  "endLine": 162,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 33,
                  "endLine": 167,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 33,
                  "endLine": 176,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 191,
                  "startColumn": 21,
                  "endLine": 191,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 194,
                  "startColumn": 13,
                  "endLine": 194,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 197,
                  "startColumn": 17,
                  "endLine": 197,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+5 (incl 4 for nesting)",
              "12": "+6 (incl 5 for nesting)",
              "13": "+6 (incl 5 for nesting)",
              "14": "+1",
              "15": "+3 (incl 2 for nesting)",
              "16": "+1",
              "17": "+3 (incl 2 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+1",
              "9": "+5 (incl 4 for nesting)"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'expression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 51,
                  "endLine": 89,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'extensionExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryShapedQueryCompilingExpressionVisitor.ShaperExpressionProcessingExpressionVisitor.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 65,
                  "endLine": 66,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 414,
                  "startColumn": 25,
                  "endLine": 414,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 416,
                  "startColumn": 9,
                  "endLine": 416,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 419,
                  "startColumn": 17,
                  "endLine": 419,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 425,
                  "startColumn": 17,
                  "endLine": 425,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 428,
                  "startColumn": 21,
                  "endLine": 428,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 440,
                  "startColumn": 17,
                  "endLine": 440,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 446,
                  "startColumn": 17,
                  "endLine": 446,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 450,
                  "startColumn": 21,
                  "endLine": 450,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 466,
                  "startColumn": 17,
                  "endLine": 466,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 472,
                  "startColumn": 21,
                  "endLine": 472,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 414,
                  "startColumn": 25,
                  "endLine": 414,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+2 (incl 1 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1 (recursion)"
            }
          }
        },
        {
          "ruleId": "EF1001",
          "level": "warning",
          "message": "Microsoft.EntityFrameworkCore.Query.IncludeExpression.SetLoaded is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryShapedQueryCompilingExpressionVisitor.ShaperExpressionProcessingExpressionVisitor.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 71,
                  "endLine": 144,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'binaryExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryShapedQueryCompilingExpressionVisitor.ShaperExpressionProcessingExpressionVisitor.cs",
                "region": {
                  "startLine": 202,
                  "startColumn": 68,
                  "endLine": 202,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'methodCallExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryShapedQueryCompilingExpressionVisitor.ShaperExpressionProcessingExpressionVisitor.cs",
                "region": {
                  "startLine": 234,
                  "startColumn": 76,
                  "endLine": 234,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 74 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 42,
                  "endLine": 152,
                  "endColumn": 61
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 9,
                  "endLine": 174,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 13,
                  "endLine": 176,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 184,
                  "startColumn": 9,
                  "endLine": 184,
                  "endColumn": 14
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 13,
                  "endLine": 186,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 17,
                  "endLine": 192,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 17,
                  "endLine": 198,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 17,
                  "endLine": 207,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 213,
                  "startColumn": 21,
                  "endLine": 213,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 218,
                  "startColumn": 25,
                  "endLine": 218,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 232,
                  "startColumn": 13,
                  "endLine": 232,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 17,
                  "endLine": 239,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 240,
                  "startColumn": 24,
                  "endLine": 240,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 244,
                  "startColumn": 21,
                  "endLine": 244,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 254,
                  "startColumn": 33,
                  "endLine": 254,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 256,
                  "startColumn": 21,
                  "endLine": 256,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 264,
                  "startColumn": 25,
                  "endLine": 264,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 277,
                  "startColumn": 17,
                  "endLine": 277,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 283,
                  "startColumn": 85,
                  "endLine": 283,
                  "endColumn": 87
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 286,
                  "startColumn": 17,
                  "endLine": 286,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 288,
                  "startColumn": 21,
                  "endLine": 288,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 290,
                  "startColumn": 25,
                  "endLine": 290,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 291,
                  "startColumn": 29,
                  "endLine": 291,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 309,
                  "startColumn": 17,
                  "endLine": 309,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 311,
                  "startColumn": 21,
                  "endLine": 311,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 332,
                  "startColumn": 13,
                  "endLine": 332,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 333,
                  "startColumn": 17,
                  "endLine": 333,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 337,
                  "startColumn": 25,
                  "endLine": 337,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 336,
                  "startColumn": 26,
                  "endLine": 336,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/Multigraph.cs",
                "region": {
                  "startLine": 336,
                  "startColumn": 65,
                  "endLine": 336,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+3 (incl 2 for nesting)",
              "11": "+1",
              "12": "+4 (incl 3 for nesting)",
              "13": "+1",
              "14": "+4 (incl 3 for nesting)",
              "15": "+5 (incl 4 for nesting)",
              "16": "+3 (incl 2 for nesting)",
              "17": "+1",
              "18": "+3 (incl 2 for nesting)",
              "19": "+4 (incl 3 for nesting)",
              "2": "+1",
              "20": "+5 (incl 4 for nesting)",
              "21": "+1",
              "22": "+3 (incl 2 for nesting)",
              "23": "+4 (incl 3 for nesting)",
              "24": "+2 (incl 1 for nesting)",
              "25": "+1",
              "26": "+1",
              "27": "+1",
              "28": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+5 (incl 4 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'binaryExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 217,
                  "startColumn": 64,
                  "endLine": 217,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryShapedQueryCompilingExpressionVisitor.ShaperExpressionProcessingExpressionVisitor.cs",
                "region": {
                  "startLine": 256,
                  "startColumn": 29,
                  "endLine": 256,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryShapedQueryCompilingExpressionVisitor.ShaperExpressionProcessingExpressionVisitor.cs",
                "region": {
                  "startLine": 268,
                  "startColumn": 13,
                  "endLine": 268,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryShapedQueryCompilingExpressionVisitor.ShaperExpressionProcessingExpressionVisitor.cs",
                "region": {
                  "startLine": 270,
                  "startColumn": 17,
                  "endLine": 270,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryShapedQueryCompilingExpressionVisitor.ShaperExpressionProcessingExpressionVisitor.cs",
                "region": {
                  "startLine": 271,
                  "startColumn": 21,
                  "endLine": 271,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryShapedQueryCompilingExpressionVisitor.ShaperExpressionProcessingExpressionVisitor.cs",
                "region": {
                  "startLine": 274,
                  "startColumn": 21,
                  "endLine": 274,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryShapedQueryCompilingExpressionVisitor.ShaperExpressionProcessingExpressionVisitor.cs",
                "region": {
                  "startLine": 279,
                  "startColumn": 17,
                  "endLine": 279,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryShapedQueryCompilingExpressionVisitor.ShaperExpressionProcessingExpressionVisitor.cs",
                "region": {
                  "startLine": 282,
                  "startColumn": 21,
                  "endLine": 282,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryShapedQueryCompilingExpressionVisitor.ShaperExpressionProcessingExpressionVisitor.cs",
                "region": {
                  "startLine": 285,
                  "startColumn": 25,
                  "endLine": 285,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryShapedQueryCompilingExpressionVisitor.ShaperExpressionProcessingExpressionVisitor.cs",
                "region": {
                  "startLine": 286,
                  "startColumn": 29,
                  "endLine": 286,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'conditionalExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 74,
                  "endLine": 231,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'extensionExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 254,
                  "startColumn": 61,
                  "endLine": 254,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 9 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryShapedQueryCompilingExpressionVisitor.ShaperExpressionProcessingExpressionVisitor.cs",
                "region": {
                  "startLine": 295,
                  "startColumn": 90,
                  "endLine": 304,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'elementInit' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 303,
                  "startColumn": 65,
                  "endLine": 303,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 103 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 157,
                  "startColumn": 35,
                  "endLine": 157,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 9,
                  "endLine": 159,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 13,
                  "endLine": 160,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 9,
                  "endLine": 166,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 13,
                  "endLine": 167,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 64,
                  "endLine": 166,
                  "endColumn": 66
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 66,
                  "endLine": 167,
                  "endColumn": 68
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 169,
                  "startColumn": 86,
                  "endLine": 169,
                  "endColumn": 87
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 13,
                  "endLine": 170,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 17,
                  "endLine": 171,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 17,
                  "endLine": 176,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 17,
                  "endLine": 185,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 188,
                  "startColumn": 21,
                  "endLine": 188,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 25,
                  "endLine": 189,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 33,
                  "endLine": 198,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 210,
                  "startColumn": 9,
                  "endLine": 210,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 211,
                  "startColumn": 13,
                  "endLine": 211,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 212,
                  "startColumn": 13,
                  "endLine": 212,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 214,
                  "startColumn": 13,
                  "endLine": 214,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 17,
                  "endLine": 215,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 13,
                  "endLine": 220,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 221,
                  "startColumn": 17,
                  "endLine": 221,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 230,
                  "startColumn": 9,
                  "endLine": 230,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 13,
                  "endLine": 231,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 236,
                  "startColumn": 9,
                  "endLine": 236,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 13,
                  "endLine": 239,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 237,
                  "startColumn": 17,
                  "endLine": 237,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 249,
                  "startColumn": 9,
                  "endLine": 249,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 250,
                  "startColumn": 13,
                  "endLine": 250,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 256,
                  "startColumn": 9,
                  "endLine": 256,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 257,
                  "startColumn": 13,
                  "endLine": 257,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 262,
                  "startColumn": 13,
                  "endLine": 262,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 268,
                  "startColumn": 17,
                  "endLine": 268,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 272,
                  "startColumn": 58,
                  "endLine": 272,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 279,
                  "startColumn": 21,
                  "endLine": 279,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 25,
                  "endLine": 280,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 287,
                  "startColumn": 25,
                  "endLine": 287,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 289,
                  "startColumn": 29,
                  "endLine": 289,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 288,
                  "startColumn": 45,
                  "endLine": 288,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 296,
                  "startColumn": 25,
                  "endLine": 296,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 298,
                  "startColumn": 29,
                  "endLine": 298,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 297,
                  "startColumn": 45,
                  "endLine": 297,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 304,
                  "startColumn": 21,
                  "endLine": 304,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 304,
                  "startColumn": 46,
                  "endLine": 304,
                  "endColumn": 48
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 315,
                  "startColumn": 25,
                  "endLine": 315,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 327,
                  "startColumn": 21,
                  "endLine": 327,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 344,
                  "startColumn": 13,
                  "endLine": 344,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 345,
                  "startColumn": 17,
                  "endLine": 345,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 351,
                  "startColumn": 13,
                  "endLine": 351,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 359,
                  "startColumn": 13,
                  "endLine": 359,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 362,
                  "startColumn": 17,
                  "endLine": 362,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 378,
                  "startColumn": 30,
                  "endLine": 378,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 387,
                  "startColumn": 13,
                  "endLine": 387,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 388,
                  "startColumn": 17,
                  "endLine": 388,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+4 (incl 3 for nesting)",
              "12": "+1",
              "13": "+5 (incl 4 for nesting)",
              "14": "+1",
              "15": "+1",
              "16": "+1",
              "17": "+2 (incl 1 for nesting)",
              "18": "+1",
              "19": "+2 (incl 1 for nesting)",
              "2": "+1",
              "20": "+1",
              "21": "+1",
              "22": "+1",
              "23": "+1",
              "24": "+1",
              "25": "+1",
              "26": "+1",
              "27": "+1",
              "28": "+1",
              "29": "+1",
              "3": "+1",
              "30": "+2 (incl 1 for nesting)",
              "31": "+3 (incl 2 for nesting)",
              "32": "+1",
              "33": "+4 (incl 3 for nesting)",
              "34": "+1",
              "35": "+4 (incl 3 for nesting)",
              "36": "+5 (incl 4 for nesting)",
              "37": "+1",
              "38": "+4 (incl 3 for nesting)",
              "39": "+5 (incl 4 for nesting)",
              "4": "+1",
              "40": "+1",
              "41": "+4 (incl 3 for nesting)",
              "42": "+1",
              "43": "+3 (incl 2 for nesting)",
              "44": "+3 (incl 2 for nesting)",
              "45": "+2 (incl 1 for nesting)",
              "46": "+1",
              "47": "+2 (incl 1 for nesting)",
              "48": "+2 (incl 1 for nesting)",
              "49": "+3 (incl 2 for nesting)",
              "5": "+1",
              "50": "+3 (incl 2 for nesting)",
              "51": "+2 (incl 1 for nesting)",
              "52": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+2 (incl 1 for nesting)",
              "8": "+1",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 250,
                  "startColumn": 25,
                  "endLine": 250,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 252,
                  "startColumn": 9,
                  "endLine": 252,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 259,
                  "startColumn": 9,
                  "endLine": 259,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 261,
                  "startColumn": 13,
                  "endLine": 261,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 264,
                  "startColumn": 17,
                  "endLine": 264,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 269,
                  "startColumn": 25,
                  "endLine": 269,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 282,
                  "startColumn": 29,
                  "endLine": 282,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 285,
                  "startColumn": 25,
                  "endLine": 285,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 302,
                  "startColumn": 9,
                  "endLine": 302,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 307,
                  "startColumn": 17,
                  "endLine": 307,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 310,
                  "startColumn": 21,
                  "endLine": 310,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 318,
                  "startColumn": 17,
                  "endLine": 318,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 334,
                  "startColumn": 72,
                  "endLine": 334,
                  "endColumn": 73
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 344,
                  "startColumn": 9,
                  "endLine": 344,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryTable.cs",
                "region": {
                  "startLine": 271,
                  "startColumn": 25,
                  "endLine": 271,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryTable.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 9,
                  "endLine": 275,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryTable.cs",
                "region": {
                  "startLine": 283,
                  "startColumn": 13,
                  "endLine": 283,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryTable.cs",
                "region": {
                  "startLine": 285,
                  "startColumn": 17,
                  "endLine": 285,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryTable.cs",
                "region": {
                  "startLine": 290,
                  "startColumn": 17,
                  "endLine": 290,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryTable.cs",
                "region": {
                  "startLine": 296,
                  "startColumn": 21,
                  "endLine": 296,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryTable.cs",
                "region": {
                  "startLine": 300,
                  "startColumn": 13,
                  "endLine": 300,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryTable.cs",
                "region": {
                  "startLine": 305,
                  "startColumn": 13,
                  "endLine": 305,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryTable.cs",
                "region": {
                  "startLine": 314,
                  "startColumn": 9,
                  "endLine": 314,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryTable.cs",
                "region": {
                  "startLine": 318,
                  "startColumn": 13,
                  "endLine": 318,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'memberAssignment' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 341,
                  "startColumn": 80,
                  "endLine": 341,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 288,
                  "startColumn": 27,
                  "endLine": 293,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 297,
                  "startColumn": 27,
                  "endLine": 302,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'conditionalExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 417,
                  "startColumn": 74,
                  "endLine": 417,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'memberExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 312,
                  "startColumn": 64,
                  "endLine": 312,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'extensionExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 451,
                  "startColumn": 61,
                  "endLine": 451,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'invocationExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 477,
                  "startColumn": 72,
                  "endLine": 477,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'listInitExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 495,
                  "startColumn": 68,
                  "endLine": 495,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'lambdaExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 486,
                  "startColumn": 64,
                  "endLine": 486,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'binaryExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 157,
                  "startColumn": 64,
                  "endLine": 157,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1121",
          "level": "warning",
          "message": "Extract the assignment of 'table' from this expression.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Storage/Internal/InMemoryStore.cs",
                "region": {
                  "startLine": 217,
                  "startColumn": 40,
                  "endLine": 217,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 566,
                  "startColumn": 15,
                  "endLine": 568,
                  "endColumn": 100
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'memberExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 504,
                  "startColumn": 64,
                  "endLine": 504,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'memberAssignment' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 558,
                  "startColumn": 80,
                  "endLine": 558,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'memberInitExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 580,
                  "startColumn": 72,
                  "endLine": 580,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 24 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 371,
                  "startColumn": 25,
                  "endLine": 371,
                  "endColumn": 42
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 374,
                  "startColumn": 9,
                  "endLine": 374,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 383,
                  "startColumn": 17,
                  "endLine": 383,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 384,
                  "startColumn": 21,
                  "endLine": 384,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 387,
                  "startColumn": 21,
                  "endLine": 387,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 394,
                  "startColumn": 25,
                  "endLine": 394,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 395,
                  "startColumn": 29,
                  "endLine": 395,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 405,
                  "startColumn": 17,
                  "endLine": 405,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 410,
                  "startColumn": 21,
                  "endLine": 410,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 411,
                  "startColumn": 25,
                  "endLine": 411,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 431,
                  "startColumn": 87,
                  "endLine": 431,
                  "endColumn": 88
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 442,
                  "startColumn": 87,
                  "endLine": 442,
                  "endColumn": 88
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 445,
                  "startColumn": 9,
                  "endLine": 445,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+3 (incl 2 for nesting)",
              "11": "+1",
              "2": "+1",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'memberInitExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 374,
                  "startColumn": 72,
                  "endLine": 374,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'methodCallExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 408,
                  "startColumn": 72,
                  "endLine": 408,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 21 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 501,
                  "startColumn": 25,
                  "endLine": 501,
                  "endColumn": 43
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 509,
                  "startColumn": 9,
                  "endLine": 509,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 510,
                  "startColumn": 13,
                  "endLine": 510,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 517,
                  "startColumn": 36,
                  "endLine": 517,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 519,
                  "startColumn": 9,
                  "endLine": 519,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 521,
                  "startColumn": 13,
                  "endLine": 521,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 526,
                  "startColumn": 13,
                  "endLine": 526,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 532,
                  "startColumn": 9,
                  "endLine": 532,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 534,
                  "startColumn": 13,
                  "endLine": 534,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 536,
                  "startColumn": 17,
                  "endLine": 536,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 541,
                  "startColumn": 17,
                  "endLine": 541,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 550,
                  "startColumn": 9,
                  "endLine": 550,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 559,
                  "startColumn": 9,
                  "endLine": 559,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 562,
                  "startColumn": 13,
                  "endLine": 562,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 568,
                  "startColumn": 13,
                  "endLine": 568,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/Shared/SharedTypeExtensions.cs",
                "region": {
                  "startLine": 501,
                  "startColumn": 25,
                  "endLine": 501,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+2 (incl 1 for nesting)",
              "14": "+1 (recursion)",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'newArrayExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 493,
                  "startColumn": 68,
                  "endLine": 493,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'newExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 446,
                  "startColumn": 58,
                  "endLine": 446,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'unaryExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryProjectionBindingExpressionVisitor.cs",
                "region": {
                  "startLine": 502,
                  "startColumn": 62,
                  "endLine": 502,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'newExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 899,
                  "startColumn": 58,
                  "endLine": 899,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 100 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 614,
                  "startColumn": 35,
                  "endLine": 614,
                  "endColumn": 50
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 616,
                  "startColumn": 9,
                  "endLine": 616,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 617,
                  "startColumn": 13,
                  "endLine": 617,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 623,
                  "startColumn": 9,
                  "endLine": 623,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 630,
                  "startColumn": 9,
                  "endLine": 630,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 638,
                  "startColumn": 9,
                  "endLine": 638,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 641,
                  "startColumn": 13,
                  "endLine": 641,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 649,
                  "startColumn": 13,
                  "endLine": 649,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 650,
                  "startColumn": 17,
                  "endLine": 650,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 656,
                  "startColumn": 13,
                  "endLine": 656,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 657,
                  "startColumn": 17,
                  "endLine": 657,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 658,
                  "startColumn": 21,
                  "endLine": 658,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 663,
                  "startColumn": 13,
                  "endLine": 663,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 664,
                  "startColumn": 21,
                  "endLine": 664,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 665,
                  "startColumn": 25,
                  "endLine": 665,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 670,
                  "startColumn": 13,
                  "endLine": 670,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 682,
                  "startColumn": 9,
                  "endLine": 682,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 683,
                  "startColumn": 13,
                  "endLine": 683,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 689,
                  "startColumn": 13,
                  "endLine": 689,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 692,
                  "startColumn": 17,
                  "endLine": 692,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 703,
                  "startColumn": 9,
                  "endLine": 703,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 712,
                  "startColumn": 9,
                  "endLine": 712,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 713,
                  "startColumn": 13,
                  "endLine": 713,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 719,
                  "startColumn": 13,
                  "endLine": 719,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 721,
                  "startColumn": 77,
                  "endLine": 721,
                  "endColumn": 78
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 722,
                  "startColumn": 78,
                  "endLine": 722,
                  "endColumn": 79
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 729,
                  "startColumn": 13,
                  "endLine": 729,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 730,
                  "startColumn": 17,
                  "endLine": 730,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 738,
                  "startColumn": 9,
                  "endLine": 738,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 739,
                  "startColumn": 18,
                  "endLine": 739,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 742,
                  "startColumn": 13,
                  "endLine": 742,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 743,
                  "startColumn": 17,
                  "endLine": 743,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 753,
                  "startColumn": 13,
                  "endLine": 753,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 755,
                  "startColumn": 77,
                  "endLine": 755,
                  "endColumn": 78
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 756,
                  "startColumn": 78,
                  "endLine": 756,
                  "endColumn": 79
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 763,
                  "startColumn": 13,
                  "endLine": 763,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 764,
                  "startColumn": 17,
                  "endLine": 764,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 771,
                  "startColumn": 9,
                  "endLine": 771,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 772,
                  "startColumn": 18,
                  "endLine": 772,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 777,
                  "startColumn": 13,
                  "endLine": 777,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 779,
                  "startColumn": 77,
                  "endLine": 779,
                  "endColumn": 78
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 785,
                  "startColumn": 13,
                  "endLine": 785,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 786,
                  "startColumn": 17,
                  "endLine": 786,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 793,
                  "startColumn": 9,
                  "endLine": 793,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 794,
                  "startColumn": 18,
                  "endLine": 794,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 799,
                  "startColumn": 13,
                  "endLine": 799,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 801,
                  "startColumn": 77,
                  "endLine": 801,
                  "endColumn": 78
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 807,
                  "startColumn": 13,
                  "endLine": 807,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 808,
                  "startColumn": 17,
                  "endLine": 808,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 816,
                  "startColumn": 9,
                  "endLine": 816,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 819,
                  "startColumn": 13,
                  "endLine": 819,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 825,
                  "startColumn": 13,
                  "endLine": 825,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 828,
                  "startColumn": 17,
                  "endLine": 828,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 840,
                  "startColumn": 9,
                  "endLine": 840,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 843,
                  "startColumn": 13,
                  "endLine": 843,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 844,
                  "startColumn": 17,
                  "endLine": 844,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 854,
                  "startColumn": 9,
                  "endLine": 854,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 855,
                  "startColumn": 13,
                  "endLine": 855,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 866,
                  "startColumn": 13,
                  "endLine": 866,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 869,
                  "startColumn": 17,
                  "endLine": 869,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 870,
                  "startColumn": 21,
                  "endLine": 870,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 876,
                  "startColumn": 17,
                  "endLine": 876,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+1",
              "13": "+1",
              "14": "+2 (incl 1 for nesting)",
              "15": "+1",
              "16": "+1",
              "17": "+2 (incl 1 for nesting)",
              "18": "+3 (incl 2 for nesting)",
              "19": "+1",
              "2": "+1",
              "20": "+1",
              "21": "+1",
              "22": "+2 (incl 1 for nesting)",
              "23": "+3 (incl 2 for nesting)",
              "24": "+3 (incl 2 for nesting)",
              "25": "+2 (incl 1 for nesting)",
              "26": "+1",
              "27": "+1",
              "28": "+1",
              "29": "+2 (incl 1 for nesting)",
              "3": "+1",
              "30": "+1",
              "31": "+2 (incl 1 for nesting)",
              "32": "+3 (incl 2 for nesting)",
              "33": "+3 (incl 2 for nesting)",
              "34": "+2 (incl 1 for nesting)",
              "35": "+1",
              "36": "+1",
              "37": "+1",
              "38": "+2 (incl 1 for nesting)",
              "39": "+3 (incl 2 for nesting)",
              "4": "+1",
              "40": "+2 (incl 1 for nesting)",
              "41": "+1",
              "42": "+1",
              "43": "+1",
              "44": "+2 (incl 1 for nesting)",
              "45": "+3 (incl 2 for nesting)",
              "46": "+2 (incl 1 for nesting)",
              "47": "+1",
              "48": "+1",
              "49": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "50": "+2 (incl 1 for nesting)",
              "51": "+3 (incl 2 for nesting)",
              "52": "+1",
              "53": "+2 (incl 1 for nesting)",
              "54": "+1",
              "55": "+1",
              "56": "+1",
              "57": "+2 (incl 1 for nesting)",
              "58": "+3 (incl 2 for nesting)",
              "59": "+1",
              "6": "+2 (incl 1 for nesting)",
              "60": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'newArrayExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 927,
                  "startColumn": 68,
                  "endLine": 927,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 493,
                  "startColumn": 25,
                  "endLine": 493,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 495,
                  "startColumn": 47,
                  "endLine": 495,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 499,
                  "startColumn": 9,
                  "endLine": 499,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 502,
                  "startColumn": 13,
                  "endLine": 502,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 508,
                  "startColumn": 9,
                  "endLine": 508,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 510,
                  "startColumn": 13,
                  "endLine": 510,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 513,
                  "startColumn": 17,
                  "endLine": 513,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 518,
                  "startColumn": 17,
                  "endLine": 518,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 523,
                  "startColumn": 17,
                  "endLine": 523,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 537,
                  "startColumn": 72,
                  "endLine": 537,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'parameterExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 955,
                  "startColumn": 70,
                  "endLine": 955,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'methodCallExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 614,
                  "startColumn": 72,
                  "endLine": 614,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'typeBinaryExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 974,
                  "startColumn": 72,
                  "endLine": 974,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'unaryExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1021,
                  "startColumn": 62,
                  "endLine": 1021,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'memberExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1174,
                  "startColumn": 68,
                  "endLine": 1174,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'methodCallExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1182,
                  "startColumn": 76,
                  "endLine": 1182,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 46 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1290,
                  "startColumn": 18,
                  "endLine": 1290,
                  "endColumn": 42
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1300,
                  "startColumn": 9,
                  "endLine": 1300,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1301,
                  "startColumn": 13,
                  "endLine": 1301,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1307,
                  "startColumn": 9,
                  "endLine": 1307,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1308,
                  "startColumn": 13,
                  "endLine": 1308,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1310,
                  "startColumn": 74,
                  "endLine": 1310,
                  "endColumn": 75
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1313,
                  "startColumn": 13,
                  "endLine": 1313,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1318,
                  "startColumn": 29,
                  "endLine": 1318,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1318,
                  "startColumn": 44,
                  "endLine": 1318,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1320,
                  "startColumn": 33,
                  "endLine": 1320,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1331,
                  "startColumn": 75,
                  "endLine": 1331,
                  "endColumn": 76
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1342,
                  "startColumn": 9,
                  "endLine": 1342,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1343,
                  "startColumn": 13,
                  "endLine": 1343,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1351,
                  "startColumn": 9,
                  "endLine": 1351,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1356,
                  "startColumn": 25,
                  "endLine": 1356,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1356,
                  "startColumn": 40,
                  "endLine": 1356,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1358,
                  "startColumn": 29,
                  "endLine": 1358,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1363,
                  "startColumn": 9,
                  "endLine": 1363,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1364,
                  "startColumn": 13,
                  "endLine": 1364,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1365,
                  "startColumn": 17,
                  "endLine": 1365,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1370,
                  "startColumn": 25,
                  "endLine": 1370,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1370,
                  "startColumn": 40,
                  "endLine": 1370,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1372,
                  "startColumn": 29,
                  "endLine": 1372,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1386,
                  "startColumn": 25,
                  "endLine": 1386,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "14": "+3 (incl 2 for nesting)",
              "15": "+3 (incl 2 for nesting)",
              "16": "+1",
              "17": "+1",
              "18": "+1",
              "19": "+2 (incl 1 for nesting)",
              "2": "+1",
              "20": "+3 (incl 2 for nesting)",
              "21": "+3 (incl 2 for nesting)",
              "22": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'extensionExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1195,
                  "startColumn": 65,
                  "endLine": 1195,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1318,
                  "startColumn": 31,
                  "endLine": 1318,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1319,
                  "startColumn": 31,
                  "endLine": 1321,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1356,
                  "startColumn": 27,
                  "endLine": 1356,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1357,
                  "startColumn": 27,
                  "endLine": 1359,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1370,
                  "startColumn": 27,
                  "endLine": 1370,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1371,
                  "startColumn": 27,
                  "endLine": 1373,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S907",
          "level": "warning",
          "message": "Remove this use of 'goto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 855,
                  "startColumn": 21,
                  "endLine": 855,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1454,
                  "startColumn": 13,
                  "endLine": 1454,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1202,
                  "startColumn": 29,
                  "endLine": 1202,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1205,
                  "startColumn": 13,
                  "endLine": 1205,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1211,
                  "startColumn": 13,
                  "endLine": 1211,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1216,
                  "startColumn": 17,
                  "endLine": 1216,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1223,
                  "startColumn": 17,
                  "endLine": 1223,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1226,
                  "startColumn": 13,
                  "endLine": 1226,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1232,
                  "startColumn": 13,
                  "endLine": 1232,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1233,
                  "startColumn": 17,
                  "endLine": 1233,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1239,
                  "startColumn": 13,
                  "endLine": 1239,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1251,
                  "startColumn": 25,
                  "endLine": 1251,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1256,
                  "startColumn": 25,
                  "endLine": 1256,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1263,
                  "startColumn": 21,
                  "endLine": 1263,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1265,
                  "startColumn": 29,
                  "endLine": 1265,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1290,
                  "startColumn": 21,
                  "endLine": 1290,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1293,
                  "startColumn": 13,
                  "endLine": 1293,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1305,
                  "startColumn": 25,
                  "endLine": 1305,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1310,
                  "startColumn": 25,
                  "endLine": 1310,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1314,
                  "startColumn": 17,
                  "endLine": 1314,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+1",
              "13": "+1",
              "14": "+2 (incl 1 for nesting)",
              "15": "+2 (incl 1 for nesting)",
              "16": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 36 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 899,
                  "startColumn": 24,
                  "endLine": 899,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 920,
                  "startColumn": 9,
                  "endLine": 920,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 923,
                  "startColumn": 13,
                  "endLine": 923,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 927,
                  "startColumn": 17,
                  "endLine": 927,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 940,
                  "startColumn": 13,
                  "endLine": 940,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 953,
                  "startColumn": 9,
                  "endLine": 953,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 960,
                  "startColumn": 13,
                  "endLine": 960,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 976,
                  "startColumn": 9,
                  "endLine": 976,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 984,
                  "startColumn": 17,
                  "endLine": 984,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 989,
                  "startColumn": 17,
                  "endLine": 989,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1001,
                  "startColumn": 13,
                  "endLine": 1001,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1005,
                  "startColumn": 17,
                  "endLine": 1005,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1010,
                  "startColumn": 17,
                  "endLine": 1010,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1013,
                  "startColumn": 21,
                  "endLine": 1013,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1038,
                  "startColumn": 29,
                  "endLine": 1038,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1039,
                  "startColumn": 33,
                  "endLine": 1039,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1044,
                  "startColumn": 29,
                  "endLine": 1044,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1054,
                  "startColumn": 9,
                  "endLine": 1054,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1055,
                  "startColumn": 13,
                  "endLine": 1055,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1057,
                  "startColumn": 13,
                  "endLine": 1057,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1071,
                  "startColumn": 13,
                  "endLine": 1071,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1083,
                  "startColumn": 9,
                  "endLine": 1083,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1095,
                  "startColumn": 9,
                  "endLine": 1095,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+3 (incl 2 for nesting)",
              "11": "+1",
              "12": "+4 (incl 3 for nesting)",
              "13": "+2 (incl 1 for nesting)",
              "14": "+1",
              "15": "+2 (incl 1 for nesting)",
              "16": "+1",
              "17": "+1",
              "18": "+2 (incl 1 for nesting)",
              "19": "+1",
              "2": "+3 (incl 2 for nesting)",
              "20": "+1",
              "21": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1264,
                  "startColumn": 25,
                  "endLine": 1274,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'innerShaperExpression'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 937,
                  "startColumn": 17,
                  "endLine": 938,
                  "endColumn": 133
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'innerShaperExpression'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 944,
                  "startColumn": 17,
                  "endLine": 945,
                  "endColumn": 119
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'outerShaperExpression'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 957,
                  "startColumn": 13,
                  "endLine": 957,
                  "endColumn": 135
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'innerShaperExpression'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 970,
                  "startColumn": 13,
                  "endLine": 971,
                  "endColumn": 129
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1106,
                  "startColumn": 19,
                  "endLine": 1108,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 21 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1528,
                  "startColumn": 25,
                  "endLine": 1528,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1536,
                  "startColumn": 17,
                  "endLine": 1536,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1535,
                  "startColumn": 38,
                  "endLine": 1535,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1539,
                  "startColumn": 9,
                  "endLine": 1539,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1540,
                  "startColumn": 13,
                  "endLine": 1540,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1545,
                  "startColumn": 9,
                  "endLine": 1545,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1550,
                  "startColumn": 9,
                  "endLine": 1550,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1551,
                  "startColumn": 13,
                  "endLine": 1551,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1558,
                  "startColumn": 17,
                  "endLine": 1558,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1571,
                  "startColumn": 9,
                  "endLine": 1571,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1574,
                  "startColumn": 33,
                  "endLine": 1574,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1576,
                  "startColumn": 13,
                  "endLine": 1576,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1580,
                  "startColumn": 50,
                  "endLine": 1580,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1585,
                  "startColumn": 50,
                  "endLine": 1585,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1590,
                  "startColumn": 21,
                  "endLine": 1590,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'methodCallExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryableMethodTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 916,
                  "startColumn": 76,
                  "endLine": 916,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'expression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryExpressionTranslatingExpressionVisitor.cs",
                "region": {
                  "startLine": 1623,
                  "startColumn": 55,
                  "endLine": 1623,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1181,
                  "startColumn": 47,
                  "endLine": 1181,
                  "endColumn": 90
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1187,
                  "startColumn": 9,
                  "endLine": 1187,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1192,
                  "startColumn": 13,
                  "endLine": 1192,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1194,
                  "startColumn": 17,
                  "endLine": 1194,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1197,
                  "startColumn": 21,
                  "endLine": 1197,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1209,
                  "startColumn": 13,
                  "endLine": 1209,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1211,
                  "startColumn": 17,
                  "endLine": 1211,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1217,
                  "startColumn": 17,
                  "endLine": 1217,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'expression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.Helper.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 55,
                  "endLine": 198,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'InMemoryQueryExpression.LeftJoin' method to no more than the 3 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.cs",
                "region": {
                  "startLine": 1232,
                  "startColumn": 41,
                  "endLine": 1232,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.Helper.cs",
                "region": {
                  "startLine": 187,
                  "startColumn": 23,
                  "endLine": 191,
                  "endColumn": 115
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'expression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.Helper.cs",
                "region": {
                  "startLine": 184,
                  "startColumn": 55,
                  "endLine": 184,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'extensionExpression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.Helper.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 65,
                  "endLine": 166,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'expression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.Helper.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 55,
                  "endLine": 145,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'expression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.Helper.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 55,
                  "endLine": 110,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'expression' to 'node' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.Helper.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 55,
                  "endLine": 78,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/src/EFCore.InMemory/Query/Internal/InMemoryQueryExpression.Helper.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 30,
                  "endLine": 58,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS0612": {
          "id": "CS0612",
          "shortDescription": "Type or member is obsolete",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0612)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "EF1001": {
          "id": "EF1001",
          "shortDescription": "Internal EF Core API usage.",
          "defaultLevel": "warning",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code’s readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S107": {
          "id": "S107",
          "shortDescription": "Methods should not have too many parameters",
          "fullDescription": "A long parameter list can indicate that a new structure should be created to wrap the numerous parameters or that the function is doing too many things.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-107",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1104": {
          "id": "S1104",
          "shortDescription": "Fields should not have public accessibility",
          "fullDescription": "Public fields in public classes do not respect the encapsulation principle and has three main disadvantages:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1104",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General exceptions should never be thrown",
          "fullDescription": "Throwing such general exceptions as Exception, SystemException, ApplicationException, IndexOutOfRangeException, NullReferenceException, OutOfMemoryException and ExecutionEngineException prevents calling methods from handling true, system-generated exceptions differently than application-generated errors.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1121": {
          "id": "S1121",
          "shortDescription": "Assignments should not be made from within sub-expressions",
          "fullDescription": "Assignments within sub-expressions are hard to spot and therefore make the code less readable. Ideally, sub-expressions should not have side-effects.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1121",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1135": {
          "id": "S1135",
          "shortDescription": "Track uses of \"TODO\" tags",
          "fullDescription": "TODO tags are commonly used to mark places where some more code is required, but which the developer wants to implement later.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1135",
          "properties": {
            "category": "Info Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1144": {
          "id": "S1144",
          "shortDescription": "Unused private types or members should be removed",
          "fullDescription": "private or internal types or private members that are never executed or referenced are dead code: unnecessary, inoperative code that should be removed. Cleaning out dead code decreases the size of the maintained codebase, making it easier to understand the program and preventing bugs from being introduced.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay",
              "Unnecessary"
            ]
          }
        },
        "S1168": {
          "id": "S1168",
          "shortDescription": "Empty arrays and collections should be returned instead of null",
          "fullDescription": "Returning null instead of an actual array, collection or map forces callers of the method to explicitly test for nullity, making them more complex and less readable.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1168",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1186": {
          "id": "S1186",
          "shortDescription": "Methods should not be empty",
          "fullDescription": "There are several reasons for a method not to have a method body:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1186",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Programmers should not comment out code as it bloats programs and reduces readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1450": {
          "id": "S1450",
          "shortDescription": "Private fields only used as local variables in methods should become local variables",
          "fullDescription": "When the value of a private field is always assigned to in a class' methods before being read, then it is not being used to store class information. Therefore, it should become a local variable in the relevant methods to prevent any misunderstanding.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1450",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1751": {
          "id": "S1751",
          "shortDescription": "Loops with at most one iteration should be refactored",
          "fullDescription": "A loop with at most one iteration is equivalent to the use of an if statement to conditionally execute one piece of code. If the initial intention of the author was really to conditionally execute one piece of code, an if statement should be used instead. If that was not the initial intention of the author, the body of the loop should be fixed to use the nested return, break or throw statements in a more appropriate way.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1751",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1854": {
          "id": "S1854",
          "shortDescription": "Unused assignments should be removed",
          "fullDescription": "A dead store happens when a local variable is assigned a value that is not read by any subsequent instruction. Calculating or retrieving a value only to then overwrite it or throw it away, could indicate a serious error in the code. Even if it’s not an error, it is at best a waste of resources. Therefore all calculated values should be used.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1854",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2344": {
          "id": "S2344",
          "shortDescription": "Enumeration type names should not have \"Flags\" or \"Enum\" suffixes",
          "fullDescription": "The information that an enumeration type is actually an enumeration or a set of flags should not be duplicated in its name.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2344",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2436": {
          "id": "S2436",
          "shortDescription": "Types and methods should not have too many generic parameters",
          "fullDescription": "A method or class with too many type parameters has likely aggregated too many responsibilities and should be split.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2436",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3267": {
          "id": "S3267",
          "shortDescription": "Loops should be simplified with \"LINQ\" expressions",
          "fullDescription": "When a loop is filtering, selecting or aggregating, those functions can be handled with a clearer, more concise LINQ expression instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3267",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3358": {
          "id": "S3358",
          "shortDescription": "Ternary operators should not be nested",
          "fullDescription": "Just because you can do something, doesn’t mean you should, and that’s the case with nested ternary operations. Nesting ternary operators results in the kind of code that may seem clear as day when you write it, but six months later will leave maintainers (or worse - future you) scratching their heads and cursing.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3358",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4136": {
          "id": "S4136",
          "shortDescription": "Method overloads should be grouped together",
          "fullDescription": "For clarity, all overloads of the same method should be grouped together. That lets both users and maintainers quickly understand all the current available options.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4136",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4144": {
          "id": "S4144",
          "shortDescription": "Methods should not have identical implementations",
          "fullDescription": "When two methods have the same implementation, either it was a mistake - something else was intended - or the duplication was intentional, but may be confusing to maintainers. In the latter case, one implementation should invoke the other.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S907": {
          "id": "S907",
          "shortDescription": "\"goto\" statement should not be used",
          "fullDescription": "goto is an unstructured control flow statement. It makes code less readable and maintainable. Structured control flow statements such as if, for, while, continue or break should be used instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-907",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S927": {
          "id": "S927",
          "shortDescription": "Parameter names should match base declaration and other partial definitions",
          "fullDescription": "The name of a parameter in an externally visible. This rule raises an issue when method override does not match the name of the parameter in the base declaration of the method, or the name of the parameter in the interface declaration of the method or the name of any other partial definition.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-927",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}