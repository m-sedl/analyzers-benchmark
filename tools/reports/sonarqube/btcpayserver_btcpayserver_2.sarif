{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.0.0.0",
        "fileVersion": "4.0.1-1.22181.2 (487283bc)",
        "semanticVersion": "4.0.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 13,
                  "endLine": 109,
                  "endColumn": 123
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 13,
                  "endLine": 119,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2211",
          "level": "note",
          "message": "Non-constant fields should not be visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/CurrencyNameTable.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 41,
                  "endLine": 24,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/CurrencyNameTable.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 41,
                  "endLine": 24,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'Instance' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/CurrencyNameTable.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 41,
                  "endLine": 24,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'GetNumberFormatInfo' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/CurrencyNameTable.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 33,
                  "endLine": 40,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/CurrencyNameTable.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 33,
                  "endLine": 59,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'HitBTCRateProvider' to match pascal case naming rules, consider using 'HitBtcRateProvider'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/HitBTCRateProvider.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 18,
                  "endLine": 13,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/BackgroundFetcherRateProvider.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 31,
                  "endLine": 60,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/BackgroundFetcherRateProvider.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 35,
                  "endLine": 61,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/BackgroundFetcherRateProvider.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 29,
                  "endLine": 62,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/BackgroundFetcherRateProvider.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 35,
                  "endLine": 63,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/BackgroundFetcherRateProvider.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 35,
                  "endLine": 64,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/BackgroundFetcherRateProvider.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 30,
                  "endLine": 65,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 900,
                  "startColumn": 23,
                  "endLine": 900,
                  "endColumn": 33
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 900,
                  "startColumn": 23,
                  "endLine": 900,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 992,
                  "startColumn": 25,
                  "endLine": 992,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'Enumerator' or mark the type as 'sealed'.",
              "1": "'Enumerator.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 900,
                  "startColumn": 23,
                  "endLine": 900,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private property 'Key'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 1081,
                  "startColumn": 13,
                  "endLine": 1087,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 1001,
                  "startColumn": 23,
                  "endLine": 1001,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_cancellationToken' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/HttpClientRequestMaker.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 44,
                  "endLine": 95,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'FetchRate' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateFetcher.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateFetcher.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 33,
                  "endLine": 67,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S3241",
          "level": "warning",
          "message": "Change return type to 'void'; not a single caller uses the returned value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 17,
                  "endLine": 148,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'capacity'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 55,
                  "endLine": 78,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_EvaluatedNode' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 572,
                  "startColumn": 20,
                  "endLine": 572,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "CreateFromExpression calls TryParse but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 500,
                  "startColumn": 13,
                  "endLine": 500,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'capacity'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 55,
                  "endLine": 106,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'capacity'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 205,
                  "startColumn": 55,
                  "endLine": 205,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'enumerable'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 49,
                  "endLine": 134,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'enumerable'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 310,
                  "startColumn": 49,
                  "endLine": 310,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'capacity'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 55,
                  "endLine": 275,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'enumerable'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 349,
                  "startColumn": 49,
                  "endLine": 349,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'capacity'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 428,
                  "startColumn": 55,
                  "endLine": 428,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'enumerable'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 539,
                  "startColumn": 49,
                  "endLine": 539,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'enumerable'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 580,
                  "startColumn": 49,
                  "endLine": 580,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'capacity'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 502,
                  "startColumn": 55,
                  "endLine": 502,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'key'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 616,
                  "startColumn": 49,
                  "endLine": 616,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'key'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 669,
                  "startColumn": 49,
                  "endLine": 669,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 23 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 442,
                  "startColumn": 40,
                  "endLine": 442,
                  "endColumn": 59
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 444,
                  "startColumn": 17,
                  "endLine": 444,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 445,
                  "startColumn": 55,
                  "endLine": 445,
                  "endColumn": 57
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 445,
                  "startColumn": 36,
                  "endLine": 445,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 448,
                  "startColumn": 87,
                  "endLine": 448,
                  "endColumn": 88
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 449,
                  "startColumn": 88,
                  "endLine": 449,
                  "endColumn": 89
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 450,
                  "startColumn": 21,
                  "endLine": 450,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 455,
                  "startColumn": 21,
                  "endLine": 455,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 458,
                  "startColumn": 25,
                  "endLine": 458,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 465,
                  "startColumn": 25,
                  "endLine": 465,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 469,
                  "startColumn": 29,
                  "endLine": 469,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 474,
                  "startColumn": 25,
                  "endLine": 474,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'key'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 642,
                  "startColumn": 49,
                  "endLine": 642,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'values'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 644,
                  "startColumn": 49,
                  "endLine": 644,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 734,
                  "startColumn": 53,
                  "endLine": 734,
                  "endColumn": 70
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 735,
                  "startColumn": 21,
                  "endLine": 735,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'key'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 697,
                  "startColumn": 49,
                  "endLine": 697,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 74,
                  "endLine": 66,
                  "endColumn": 118
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 74,
                  "endLine": 67,
                  "endColumn": 130
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 76,
                  "endLine": 68,
                  "endColumn": 126
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 72,
                  "endLine": 69,
                  "endColumn": 116
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 68,
                  "endLine": 70,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 78,
                  "endLine": 72,
                  "endColumn": 127
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 72,
                  "endLine": 73,
                  "endColumn": 968
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 70,
                  "endLine": 74,
                  "endColumn": 133
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 68,
                  "endLine": 75,
                  "endColumn": 120
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 74,
                  "endLine": 76,
                  "endColumn": 109
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 76,
                  "endLine": 77,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 72,
                  "endLine": 78,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 70,
                  "endLine": 79,
                  "endColumn": 119
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 84,
                  "endLine": 80,
                  "endColumn": 141
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 76,
                  "endLine": 82,
                  "endColumn": 3549
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 68,
                  "endLine": 83,
                  "endColumn": 124
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 83,
                  "endLine": 84,
                  "endColumn": 122
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 76,
                  "endLine": 86,
                  "endColumn": 110
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 70,
                  "endLine": 87,
                  "endColumn": 104
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'key'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 721,
                  "startColumn": 49,
                  "endLine": 721,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'key'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 768,
                  "startColumn": 49,
                  "endLine": 768,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'key'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 809,
                  "startColumn": 49,
                  "endLine": 809,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'key'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 854,
                  "startColumn": 53,
                  "endLine": 854,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'array'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 1044,
                  "startColumn": 53,
                  "endLine": 1044,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'arrayIndex'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 1046,
                  "startColumn": 59,
                  "endLine": 1046,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'arrayIndex'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 1048,
                  "startColumn": 59,
                  "endLine": 1048,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'arrayIndex'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 1050,
                  "startColumn": 98,
                  "endLine": 1050,
                  "endColumn": 110
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1116",
          "level": "warning",
          "message": "Remove this empty statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/MultiValueDictionary.cs",
                "region": {
                  "startLine": 921,
                  "startColumn": 17,
                  "endLine": 921,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loop should be simplified by calling Select(provider => provider.Key))",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 38,
                  "endLine": 123,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetDirectlySupportedExchanges' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 53,
                  "endLine": 64,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'Normalize' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateProviderFactory.cs",
                "region": {
                  "startLine": 181,
                  "startColumn": 24,
                  "endLine": 181,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loop should be simplified by calling Select(requiredExchange => requiredExchange.Exchange))",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateFetcher.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 46,
                  "endLine": 72,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1117",
          "level": "warning",
          "message": "Rename 'root' which hides the field with the same name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 17,
                  "endLine": 137,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loop should be simplified by calling Select(requiredExchange => requiredExchange.Exchange))",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateFetcher.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 50,
                  "endLine": 53,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'consolidatedRates'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateFetcher.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 17,
                  "endLine": 48,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetRuleValue' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Services/RateFetcher.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 40,
                  "endLine": 84,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 21,
                  "endLine": 76,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/RateRules.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 17,
                  "endLine": 72,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1905",
          "level": "warning",
          "message": "Remove this unnecessary cast to 'JArray'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/RipioExchangeProvider.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 27,
                  "endLine": 25,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/YadioRateProvider.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 55,
                  "endLine": 25,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/RipioExchangeProvider.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 55,
                  "endLine": 23,
                  "endColumn": 104
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/KrakenExchangeRateProvider.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 39,
                  "endLine": 82,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/KrakenExchangeRateProvider.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 13,
                  "endLine": 91,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/KrakenExchangeRateProvider.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 17,
                  "endLine": 94,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/KrakenExchangeRateProvider.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 25,
                  "endLine": 101,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/KrakenExchangeRateProvider.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 29,
                  "endLine": 104,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/KrakenExchangeRateProvider.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 25,
                  "endLine": 108,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/KrakenExchangeRateProvider.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 25,
                  "endLine": 112,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/KrakenExchangeRateProvider.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 25,
                  "endLine": 114,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/KrakenExchangeRateProvider.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 21,
                  "endLine": 117,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'ParsePair' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/RipioExchangeProvider.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 26,
                  "endLine": 33,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/HitBTCRateProvider.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 55,
                  "endLine": 23,
                  "endColumn": 99
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "GetRatesAsync calls TryParse but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/HitBTCRateProvider.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 21,
                  "endLine": 29,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'CreateBidAsk' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/HitBTCRateProvider.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 24,
                  "endLine": 38,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'tickers'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/KrakenExchangeRateProvider.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 17,
                  "endLine": 90,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1116",
          "level": "warning",
          "message": "Remove this empty statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/KrakenExchangeRateProvider.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 13,
                  "endLine": 167,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this unused method parameter 'baseUrl'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/KrakenExchangeRateProvider.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 67,
                  "endLine": 163,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "True"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this unused method parameter 'requestMethod'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/KrakenExchangeRateProvider.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 133,
                  "endLine": 163,
                  "endColumn": 160
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "True"
            }
          }
        },
        {
          "ruleId": "S3875",
          "level": "warning",
          "message": "Remove this overload of 'operator =='.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/CurrencyPair.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 37,
                  "endLine": 79,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1834",
          "level": "note",
          "message": "Use 'StringBuilder.Append(char)' instead of 'StringBuilder.Append(string)' when the input is a constant unit string",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/KrakenExchangeRateProvider.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 27,
                  "endLine": 171,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/ArgoneumRateProvider.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 55,
                  "endLine": 21,
                  "endColumn": 93
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2486",
          "level": "warning",
          "message": "Handle the exception or explain in a comment why it can be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/CurrencyNameTable.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 25,
                  "endLine": 80,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1905",
          "level": "warning",
          "message": "Remove this unnecessary cast to 'JObject'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/CryptoMarketExchangeRateProvider.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 27,
                  "endLine": 33,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/CurrencyNameTable.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 31,
                  "endLine": 80,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1116",
          "level": "warning",
          "message": "Remove this empty statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/CoinGeckoRateProvider.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 17,
                  "endLine": 31,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/CryptoMarketExchangeRateProvider.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 55,
                  "endLine": 30,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/CoinGeckoRateProvider.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 42,
                  "endLine": 34,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/BitbankRateProvider.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 23,
                  "endLine": 28,
                  "endColumn": 153
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/BitbankRateProvider.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 55,
                  "endLine": 21,
                  "endColumn": 90
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/BitflyerRateProvider.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 23,
                  "endLine": 24,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/BitflyerRateProvider.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 55,
                  "endLine": 20,
                  "endColumn": 90
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/BudaRateProvider.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 51,
                  "endLine": 19,
                  "endColumn": 103
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S907",
          "level": "warning",
          "message": "Remove this use of 'goto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/CoinGeckoRateProvider.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 21,
                  "endLine": 65,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/ByllsRateProvider.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 55,
                  "endLine": 19,
                  "endColumn": 118
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/BitpayRateProvider.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 55,
                  "endLine": 20,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/CurrencyNameTable.cs",
                "region": {
                  "startLine": 154,
                  "startColumn": 17,
                  "endLine": 154,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/CurrencyNameTable.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 13,
                  "endLine": 152,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2486",
          "level": "warning",
          "message": "Handle the exception or explain in a comment why it can be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/BackgroundFetcherRateProvider.cs",
                "region": {
                  "startLine": 190,
                  "startColumn": 17,
                  "endLine": 190,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/Providers/BackgroundFetcherRateProvider.cs",
                "region": {
                  "startLine": 190,
                  "startColumn": 23,
                  "endLine": 190,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'AddCurrency' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/btcpayserver/BTCPayServer.Rating/CurrencyNameTable.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 22,
                  "endLine": 92,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1507": {
          "id": "CA1507",
          "shortDescription": "Use nameof to express symbol names",
          "fullDescription": "Using nameof helps keep your code valid when refactoring.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1507",
          "properties": {
            "category": "Maintainability",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1806": {
          "id": "CA1806",
          "shortDescription": "Do not ignore method results",
          "fullDescription": "A new object is created but never used; or a method that creates and returns a new string is called and the new string is never used; or a COM or P/Invoke method returns an HRESULT or error code that is never used.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1806",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1834": {
          "id": "CA1834",
          "shortDescription": "Consider using 'StringBuilder.Append(char)' when applicable",
          "fullDescription": "'StringBuilder.Append(char)' is more efficient than 'StringBuilder.Append(string)' when the string is a single character. When calling 'Append' with a constant, prefer using a constant char rather than a constant string containing one character.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1834",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2211": {
          "id": "CA2211",
          "shortDescription": "Non-constant fields should not be visible",
          "fullDescription": "Static fields that are neither constants nor read-only are not thread-safe. Access to such a field must be carefully controlled and requires advanced programming techniques to synchronize access to the class object.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2211",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks whether or not type names are using PascalCase. To reduce noise, two consecutive upper case characters are allowed unless they form the whole type name. So, MyXClass is compliant, but XC on its own is not.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code’s readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1075": {
          "id": "S1075",
          "shortDescription": "URIs should not be hardcoded",
          "fullDescription": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, …​etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1075",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S108": {
          "id": "S108",
          "shortDescription": "Nested blocks of code should not be left empty",
          "fullDescription": "Most of the time a block of code is empty when a piece of code is really missing. So such empty block must be either filled or removed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-108",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1104": {
          "id": "S1104",
          "shortDescription": "Fields should not have public accessibility",
          "fullDescription": "Public fields in public classes do not respect the encapsulation principle and has three main disadvantages:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1104",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1116": {
          "id": "S1116",
          "shortDescription": "Empty statements should be removed",
          "fullDescription": "Empty statements, i.e. ;, are usually introduced by mistake, for example because:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1116",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1117": {
          "id": "S1117",
          "shortDescription": "Local variables should not shadow class fields",
          "fullDescription": "Overriding or shadowing a variable declared in an outer scope can strongly impact the readability, and therefore the maintainability, of a piece of code. Further, it could lead maintainers to introduce bugs because they think they’re using one variable but are really using another.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1117",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General exceptions should never be thrown",
          "fullDescription": "Throwing such general exceptions as Exception, SystemException, ApplicationException, IndexOutOfRangeException, NullReferenceException, OutOfMemoryException and ExecutionEngineException prevents calling methods from handling true, system-generated exceptions differently than application-generated errors.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1144": {
          "id": "S1144",
          "shortDescription": "Unused private types or members should be removed",
          "fullDescription": "private or internal types or private members that are never executed or referenced are dead code: unnecessary, inoperative code that should be removed. Cleaning out dead code decreases the size of the maintained codebase, making it easier to understand the program and preventing bugs from being introduced.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay",
              "Unnecessary"
            ]
          }
        },
        "S1172": {
          "id": "S1172",
          "shortDescription": "Unused method parameters should be removed",
          "fullDescription": "Unused parameters are misleading. Whatever the values passed to such parameters, the behavior will be the same.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1172",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Programmers should not comment out code as it bloats programs and reduces readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1905": {
          "id": "S1905",
          "shortDescription": "Redundant casts should not be used",
          "fullDescription": "Unnecessary casting expressions make the code harder to read and understand.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1905",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2223": {
          "id": "S2223",
          "shortDescription": "Non-constant static fields should not be visible",
          "fullDescription": "A static field that is neither constant nor read-only is not thread-safe. Correctly accessing these fields from different threads needs synchronization with locks. Improper synchronization may lead to unexpected results, thus publicly visible static fields are best suited for storing non-changing data shared by many consumers. To enforce this intent, these fields should be marked readonly or converted to constants.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2223",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2486": {
          "id": "S2486",
          "shortDescription": "Generic exceptions should not be ignored",
          "fullDescription": "When exceptions occur, it is usually a bad idea to simply ignore them. Instead, it is better to handle them properly, or at least to log them.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2486",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3241": {
          "id": "S3241",
          "shortDescription": "Methods should not return values that are never used",
          "fullDescription": "Private methods are clearly intended for use only within their own scope. When such methods return values that are never used by any of their callers, then clearly there is no need to actually make the return, and it should be removed in the interests of efficiency and clarity.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3241",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3260": {
          "id": "S3260",
          "shortDescription": "Non-derived \"private\" classes and records should be \"sealed\"",
          "fullDescription": "private classes and records aren’t visible outside of their assemblies anyway, so if they’re not extended inside the assemblies, they should be made explicitly non-extensible with the addition of the sealed keyword.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3260",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3267": {
          "id": "S3267",
          "shortDescription": "Loops should be simplified with \"LINQ\" expressions",
          "fullDescription": "When a loop is filtering, selecting or aggregating, those functions can be handled with a clearer, more concise LINQ expression instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3267",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3875": {
          "id": "S3875",
          "shortDescription": "\"operator==\" should not be overloaded on reference types",
          "fullDescription": "The use of == to compare two objects is expected to do a reference comparison. That is, it is expected to return true if and only if they are the same object instance. Overloading the operator to do anything else will inevitably lead to the introduction of bugs by callers. On the other hand, overloading it to do exactly that is pointless; that’s what == does by default.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3875",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4136": {
          "id": "S4136",
          "shortDescription": "Method overloads should be grouped together",
          "fullDescription": "For clarity, all overloads of the same method should be grouped together. That lets both users and maintainers quickly understand all the current available options.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4136",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4487": {
          "id": "S4487",
          "shortDescription": "Unread \"private\" fields should be removed",
          "fullDescription": "Private fields only used to store values without reading them later is a case of dead store. So changing the value of such field is useless and most probably indicates a serious error in the code.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4487",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay",
              "Unnecessary"
            ]
          }
        },
        "S907": {
          "id": "S907",
          "shortDescription": "\"goto\" statement should not be used",
          "fullDescription": "goto is an unstructured control flow statement. It makes code less readable and maintainable. Structured control flow statements such as if, for, while, continue or break should be used instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-907",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}