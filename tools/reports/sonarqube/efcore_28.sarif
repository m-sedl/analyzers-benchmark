{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.4.0.0",
        "fileVersion": "4.4.0-2.22426.8 (7886fad5)",
        "semanticVersion": "4.4.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Initialization/InitializationTests.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 28,
                  "endLine": 56,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'GetValue' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/ParamsSummaryColumn.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 23,
                  "endLine": 17,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/ParamsSummaryColumn.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 23,
                  "endLine": 25,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'DTO' to match pascal case naming rules, consider using 'Dto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/QueryCompilationTests.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 23,
                  "endLine": 100,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/QueryCompilationTests.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 23,
                  "endLine": 100,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/QueryCompilationTests.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 23,
                  "endLine": 111,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/QueryCompilationTests.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 23,
                  "endLine": 111,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/QueryCompilationTests.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 33,
                  "endLine": 145,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/QueryCompilationTests.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 20,
                  "endLine": 145,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'NonCachingMemoryCache' or mark the type as 'sealed'.",
              "1": "'NonCachingMemoryCache.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'.",
              "2": "'NonCachingMemoryCache.Dispose()' should not be 'virtual' or 'abstract'."
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/QueryCompilationTests.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 27,
                  "endLine": 124,
                  "endColumn": 36
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/QueryCompilationTests.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 27,
                  "endLine": 124,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/QueryCompilationTests.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 37,
                  "endLine": 126,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/QueryCompilationTests.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 24,
                  "endLine": 126,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'FakeEntry' or mark the type as 'sealed'.",
              "1": "'FakeEntry.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'.",
              "2": "'FakeEntry.Dispose()' should not be 'virtual' or 'abstract'."
            }
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_serviceProvider' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Models/Orders/OrdersFixtureBase.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'benchmark' to 'benchmarkCase' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/ParamsSummaryColumn.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 62,
                  "endLine": 16,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'benchmark' to 'benchmarkCase' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/ParamsSummaryColumn.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 63,
                  "endLine": 17,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'benchmark' to 'benchmarkCase' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/ParamsSummaryColumn.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 63,
                  "endLine": 25,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/ChangeTracker/FixupTests.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 17,
                  "endLine": 126,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1643",
          "level": "warning",
          "message": "Use a StringBuilder instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/UpdatePipeline/SimpleUpdatePipelineTests.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 21,
                  "endLine": 123,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1643",
          "level": "warning",
          "message": "Use a StringBuilder instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/UpdatePipeline/SimpleUpdatePipelineTests.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 21,
                  "endLine": 89,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/ChangeTracker/FixupTests.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 17,
                  "endLine": 92,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Initialization/InitializationTests.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 17,
                  "endLine": 26,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'model'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Initialization/InitializationTests.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 17,
                  "endLine": 69,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/FuncletizationTests.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 17,
                  "endLine": 58,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/FuncletizationTests.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 17,
                  "endLine": 45,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/FuncletizationTests.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 17,
                  "endLine": 68,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/NavigationsQueryTests.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 21,
                  "endLine": 58,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/RawSqlQueryTests.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 17,
                  "endLine": 80,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/RawSqlQueryTests.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 17,
                  "endLine": 102,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/RawSqlQueryTests.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 17,
                  "endLine": 126,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/SimpleQueryTests.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 17,
                  "endLine": 59,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/SimpleQueryTests.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 17,
                  "endLine": 76,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/SimpleQueryTests.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 17,
                  "endLine": 93,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/QueryCompilationTests.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 17,
                  "endLine": 78,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/QueryCompilationTests.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 17,
                  "endLine": 87,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/SimpleQueryTests.cs",
                "region": {
                  "startLine": 127,
                  "startColumn": 17,
                  "endLine": 127,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/SimpleQueryTests.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 17,
                  "endLine": 146,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/SimpleQueryTests.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 17,
                  "endLine": 163,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/SimpleQueryTests.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 17,
                  "endLine": 189,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/QueryCompilationTests.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 17,
                  "endLine": 96,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/SimpleQueryTests.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 17,
                  "endLine": 216,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2201",
          "level": "warning",
          "message": "Use the return value of method 'ToList'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/efcore/benchmark/EFCore.Benchmarks/Query/RawSqlQueryTests.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 17,
                  "endLine": 148,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks whether or not type names are using PascalCase. To reduce noise, two consecutive upper case characters are allowed unless they form the whole type name. So, MyXClass is compliant, but XC on its own is not.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S108": {
          "id": "S108",
          "shortDescription": "Nested blocks of code should not be left empty",
          "fullDescription": "Most of the time a block of code is empty when a piece of code is really missing. So such empty block must be either filled or removed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-108",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1135": {
          "id": "S1135",
          "shortDescription": "Track uses of \"TODO\" tags",
          "fullDescription": "TODO tags are commonly used to mark places where some more code is required, but which the developer wants to implement later.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1135",
          "properties": {
            "category": "Info Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1643": {
          "id": "S1643",
          "shortDescription": "Strings should not be concatenated using '+' in a loop",
          "fullDescription": "StringBuilder is more efficient than string concatenation, especially when the operator is repeated over and over as in loops.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1643",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2201": {
          "id": "S2201",
          "shortDescription": "Return values from functions without side effects should not be ignored",
          "fullDescription": "When the call to a function doesn’t have any side effects, what is the point of making the call if the results are ignored? In such case, either the function call is useless and should be dropped or the source code doesn’t behave as expected.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2201",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3260": {
          "id": "S3260",
          "shortDescription": "Non-derived \"private\" classes and records should be \"sealed\"",
          "fullDescription": "private classes and records aren’t visible outside of their assemblies anyway, so if they’re not extended inside the assemblies, they should be made explicitly non-extensible with the addition of the sealed keyword.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3260",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4136": {
          "id": "S4136",
          "shortDescription": "Method overloads should be grouped together",
          "fullDescription": "For clarity, all overloads of the same method should be grouped together. That lets both users and maintainers quickly understand all the current available options.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4136",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4487": {
          "id": "S4487",
          "shortDescription": "Unread \"private\" fields should be removed",
          "fullDescription": "Private fields only used to store values without reading them later is a case of dead store. So changing the value of such field is useless and most probably indicates a serious error in the code.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4487",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay",
              "Unnecessary"
            ]
          }
        },
        "S927": {
          "id": "S927",
          "shortDescription": "Parameter names should match base declaration and other partial definitions",
          "fullDescription": "The name of a parameter in an externally visible. This rule raises an issue when method override does not match the name of the parameter in the base declaration of the method, or the name of the parameter in the interface declaration of the method or the name of any other partial definition.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-927",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}