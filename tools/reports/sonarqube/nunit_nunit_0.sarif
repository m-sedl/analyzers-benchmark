{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.0.0.0",
        "fileVersion": "4.0.1-1.22181.2 (487283bc)",
        "semanticVersion": "4.0.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'Thread.Resume()' is obsolete: 'Thread.Resume has been deprecated.  Please use other classes in System.Threading, such as Monitor, Mutex, Event, and Semaphore, to synchronize Threads or protect resources.  http://go.microsoft.com/fwlink/?linkid=14202'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ThreadUtility.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 17,
                  "endLine": 112,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'TestResult' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Exceptions/MultipleAssertException.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 19,
                  "endLine": 37,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 244,
                  "startColumn": 16,
                  "endLine": 244,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 17,
                  "endLine": 245,
                  "endColumn": 134
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RepeatAttribute.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 4,
                  "endLine": 5,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RepeatAttribute.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 24,
                  "endLine": 83,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureAttribute.cs",
                "region": {
                  "startLine": 196,
                  "startColumn": 17,
                  "endLine": 196,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/AndConstraint.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 9,
                  "endLine": 11,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 251,
                  "startColumn": 20,
                  "endLine": 251,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Comparers/DirectoriesComparer.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 16,
                  "endLine": 26,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Comparers/StructuralComparer.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 20,
                  "endLine": 58,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ContainsConstraint.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 8,
                  "endLine": 6,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 12,
                  "endLine": 167,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/EmptyDirectoryConstraint.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 9,
                  "endLine": 41,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/EmptyDirectoryConstraint.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 12,
                  "endLine": 32,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/EqualConstraint.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 12,
                  "endLine": 50,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/EqualConstraintResult.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 55,
                  "endLine": 30,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 400,
                  "startColumn": 25,
                  "endLine": 400,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/NotConstraint.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 12,
                  "endLine": 31,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/PropertyConstraint.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 16,
                  "endLine": 36,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/PropertyConstraint.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 20,
                  "endLine": 57,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ThrowsNothingConstraint.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 12,
                  "endLine": 14,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2346",
          "level": "warning",
          "message": "Rename 'Default' to 'None'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/ActionTargets.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 9,
                  "endLine": 16,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Tolerance.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 16,
                  "endLine": 186,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/IFixtureBuilder.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 8,
                  "endLine": 11,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/ISimpleTestBuilder.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 36,
                  "endLine": 5,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/ITestBuilder.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 36,
                  "endLine": 6,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private method 'RunAsync'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/FrameworkController.cs",
                "region": {
                  "startLine": 249,
                  "startColumn": 9,
                  "endLine": 254,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'RunTests' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/FrameworkController.cs",
                "region": {
                  "startLine": 203,
                  "startColumn": 23,
                  "endLine": 203,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/FrameworkController.cs",
                "region": {
                  "startLine": 237,
                  "startColumn": 23,
                  "endLine": 237,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'RunAsync' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/FrameworkController.cs",
                "region": {
                  "startLine": 249,
                  "startColumn": 22,
                  "endLine": 249,
                  "endColumn": 30
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/FrameworkController.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 22,
                  "endLine": 299,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultSuiteBuilder.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 16,
                  "endLine": 41,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NamespaceTreeBuilder.cs",
                "region": {
                  "startLine": 149,
                  "startColumn": 20,
                  "endLine": 149,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 12,
                  "endLine": 50,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 16,
                  "endLine": 167,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Commands/DelegatingTestCommand.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 22,
                  "endLine": 17,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Commands/MaxTimeCommand.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 20,
                  "endLine": 27,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Commands/SkipCommand.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 9,
                  "endLine": 10,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/CultureDetector.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 13,
                  "endLine": 63,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/CultureDetector.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 13,
                  "endLine": 75,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/CompositeWorkItem.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 9,
                  "endLine": 22,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventPump.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 13,
                  "endLine": 147,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventPump.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 25,
                  "endLine": 158,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventPump.cs",
                "region": {
                  "startLine": 175,
                  "startColumn": 17,
                  "endLine": 175,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventQueue.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 1,
                  "endLine": 145,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/ParallelWorkItemDispatcher.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 16,
                  "endLine": 65,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/TestWorker.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 24,
                  "endLine": 105,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/TextCapture.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 1,
                  "endLine": 5,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/TextMessageWriter.cs",
                "region": {
                  "startLine": 196,
                  "startColumn": 13,
                  "endLine": 196,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Assume.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 18,
                  "endLine": 19,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/TextMessageWriter.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 13,
                  "endLine": 280,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'That' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Assume.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 28,
                  "endLine": 62,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Assume.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 28,
                  "endLine": 102,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 328,
                  "startColumn": 13,
                  "endLine": 328,
                  "endColumn": 139
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 323,
                  "startColumn": 16,
                  "endLine": 323,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Logging/InternalTrace.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 9,
                  "endLine": 20,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Logging/InternalTrace.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 9,
                  "endLine": 21,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Logging/Logger.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 9,
                  "endLine": 58,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/PropertyBag.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 24,
                  "endLine": 140,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Randomizer.cs",
                "region": {
                  "startLine": 644,
                  "startColumn": 13,
                  "endLine": 644,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Results/TestResult.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 9,
                  "endLine": 51,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/IncludeExcludeAttribute.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 24,
                  "endLine": 37,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/IncludeExcludeAttribute.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 24,
                  "endLine": 47,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/IncludeExcludeAttribute.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 24,
                  "endLine": 56,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestExecutionContext.cs",
                "region": {
                  "startLine": 325,
                  "startColumn": 12,
                  "endLine": 325,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestExecutionContext.cs",
                "region": {
                  "startLine": 427,
                  "startColumn": 16,
                  "endLine": 427,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?s$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/ParallelScope.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 17,
                  "endLine": 13,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2346",
          "level": "warning",
          "message": "Rename 'Default' to 'None'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/ParallelScope.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 9,
                  "endLine": 19,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 12,
                  "endLine": 16,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Warn.cs",
                "region": {
                  "startLine": 297,
                  "startColumn": 9,
                  "endLine": 297,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field 'attrFound' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/AttributeConstraint.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 27,
                  "endLine": 16,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "DOC201",
          "level": "note",
          "message": "Item should have description",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 10,
                  "endLine": 20,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "DOC201",
          "level": "note",
          "message": "Item should have description",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 10,
                  "endLine": 21,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "DOC201",
          "level": "note",
          "message": "Item should have description",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 10,
                  "endLine": 22,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "DOC101",
          "level": "note",
          "message": "Use child blocks consistently",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 9,
                  "endLine": 17,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1939",
          "level": "warning",
          "message": "'CombiningStrategyAttribute' implements 'ITestBuilder' so 'ITestBuilder' can be removed from the inheritance list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TheoryAttribute.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 62,
                  "endLine": 34,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "redundantIndex": "1"
            }
          }
        },
        {
          "ruleId": "S4035",
          "level": "warning",
          "message": "Seal class 'AssertionResult' or implement 'IEqualityComparer<T>' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/AssertionResult.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4035",
          "level": "warning",
          "message": "Seal class 'ResultState' or implement 'IEqualityComparer<T>' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/ResultState.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 18,
                  "endLine": 18,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Warn.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 18,
                  "endLine": 17,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'Unless' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Warn.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 28,
                  "endLine": 61,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Warn.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 28,
                  "endLine": 101,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S3604",
          "level": "warning",
          "message": "Remove the member initializer, all constructors set an initial value for the member.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionTally.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 50,
                  "endLine": 60,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 427,
                  "startColumn": 18,
                  "endLine": 427,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 427,
                  "startColumn": 12,
                  "endLine": 427,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 427,
                  "startColumn": 12,
                  "endLine": 427,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'AttributeDictionary' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'AttributeDictionary(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3246",
          "level": "warning",
          "message": "Add the 'out' keyword to parameter 'TActual' to make it 'covariant'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Constraint.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 49,
                  "endLine": 15,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ExceptionHelper.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 18,
                  "endLine": 16,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'Matches' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ConstraintExpression.cs",
                "region": {
                  "startLine": 287,
                  "startColumn": 27,
                  "endLine": 287,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ConstraintExpression.cs",
                "region": {
                  "startLine": 795,
                  "startColumn": 32,
                  "endLine": 795,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S3241",
          "level": "warning",
          "message": "Change return type to 'void'; not a single caller uses the returned value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 24,
                  "endLine": 96,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3241",
          "level": "warning",
          "message": "Change return type to 'void'; not a single caller uses the returned value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 24,
                  "endLine": 124,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 364,
                  "startColumn": 23,
                  "endLine": 364,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventPump.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 18,
                  "endLine": 37,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventPump.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 18,
                  "endLine": 37,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventPump.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 21,
                  "endLine": 100,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'EventPump' or mark the type as 'sealed'.",
              "1": "'EventPump.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'For' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/EqualityAdapter.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 39,
                  "endLine": 40,
                  "endColumn": 42
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/EqualityAdapter.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 39,
                  "endLine": 70,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/EqualityAdapter.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 39,
                  "endLine": 97,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/EqualityAdapter.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 39,
                  "endLine": 161,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/EqualityAdapter.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 39,
                  "endLine": 189,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/EqualityAdapter.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 39,
                  "endLine": 220,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload",
              "1": "Non-adjacent overload",
              "2": "Non-adjacent overload",
              "3": "Non-adjacent overload",
              "4": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_timeout' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Commands/TimeoutCommand.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 30,
                  "endLine": 22,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3218",
          "level": "warning",
          "message": "Rename this method to not shadow the outer class' member with the same name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/CSharpPatternBasedAwaitAdapter.AwaitShapeInfo.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 43,
                  "endLine": 27,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field '_runnerThread' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItemDispatcher.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 24,
                  "endLine": 20,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/TextMessageWriter.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 29,
                  "endLine": 72,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field '_running' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/TestWorker.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 22,
                  "endLine": 21,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'DisplayDifferences' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/TextMessageWriter.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 30,
                  "endLine": 107,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/TextMessageWriter.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 30,
                  "endLine": 137,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'WriteActualLine' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/TextMessageWriter.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 22,
                  "endLine": 275,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/TextMessageWriter.cs",
                "region": {
                  "startLine": 292,
                  "startColumn": 22,
                  "endLine": 292,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItem.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 27,
                  "endLine": 26,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItem.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 27,
                  "endLine": 26,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItem.cs",
                "region": {
                  "startLine": 290,
                  "startColumn": 21,
                  "endLine": 290,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'WorkItem' or mark the type as 'sealed'.",
              "1": "'WorkItem.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/NUnitEqualityComparer.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 21,
                  "endLine": 90,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/NUnitEqualityComparer.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 21,
                  "endLine": 100,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/NUnitEqualityComparer.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 25,
                  "endLine": 200,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/NUnitEqualityComparer.cs",
                "region": {
                  "startLine": 210,
                  "startColumn": 27,
                  "endLine": 210,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/NUnitEqualityComparer.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 25,
                  "endLine": 215,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/NUnitEqualityComparer.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 25,
                  "endLine": 220,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/NUnitEqualityComparer.cs",
                "region": {
                  "startLine": 205,
                  "startColumn": 27,
                  "endLine": 205,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemBuilder.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 23,
                  "endLine": 88,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field 'fullname' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Logging/Logger.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 33,
                  "endLine": 17,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Operators/ConstraintOperator.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 23,
                  "endLine": 51,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Operators/ConstraintOperator.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 23,
                  "endLine": 42,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/NUnitCallContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 20,
                  "endLine": 15,
                  "endColumn": 36
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/NUnitCallContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 20,
                  "endLine": 15,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/NUnitCallContext.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 21,
                  "endLine": 30,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'NUnitCallContext' or mark the type as 'sealed'.",
              "1": "'NUnitCallContext.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S2953",
          "level": "warning",
          "message": "Either implement 'IDisposable.Dispose', or totally rename this method to prevent confusion.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/On.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 35,
                  "endLine": 17,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3218",
          "level": "warning",
          "message": "Rename this method to not shadow the outer class' member with the same name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/On.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private field 'dwMajorVersion'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/OSPlatform.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 13,
                  "endLine": 192,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private field 'dwMinorVersion'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/OSPlatform.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 13,
                  "endLine": 193,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private field 'dwBuildNumber'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/OSPlatform.cs",
                "region": {
                  "startLine": 194,
                  "startColumn": 13,
                  "endLine": 194,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private field 'dwPlatformId'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/OSPlatform.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 13,
                  "endLine": 195,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private field 'wServicePackMajor'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/OSPlatform.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 13,
                  "endLine": 198,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private field 'wServicePackMinor'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/OSPlatform.cs",
                "region": {
                  "startLine": 199,
                  "startColumn": 13,
                  "endLine": 199,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private field 'wSuiteMask'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/OSPlatform.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 13,
                  "endLine": 200,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private field 'Reserved'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/OSPlatform.cs",
                "region": {
                  "startLine": 203,
                  "startColumn": 13,
                  "endLine": 203,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private class field 'dwOSVersionInfoSize' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/OSPlatform.cs",
                "region": {
                  "startLine": 191,
                  "startColumn": 25,
                  "endLine": 191,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1117",
          "level": "warning",
          "message": "Rename 'currentPlatform' which hides the field with the same name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/OSPlatform.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 24,
                  "endLine": 23,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename struct 'OSVERSIONINFOEX' to match pascal case naming rules, consider using 'Osversioninfoex'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/OSPlatform.cs",
                "region": {
                  "startLine": 188,
                  "startColumn": 16,
                  "endLine": 188,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 23,
                  "endLine": 51,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/PropertyNames.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 18,
                  "endLine": 11,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 82,
                  "endLine": 31,
                  "endColumn": 104
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/PreFilter.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 23,
                  "endLine": 117,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3241",
          "level": "warning",
          "message": "Change return type to 'void'; not a single caller uses the returned value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Results/TestResult.cs",
                "region": {
                  "startLine": 623,
                  "startColumn": 17,
                  "endLine": 623,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3241",
          "level": "warning",
          "message": "Change return type to 'void'; not a single caller uses the returned value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Results/TestResult.cs",
                "region": {
                  "startLine": 636,
                  "startColumn": 17,
                  "endLine": 636,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3241",
          "level": "warning",
          "message": "Change return type to 'void'; not a single caller uses the returned value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Results/TestResult.cs",
                "region": {
                  "startLine": 641,
                  "startColumn": 17,
                  "endLine": 641,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3241",
          "level": "warning",
          "message": "Change return type to 'void'; not a single caller uses the returned value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Results/TestResult.cs",
                "region": {
                  "startLine": 681,
                  "startColumn": 17,
                  "endLine": 681,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/StackFilter.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 35,
                  "endLine": 24,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'DefaultFilter' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/StackFilter.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 35,
                  "endLine": 24,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/StringUtil.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 18,
                  "endLine": 11,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private constructor 'GenericAdapter'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TaskAwaitAdapter.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 13,
                  "endLine": 64,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field 'propValue' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/PropertyConstraint.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 24,
                  "endLine": 16,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1939",
          "level": "warning",
          "message": "'TestParameters' implements 'IApplyToTest' so 'IApplyToTest' can be removed from the inheritance list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestCaseParameters.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 68,
                  "endLine": 15,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "redundantIndex": "2"
            }
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestExecutionContext.cs",
                "region": {
                  "startLine": 261,
                  "startColumn": 32,
                  "endLine": 261,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestExecutionContext.cs",
                "region": {
                  "startLine": 495,
                  "startColumn": 22,
                  "endLine": 495,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestExecutionContext.cs",
                "region": {
                  "startLine": 495,
                  "startColumn": 22,
                  "endLine": 495,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestExecutionContext.cs",
                "region": {
                  "startLine": 512,
                  "startColumn": 25,
                  "endLine": 512,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'IsolatedContext' or mark the type as 'sealed'.",
              "1": "'IsolatedContext.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestFilter.cs",
                "region": {
                  "startLine": 199,
                  "startColumn": 23,
                  "endLine": 199,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 61,
                  "endLine": 109,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this field to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 56,
                  "endLine": 35,
                  "endColumn": 72
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 13,
                  "endLine": 45,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 38,
                  "endLine": 52,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 17,
                  "endLine": 55,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 21,
                  "endLine": 57,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 25,
                  "endLine": 59,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 13,
                  "endLine": 65,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 17,
                  "endLine": 67,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 13,
                  "endLine": 78,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 13,
                  "endLine": 83,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 13,
                  "endLine": 95,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 33,
                  "endLine": 95,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 13,
                  "endLine": 106,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 17,
                  "endLine": 110,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+2 (incl 1 for nesting)",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S5766",
          "level": "warning",
          "message": "Make sure not performing data validation after deserialization is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 16,
                  "endLine": 128,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 19,
                  "endLine": 60,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 23,
                  "endLine": 60,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3973",
          "level": "warning",
          "message": "Use curly braces or indentation to denote the code conditionally executed by this 'else'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 13,
                  "endLine": 83,
                  "endColumn": 17
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 13,
                  "endLine": 89,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1117",
          "level": "warning",
          "message": "Rename 'currentFramework' which hides the field with the same name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 17,
                  "endLine": 101,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 30,
                  "endLine": 23,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'DefaultTestNamePattern' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 30,
                  "endLine": 23,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 172,
                  "startColumn": 96,
                  "endLine": 172,
                  "endColumn": 118
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field 'caughtException' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ThrowsNothingConstraint.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 27,
                  "endLine": 15,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field 'serializer' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/XmlSerializableConstraint.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 31,
                  "endLine": 15,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 18,
                  "endLine": 18,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'SetUpFixture' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/SetUpFixture.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 16,
                  "endLine": 20,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/SetUpFixture.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 16,
                  "endLine": 45,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S1210",
          "level": "warning",
          "message": "When implementing IComparable or IComparable<T>, you should also override Equals, ==, !=, <, <=, >, and >=.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/Test.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 27,
                  "endLine": 17,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field '_method'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/TestMethod.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 41,
                  "endLine": 61,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this setter so that it actually refers to the field '_method'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/TestMethod.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 62,
                  "endLine": 61,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/TestContext.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 34,
                  "endLine": 58,
                  "endColumn": 93
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'Error' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/TestContext.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 34,
                  "endLine": 58,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'DefaultWorkDirectory' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/TestContext.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 33,
                  "endLine": 75,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'AddFormatter' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/TestContext.cs",
                "region": {
                  "startLine": 250,
                  "startColumn": 28,
                  "endLine": 250,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/TestContext.cs",
                "region": {
                  "startLine": 285,
                  "startColumn": 28,
                  "endLine": 285,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'assemblyNameOrPath' to 'assemblyName' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/NUnitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 34,
                  "endLine": 109,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'assemblyNameOrPath' to 'assemblyName' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 35,
                  "endLine": 77,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/NUnitTestAssemblyRunner.cs",
                "region": {
                  "startLine": 360,
                  "startColumn": 19,
                  "endLine": 362,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 27 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 27,
                  "endLine": 97,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 17,
                  "endLine": 103,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 17,
                  "endLine": 106,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 17,
                  "endLine": 108,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 17,
                  "endLine": 111,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 125,
                  "endLine": 111,
                  "endColumn": 127
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 21,
                  "endLine": 114,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 17,
                  "endLine": 117,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 21,
                  "endLine": 122,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 25,
                  "endLine": 125,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 127,
                  "startColumn": 29,
                  "endLine": 127,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 33,
                  "endLine": 131,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 44,
                  "endLine": 131,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 17,
                  "endLine": 144,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 21,
                  "endLine": 146,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 154,
                  "startColumn": 13,
                  "endLine": 154,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+5 (incl 4 for nesting)",
              "11": "+1",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "14": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S2696",
          "level": "warning",
          "message": "Make the enclosing instance method 'static' or remove this set on the 'static' field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 21,
                  "endLine": 104,
                  "endColumn": 63
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 30,
                  "endLine": 23,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2696",
          "level": "warning",
          "message": "Make the enclosing instance method 'static' or remove this set on the 'static' field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 21,
                  "endLine": 107,
                  "endColumn": 55
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/TestContext.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 33,
                  "endLine": 75,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 205,
                  "startColumn": 35,
                  "endLine": 205,
                  "endColumn": 54
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 206,
                  "startColumn": 21,
                  "endLine": 206,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
                "region": {
                  "startLine": 241,
                  "startColumn": 13,
                  "endLine": 241,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'report' to 'eventArgument' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/FrameworkController.cs",
                "region": {
                  "startLine": 223,
                  "startColumn": 51,
                  "endLine": 223,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this unused method parameter 'handler'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/FrameworkController.cs",
                "region": {
                  "startLine": 304,
                  "startColumn": 30,
                  "endLine": 304,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "True"
            }
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/CultureAttribute.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 40,
                  "endLine": 109,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/CultureAttribute.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 21,
                  "endLine": 110,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/IncludeExcludeAttribute.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 9,
                  "endLine": 21,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/IncludeExcludeAttribute.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 9,
                  "endLine": 27,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/NUnitAttribute.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 9,
                  "endLine": 17,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/ParallelizableAttribute.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 17,
                  "endLine": 65,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/ParallelizableAttribute.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/OSPlatformTranslator.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 43,
                  "endLine": 21,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/OSPlatformTranslator.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 13,
                  "endLine": 26,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/OSPlatformTranslator.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 17,
                  "endLine": 28,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/OSPlatformTranslator.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 17,
                  "endLine": 49,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/OSPlatformTranslator.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 30,
                  "endLine": 49,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/OSPlatformTranslator.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 17,
                  "endLine": 58,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/OSPlatformTranslator.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 50,
                  "endLine": 58,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/OSPlatformTranslator.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 17,
                  "endLine": 66,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/OSPlatformTranslator.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 17,
                  "endLine": 70,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/OSPlatformTranslator.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 13,
                  "endLine": 76,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/OSPlatformTranslator.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 36,
                  "endLine": 76,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/OSPlatformTranslator.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 51,
                  "endLine": 80,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/OSPlatformTranslator.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 51,
                  "endLine": 81,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/OSPlatformTranslator.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 43,
                  "endLine": 21,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+2 (incl 1 for nesting)",
              "11": "+2 (incl 1 for nesting)",
              "12": "+1 (recursion)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 28,
                  "endLine": 135,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 13,
                  "endLine": 145,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 17,
                  "endLine": 147,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 149,
                  "startColumn": 17,
                  "endLine": 149,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 17,
                  "endLine": 151,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 17,
                  "endLine": 153,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 17,
                  "endLine": 155,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 157,
                  "startColumn": 17,
                  "endLine": 157,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 17,
                  "endLine": 159,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 17,
                  "endLine": 161,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 17,
                  "endLine": 163,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 17,
                  "endLine": 165,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 17,
                  "endLine": 167,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 169,
                  "startColumn": 17,
                  "endLine": 169,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 17,
                  "endLine": 171,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 17,
                  "endLine": 173,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 13,
                  "endLine": 176,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 51,
                  "endLine": 176,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+1",
              "16": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/SetUpFixtureAttribute.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 42,
                  "endLine": 70,
                  "endColumn": 59
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/SetUpFixtureAttribute.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 21,
                  "endLine": 71,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3217",
          "level": "warning",
          "message": "Either change the type of 'parms' to 'ITestCaseData' or iterate on a generic collection of type 'TestCaseParameters'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 22,
                  "endLine": 122,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Assert.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 23,
                  "endLine": 82,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Assume.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 23,
                  "endLine": 280,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Assert.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 23,
                  "endLine": 193,
                  "endColumn": 100
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 38 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 44,
                  "endLine": 145,
                  "endColumn": 59
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 17,
                  "endLine": 153,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 21,
                  "endLine": 155,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 29,
                  "endLine": 165,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 168,
                  "startColumn": 25,
                  "endLine": 168,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 175,
                  "startColumn": 29,
                  "endLine": 175,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 33,
                  "endLine": 183,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 52,
                  "endLine": 183,
                  "endColumn": 54
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 37,
                  "endLine": 186,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 191,
                  "startColumn": 29,
                  "endLine": 191,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 199,
                  "startColumn": 25,
                  "endLine": 199,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 29,
                  "endLine": 200,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 206,
                  "startColumn": 17,
                  "endLine": 206,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 212,
                  "startColumn": 13,
                  "endLine": 212,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+4 (incl 3 for nesting)",
              "11": "+1",
              "12": "+1",
              "2": "+3 (incl 2 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+5 (incl 4 for nesting)",
              "6": "+1",
              "7": "+6 (incl 5 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Assert.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 23,
                  "endLine": 238,
                  "endColumn": 106
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 230,
                  "startColumn": 43,
                  "endLine": 230,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 30 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 221,
                  "startColumn": 30,
                  "endLine": 221,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 13,
                  "endLine": 226,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 232,
                  "startColumn": 13,
                  "endLine": 232,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 237,
                  "startColumn": 17,
                  "endLine": 237,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 25,
                  "endLine": 239,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 49,
                  "endLine": 239,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 244,
                  "startColumn": 17,
                  "endLine": 244,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 246,
                  "startColumn": 25,
                  "endLine": 246,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 246,
                  "startColumn": 49,
                  "endLine": 246,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 251,
                  "startColumn": 17,
                  "endLine": 251,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 253,
                  "startColumn": 25,
                  "endLine": 253,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 254,
                  "startColumn": 29,
                  "endLine": 254,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 253,
                  "startColumn": 49,
                  "endLine": 253,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+4 (incl 3 for nesting)",
              "11": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 28,
                  "endLine": 240,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 246,
                  "startColumn": 28,
                  "endLine": 247,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 253,
                  "startColumn": 28,
                  "endLine": 255,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 259,
                  "startColumn": 13,
                  "endLine": 259,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4158",
          "level": "warning",
          "message": "Remove this call, the collection is known to be empty here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
                "region": {
                  "startLine": 208,
                  "startColumn": 21,
                  "endLine": 208,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 44 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 291,
                  "startColumn": 36,
                  "endLine": 291,
                  "endColumn": 60
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 304,
                  "startColumn": 17,
                  "endLine": 304,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 305,
                  "startColumn": 21,
                  "endLine": 305,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 311,
                  "startColumn": 17,
                  "endLine": 311,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 311,
                  "startColumn": 36,
                  "endLine": 311,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 317,
                  "startColumn": 21,
                  "endLine": 317,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 317,
                  "startColumn": 51,
                  "endLine": 317,
                  "endColumn": 53
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 319,
                  "startColumn": 25,
                  "endLine": 319,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 321,
                  "startColumn": 29,
                  "endLine": 321,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 328,
                  "startColumn": 25,
                  "endLine": 328,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 331,
                  "startColumn": 29,
                  "endLine": 331,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 331,
                  "startColumn": 60,
                  "endLine": 331,
                  "endColumn": 62
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 336,
                  "startColumn": 29,
                  "endLine": 336,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 347,
                  "startColumn": 17,
                  "endLine": 347,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 353,
                  "startColumn": 21,
                  "endLine": 353,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 355,
                  "startColumn": 25,
                  "endLine": 355,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 357,
                  "startColumn": 25,
                  "endLine": 357,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 359,
                  "startColumn": 29,
                  "endLine": 359,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 361,
                  "startColumn": 29,
                  "endLine": 361,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 369,
                  "startColumn": 17,
                  "endLine": 369,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 369,
                  "startColumn": 37,
                  "endLine": 369,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 371,
                  "startColumn": 21,
                  "endLine": 371,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 371,
                  "startColumn": 42,
                  "endLine": 371,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 372,
                  "startColumn": 43,
                  "endLine": 372,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 378,
                  "startColumn": 17,
                  "endLine": 378,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 381,
                  "startColumn": 13,
                  "endLine": 381,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+4 (incl 3 for nesting)",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "14": "+3 (incl 2 for nesting)",
              "15": "+1",
              "16": "+4 (incl 3 for nesting)",
              "17": "+1",
              "18": "+1",
              "19": "+1",
              "2": "+1",
              "20": "+2 (incl 1 for nesting)",
              "21": "+1",
              "22": "+1",
              "23": "+1",
              "24": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+1",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 371,
                  "startColumn": 21,
                  "endLine": 371,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseAttribute.cs",
                "region": {
                  "startLine": 369,
                  "startColumn": 17,
                  "endLine": 369,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 322,
                  "startColumn": 25,
                  "endLine": 322,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 320,
                  "startColumn": 26,
                  "endLine": 320,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 243,
                  "startColumn": 41,
                  "endLine": 243,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 249,
                  "startColumn": 52,
                  "endLine": 249,
                  "endColumn": 54
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 250,
                  "startColumn": 49,
                  "endLine": 250,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 253,
                  "startColumn": 17,
                  "endLine": 253,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 255,
                  "startColumn": 21,
                  "endLine": 255,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 259,
                  "startColumn": 25,
                  "endLine": 259,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 262,
                  "startColumn": 33,
                  "endLine": 262,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 270,
                  "startColumn": 21,
                  "endLine": 270,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/RandomAttribute.cs",
                "region": {
                  "startLine": 272,
                  "startColumn": 29,
                  "endLine": 272,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S2234",
          "level": "warning",
          "message": "Parameters to 'Write' have the same names but not the same order as the method arguments.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/TestContext.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 97,
                  "endLine": 186,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2234",
          "level": "warning",
          "message": "Parameters to 'WriteLine' have the same names but not the same order as the method arguments.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/TestContext.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 101,
                  "endLine": 239,
                  "endColumn": 110
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 31 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 31,
                  "endLine": 26,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 13,
                  "endLine": 30,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 13,
                  "endLine": 34,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 59,
                  "endLine": 34,
                  "endColumn": 61
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 78,
                  "endLine": 34,
                  "endColumn": 80
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 13,
                  "endLine": 38,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 17,
                  "endLine": 40,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 21,
                  "endLine": 49,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 21,
                  "endLine": 55,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 25,
                  "endLine": 57,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 25,
                  "endLine": 58,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 21,
                  "endLine": 61,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 25,
                  "endLine": 63,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 25,
                  "endLine": 64,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+4 (incl 3 for nesting)",
              "11": "+1",
              "12": "+4 (incl 3 for nesting)",
              "13": "+4 (incl 3 for nesting)",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S4456",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the iterator.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 31,
                  "endLine": 26,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ValueGenerator.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 23,
                  "endLine": 36,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'attributeType' to 'attrType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeWrapper.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 49,
                  "endLine": 163,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 30,
                  "endLine": 29,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 13,
                  "endLine": 31,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 13,
                  "endLine": 34,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 17,
                  "endLine": 38,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 17,
                  "endLine": 41,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 17,
                  "endLine": 49,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 21,
                  "endLine": 51,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 21,
                  "endLine": 57,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 25,
                  "endLine": 64,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 29,
                  "endLine": 66,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 21,
                  "endLine": 73,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 17,
                  "endLine": 82,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 30,
                  "endLine": 29,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1 (recursion)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+5 (incl 4 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 23 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 30,
                  "endLine": 92,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 13,
                  "endLine": 95,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 33,
                  "endLine": 95,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 13,
                  "endLine": 101,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 17,
                  "endLine": 103,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 47,
                  "endLine": 106,
                  "endColumn": 48
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 17,
                  "endLine": 108,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 35,
                  "endLine": 108,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 21,
                  "endLine": 110,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 46,
                  "endLine": 112,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 17,
                  "endLine": 114,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 115,
                  "startColumn": 17,
                  "endLine": 115,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 17,
                  "endLine": 116,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 17,
                  "endLine": 117,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 21,
                  "endLine": 119,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+3 (incl 2 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 51 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 28,
                  "endLine": 135,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 13,
                  "endLine": 137,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 13,
                  "endLine": 138,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 13,
                  "endLine": 139,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 141,
                  "startColumn": 13,
                  "endLine": 141,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 141,
                  "startColumn": 45,
                  "endLine": 141,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 17,
                  "endLine": 143,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 17,
                  "endLine": 144,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 17,
                  "endLine": 146,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 17,
                  "endLine": 147,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 149,
                  "startColumn": 17,
                  "endLine": 149,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 17,
                  "endLine": 150,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 17,
                  "endLine": 152,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 17,
                  "endLine": 153,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 17,
                  "endLine": 155,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 17,
                  "endLine": 156,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 17,
                  "endLine": 158,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 17,
                  "endLine": 159,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 17,
                  "endLine": 161,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 17,
                  "endLine": 162,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 17,
                  "endLine": 164,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 17,
                  "endLine": 165,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 17,
                  "endLine": 167,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 168,
                  "startColumn": 17,
                  "endLine": 168,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 17,
                  "endLine": 170,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 17,
                  "endLine": 171,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 17,
                  "endLine": 173,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 17,
                  "endLine": 174,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 177,
                  "startColumn": 13,
                  "endLine": 177,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 13,
                  "endLine": 178,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+2 (incl 1 for nesting)",
              "12": "+2 (incl 1 for nesting)",
              "13": "+2 (incl 1 for nesting)",
              "14": "+2 (incl 1 for nesting)",
              "15": "+2 (incl 1 for nesting)",
              "16": "+2 (incl 1 for nesting)",
              "17": "+2 (incl 1 for nesting)",
              "18": "+2 (incl 1 for nesting)",
              "19": "+2 (incl 1 for nesting)",
              "2": "+1",
              "20": "+2 (incl 1 for nesting)",
              "21": "+2 (incl 1 for nesting)",
              "22": "+2 (incl 1 for nesting)",
              "23": "+2 (incl 1 for nesting)",
              "24": "+2 (incl 1 for nesting)",
              "25": "+2 (incl 1 for nesting)",
              "26": "+2 (incl 1 for nesting)",
              "27": "+1",
              "28": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+2 (incl 1 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 212,
                  "startColumn": 28,
                  "endLine": 212,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 13,
                  "endLine": 216,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 17,
                  "endLine": 220,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 21,
                  "endLine": 226,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 47,
                  "endLine": 226,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 228,
                  "startColumn": 25,
                  "endLine": 228,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 228,
                  "startColumn": 58,
                  "endLine": 228,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 229,
                  "startColumn": 50,
                  "endLine": 229,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 230,
                  "startColumn": 25,
                  "endLine": 230,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 232,
                  "startColumn": 54,
                  "endLine": 232,
                  "endColumn": 56
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 233,
                  "startColumn": 29,
                  "endLine": 233,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 59,
                  "endLine": 235,
                  "endColumn": 61
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 21,
                  "endLine": 238,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+3 (incl 2 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 23 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 254,
                  "startColumn": 28,
                  "endLine": 254,
                  "endColumn": 53
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 258,
                  "startColumn": 13,
                  "endLine": 258,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 261,
                  "startColumn": 17,
                  "endLine": 261,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 265,
                  "startColumn": 17,
                  "endLine": 265,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 267,
                  "startColumn": 21,
                  "endLine": 267,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 269,
                  "startColumn": 25,
                  "endLine": 269,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 269,
                  "startColumn": 66,
                  "endLine": 269,
                  "endColumn": 68
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 271,
                  "startColumn": 29,
                  "endLine": 271,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 282,
                  "startColumn": 21,
                  "endLine": 282,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 289,
                  "startColumn": 17,
                  "endLine": 289,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+5 (incl 4 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 271,
                  "startColumn": 29,
                  "endLine": 271,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TypeHelper.cs",
                "region": {
                  "startLine": 269,
                  "startColumn": 25,
                  "endLine": 269,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1848",
          "level": "warning",
          "message": "Either remove this useless object instantiation of class 'DelayClosure' or use it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ThreadUtility.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 13,
                  "endLine": 35,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3889",
          "level": "warning",
          "message": "Refactor the code to remove this use of 'Thread.Resume'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ThreadUtility.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 24,
                  "endLine": 112,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ThreadUtility.cs",
                "region": {
                  "startLine": 233,
                  "startColumn": 13,
                  "endLine": 233,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3973",
          "level": "warning",
          "message": "Use curly braces or indentation to denote the code conditionally executed by this 'foreach'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/TestSuite.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 13,
                  "endLine": 90,
                  "endColumn": 58
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/TestSuite.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 13,
                  "endLine": 91,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/TestSuite.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 35,
                  "endLine": 94,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/TestSuite.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 20,
                  "endLine": 96,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1905",
          "level": "warning",
          "message": "Remove this unnecessary cast to 'TNode'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 190,
                  "startColumn": 28,
                  "endLine": 190,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3217",
          "level": "warning",
          "message": "Either change the type of 'test' to 'ITest' or iterate on a generic collection of type 'Test'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/TestSuite.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 26,
                  "endLine": 125,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3217",
          "level": "warning",
          "message": "Either change the type of 'test' to 'ITest' or iterate on a generic collection of type 'Test'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/TestSuite.cs",
                "region": {
                  "startLine": 191,
                  "startColumn": 26,
                  "endLine": 191,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3217",
          "level": "warning",
          "message": "Either change the type of 'test' to 'ITest' or iterate on a generic collection of type 'Test'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/TestSuite.cs",
                "region": {
                  "startLine": 261,
                  "startColumn": 26,
                  "endLine": 261,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 270,
                  "startColumn": 45,
                  "endLine": 270,
                  "endColumn": 60
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 271,
                  "startColumn": 25,
                  "endLine": 271,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 27 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 32,
                  "endLine": 280,
                  "endColumn": 58
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 282,
                  "startColumn": 13,
                  "endLine": 282,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 285,
                  "startColumn": 13,
                  "endLine": 285,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 288,
                  "startColumn": 17,
                  "endLine": 288,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 288,
                  "startColumn": 29,
                  "endLine": 288,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 296,
                  "startColumn": 17,
                  "endLine": 296,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 296,
                  "startColumn": 50,
                  "endLine": 296,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 296,
                  "startColumn": 37,
                  "endLine": 296,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 32,
                  "endLine": 299,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 300,
                  "startColumn": 33,
                  "endLine": 300,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 301,
                  "startColumn": 33,
                  "endLine": 301,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 302,
                  "startColumn": 35,
                  "endLine": 302,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 310,
                  "startColumn": 17,
                  "endLine": 310,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 310,
                  "startColumn": 50,
                  "endLine": 310,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 314,
                  "startColumn": 21,
                  "endLine": 314,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 321,
                  "startColumn": 17,
                  "endLine": 321,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 327,
                  "startColumn": 21,
                  "endLine": 327,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 330,
                  "startColumn": 25,
                  "endLine": 330,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 337,
                  "startColumn": 13,
                  "endLine": 337,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
                "region": {
                  "startLine": 339,
                  "startColumn": 13,
                  "endLine": 339,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+3 (incl 2 for nesting)",
              "14": "+1",
              "15": "+3 (incl 2 for nesting)",
              "16": "+4 (incl 3 for nesting)",
              "17": "+1",
              "18": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3060",
          "level": "warning",
          "message": "Offload the code that's conditional on this type test to the appropriate subclass and remove the condition.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/Test.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 32,
                  "endLine": 216,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestParameters.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 9,
                  "endLine": 21,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestParameters.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 9,
                  "endLine": 31,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestParameters.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 9,
                  "endLine": 41,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestParameters.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 9,
                  "endLine": 53,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 27 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 43,
                  "endLine": 79,
                  "endColumn": 60
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 13,
                  "endLine": 87,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 17,
                  "endLine": 90,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 17,
                  "endLine": 94,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 17,
                  "endLine": 97,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 17,
                  "endLine": 102,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 25,
                  "endLine": 143,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 47,
                  "endLine": 143,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 79,
                  "endLine": 143,
                  "endColumn": 81
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 29,
                  "endLine": 145,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 100,
                  "endLine": 145,
                  "endColumn": 102
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 33,
                  "endLine": 147,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 149,
                  "startColumn": 33,
                  "endLine": 149,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 33,
                  "endLine": 151,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 13,
                  "endLine": 167,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+5 (incl 4 for nesting)",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+4 (incl 3 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'arglist' to 'args' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 513,
                  "startColumn": 93,
                  "endLine": 513,
                  "endColumn": 100
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 29,
                  "endLine": 145,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 25,
                  "endLine": 143,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Exceptions/ResultStateException.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 9,
                  "endLine": 19,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Exceptions/ResultStateException.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 9,
                  "endLine": 26,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 93 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 37,
                  "endLine": 200,
                  "endColumn": 53
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 203,
                  "startColumn": 21,
                  "endLine": 203,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 206,
                  "startColumn": 17,
                  "endLine": 206,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 208,
                  "startColumn": 21,
                  "endLine": 208,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 210,
                  "startColumn": 21,
                  "endLine": 210,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 218,
                  "startColumn": 25,
                  "endLine": 218,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 29,
                  "endLine": 220,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 29,
                  "endLine": 225,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 230,
                  "startColumn": 29,
                  "endLine": 230,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 237,
                  "startColumn": 25,
                  "endLine": 237,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 244,
                  "startColumn": 17,
                  "endLine": 244,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 246,
                  "startColumn": 21,
                  "endLine": 246,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 248,
                  "startColumn": 21,
                  "endLine": 248,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 250,
                  "startColumn": 21,
                  "endLine": 250,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 252,
                  "startColumn": 21,
                  "endLine": 252,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 254,
                  "startColumn": 21,
                  "endLine": 254,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 256,
                  "startColumn": 21,
                  "endLine": 256,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 258,
                  "startColumn": 25,
                  "endLine": 258,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 263,
                  "startColumn": 17,
                  "endLine": 263,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 265,
                  "startColumn": 21,
                  "endLine": 265,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 267,
                  "startColumn": 21,
                  "endLine": 267,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 269,
                  "startColumn": 21,
                  "endLine": 269,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 271,
                  "startColumn": 21,
                  "endLine": 271,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 273,
                  "startColumn": 21,
                  "endLine": 273,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 21,
                  "endLine": 275,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 277,
                  "startColumn": 25,
                  "endLine": 277,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 282,
                  "startColumn": 17,
                  "endLine": 282,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 284,
                  "startColumn": 21,
                  "endLine": 284,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 286,
                  "startColumn": 21,
                  "endLine": 286,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 288,
                  "startColumn": 21,
                  "endLine": 288,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 291,
                  "startColumn": 17,
                  "endLine": 291,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 293,
                  "startColumn": 21,
                  "endLine": 293,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 295,
                  "startColumn": 21,
                  "endLine": 295,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 297,
                  "startColumn": 21,
                  "endLine": 297,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 300,
                  "startColumn": 17,
                  "endLine": 300,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 302,
                  "startColumn": 21,
                  "endLine": 302,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 304,
                  "startColumn": 21,
                  "endLine": 304,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 306,
                  "startColumn": 21,
                  "endLine": 306,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 309,
                  "startColumn": 17,
                  "endLine": 309,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 311,
                  "startColumn": 50,
                  "endLine": 311,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 312,
                  "startColumn": 41,
                  "endLine": 312,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 316,
                  "startColumn": 21,
                  "endLine": 316,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 319,
                  "startColumn": 25,
                  "endLine": 319,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 319,
                  "startColumn": 37,
                  "endLine": 319,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 328,
                  "startColumn": 17,
                  "endLine": 328,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 332,
                  "startColumn": 17,
                  "endLine": 332,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 334,
                  "startColumn": 21,
                  "endLine": 334,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 336,
                  "startColumn": 21,
                  "endLine": 336,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 339,
                  "startColumn": 17,
                  "endLine": 339,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 341,
                  "startColumn": 21,
                  "endLine": 341,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 343,
                  "startColumn": 21,
                  "endLine": 343,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 346,
                  "startColumn": 17,
                  "endLine": 346,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 348,
                  "startColumn": 21,
                  "endLine": 348,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 350,
                  "startColumn": 21,
                  "endLine": 350,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 353,
                  "startColumn": 17,
                  "endLine": 353,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 355,
                  "startColumn": 21,
                  "endLine": 355,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 357,
                  "startColumn": 21,
                  "endLine": 357,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 360,
                  "startColumn": 17,
                  "endLine": 360,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 362,
                  "startColumn": 21,
                  "endLine": 362,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 364,
                  "startColumn": 21,
                  "endLine": 364,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 367,
                  "startColumn": 17,
                  "endLine": 367,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 369,
                  "startColumn": 21,
                  "endLine": 369,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 371,
                  "startColumn": 21,
                  "endLine": 371,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 37,
                  "endLine": 200,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+1",
              "16": "+3 (incl 2 for nesting)",
              "17": "+1",
              "18": "+2 (incl 1 for nesting)",
              "19": "+1",
              "2": "+2 (incl 1 for nesting)",
              "20": "+1",
              "21": "+1",
              "22": "+1",
              "23": "+1",
              "24": "+3 (incl 2 for nesting)",
              "25": "+1",
              "26": "+2 (incl 1 for nesting)",
              "27": "+1",
              "28": "+1",
              "29": "+1",
              "3": "+1",
              "30": "+2 (incl 1 for nesting)",
              "31": "+1",
              "32": "+1",
              "33": "+1",
              "34": "+2 (incl 1 for nesting)",
              "35": "+1",
              "36": "+1",
              "37": "+1",
              "38": "+1",
              "39": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "40": "+2 (incl 1 for nesting)",
              "41": "+3 (incl 2 for nesting)",
              "42": "+1",
              "43": "+1",
              "44": "+1",
              "45": "+2 (incl 1 for nesting)",
              "46": "+1",
              "47": "+1",
              "48": "+2 (incl 1 for nesting)",
              "49": "+1",
              "5": "+4 (incl 3 for nesting)",
              "50": "+1",
              "51": "+2 (incl 1 for nesting)",
              "52": "+1",
              "53": "+1",
              "54": "+2 (incl 1 for nesting)",
              "55": "+1",
              "56": "+1",
              "57": "+2 (incl 1 for nesting)",
              "58": "+1",
              "59": "+1",
              "6": "+4 (incl 3 for nesting)",
              "60": "+2 (incl 1 for nesting)",
              "61": "+1",
              "62": "+1 (recursion)",
              "7": "+1",
              "8": "+3 (incl 2 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'actual' to 'collection' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 53,
                  "endLine": 31,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestListener.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 21,
                  "endLine": 20,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestListener.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 21,
                  "endLine": 26,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestListener.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 21,
                  "endLine": 32,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestListener.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 21,
                  "endLine": 38,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3060",
          "level": "warning",
          "message": "Offload the code that's conditional on this type test to the appropriate subclass and remove the condition.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestFilter.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 32,
                  "endLine": 26,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1116",
          "level": "warning",
          "message": "Remove this empty statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/CombinatorialStrategy.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 72,
                  "endLine": 46,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1264",
          "level": "warning",
          "message": "Replace this 'for' loop with a 'while' loop.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/CombinatorialStrategy.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 13,
                  "endLine": 27,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Commands/AfterTestCommand.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 9,
                  "endLine": 18,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loop should be simplified by calling Select(memberAndOwningType => memberAndOwningType.Item1))",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 49,
                  "endLine": 50,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 132,
                  "startColumn": 46,
                  "endLine": 132,
                  "endColumn": 62
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 17,
                  "endLine": 140,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 21,
                  "endLine": 142,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 25,
                  "endLine": 146,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 149,
                  "startColumn": 29,
                  "endLine": 149,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 157,
                  "startColumn": 25,
                  "endLine": 157,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 29,
                  "endLine": 158,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 13,
                  "endLine": 165,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'parentSuite' to 'suite' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultTestCaseBuilder.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 60,
                  "endLine": 72,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1264",
          "level": "warning",
          "message": "Replace this 'for' loop with a 'while' loop.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/SequentialStrategy.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 13,
                  "endLine": 30,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3217",
          "level": "warning",
          "message": "Either change the type of 'fixture' to 'Test' or iterate on a generic collection of type 'TestSuite'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NamespaceTreeBuilder.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 22,
                  "endLine": 62,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestFilter.cs",
                "region": {
                  "startLine": 127,
                  "startColumn": 19,
                  "endLine": 129,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestFilter.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 23,
                  "endLine": 121,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 27 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultSuiteBuilder.cs",
                "region": {
                  "startLine": 127,
                  "startColumn": 35,
                  "endLine": 127,
                  "endColumn": 62
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultSuiteBuilder.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 13,
                  "endLine": 131,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultSuiteBuilder.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 37,
                  "endLine": 131,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultSuiteBuilder.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 17,
                  "endLine": 135,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultSuiteBuilder.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 21,
                  "endLine": 139,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultSuiteBuilder.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 21,
                  "endLine": 144,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultSuiteBuilder.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 25,
                  "endLine": 145,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultSuiteBuilder.cs",
                "region": {
                  "startLine": 149,
                  "startColumn": 21,
                  "endLine": 149,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultSuiteBuilder.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 21,
                  "endLine": 153,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultSuiteBuilder.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 21,
                  "endLine": 159,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultSuiteBuilder.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 25,
                  "endLine": 160,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'xmlNode' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestFilter.cs",
                "region": {
                  "startLine": 181,
                  "startColumn": 19,
                  "endLine": 181,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultSuiteBuilder.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 42,
                  "endLine": 144,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultSuiteBuilder.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 29,
                  "endLine": 145,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultSuiteBuilder.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 42,
                  "endLine": 159,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultSuiteBuilder.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 29,
                  "endLine": 160,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/CultureDetector.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 40,
                  "endLine": 44,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/CultureDetector.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 22,
                  "endLine": 45,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/ValueSourceAttribute.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 39,
                  "endLine": 85,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 36,
                  "endLine": 57,
                  "endColumn": 50
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 25,
                  "endLine": 59,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Commands/BeforeAndAfterTestCommand.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 9,
                  "endLine": 20,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'parentSuite' to 'suite' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DefaultTestCaseBuilder.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 57,
                  "endLine": 83,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1121",
          "level": "warning",
          "message": "Extract the assignment of 'instance' from this expression.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/ProviderCache.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 55,
                  "endLine": 22,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 43 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 26,
                  "endLine": 75,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 13,
                  "endLine": 81,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 17,
                  "endLine": 84,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 38,
                  "endLine": 84,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 21,
                  "endLine": 87,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 25,
                  "endLine": 88,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 25,
                  "endLine": 89,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 21,
                  "endLine": 92,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 21,
                  "endLine": 95,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 25,
                  "endLine": 98,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 17,
                  "endLine": 105,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 41,
                  "endLine": 105,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 13,
                  "endLine": 116,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 13,
                  "endLine": 120,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 17,
                  "endLine": 123,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 21,
                  "endLine": 126,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 17,
                  "endLine": 129,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 44,
                  "endLine": 129,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 13,
                  "endLine": 135,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 21,
                  "endLine": 139,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 51,
                  "endLine": 138,
                  "endColumn": 53
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 13,
                  "endLine": 143,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 13,
                  "endLine": 146,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 17,
                  "endLine": 147,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 13,
                  "endLine": 150,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "14": "+3 (incl 2 for nesting)",
              "15": "+1",
              "16": "+1",
              "17": "+1",
              "18": "+2 (incl 1 for nesting)",
              "19": "+1",
              "2": "+1",
              "20": "+1",
              "21": "+1",
              "22": "+2 (incl 1 for nesting)",
              "23": "+1",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 64 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 28,
                  "endLine": 69,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 13,
                  "endLine": 76,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 17,
                  "endLine": 81,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 21,
                  "endLine": 84,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 72,
                  "endLine": 84,
                  "endColumn": 74
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 25,
                  "endLine": 86,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 25,
                  "endLine": 88,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 17,
                  "endLine": 92,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 21,
                  "endLine": 94,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 25,
                  "endLine": 101,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 55,
                  "endLine": 103,
                  "endColumn": 56
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 29,
                  "endLine": 104,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 25,
                  "endLine": 107,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 59,
                  "endLine": 110,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 29,
                  "endLine": 111,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 25,
                  "endLine": 114,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 56,
                  "endLine": 116,
                  "endColumn": 57
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 29,
                  "endLine": 117,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 13,
                  "endLine": 124,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 127,
                  "startColumn": 17,
                  "endLine": 127,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 132,
                  "startColumn": 17,
                  "endLine": 132,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 17,
                  "endLine": 137,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 21,
                  "endLine": 139,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 17,
                  "endLine": 145,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 42,
                  "endLine": 145,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+5 (incl 4 for nesting)",
              "11": "+1",
              "12": "+5 (incl 4 for nesting)",
              "13": "+5 (incl 4 for nesting)",
              "14": "+1",
              "15": "+5 (incl 4 for nesting)",
              "16": "+5 (incl 4 for nesting)",
              "17": "+1",
              "18": "+2 (incl 1 for nesting)",
              "19": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "20": "+1",
              "21": "+3 (incl 2 for nesting)",
              "22": "+2 (incl 1 for nesting)",
              "23": "+1",
              "3": "+1",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+5 (incl 4 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 21,
                  "endLine": 94,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 22,
                  "endLine": 92,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Commands/BeforeTestCommand.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 9,
                  "endLine": 18,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/DatapointProvider.cs",
                "region": {
                  "startLine": 175,
                  "startColumn": 74,
                  "endLine": 175,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 40 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 29,
                  "endLine": 124,
                  "endColumn": 53
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 13,
                  "endLine": 126,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 13,
                  "endLine": 129,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 13,
                  "endLine": 135,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 17,
                  "endLine": 138,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 13,
                  "endLine": 147,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 154,
                  "startColumn": 17,
                  "endLine": 154,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 157,
                  "startColumn": 17,
                  "endLine": 157,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 13,
                  "endLine": 163,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 17,
                  "endLine": 165,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 17,
                  "endLine": 170,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 33,
                  "endLine": 170,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 51,
                  "endLine": 170,
                  "endColumn": 53
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 17,
                  "endLine": 174,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 32,
                  "endLine": 174,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 13,
                  "endLine": 178,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 180,
                  "startColumn": 17,
                  "endLine": 180,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 180,
                  "startColumn": 35,
                  "endLine": 180,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 13,
                  "endLine": 183,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 36,
                  "endLine": 183,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 13,
                  "endLine": 186,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 34,
                  "endLine": 186,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 13,
                  "endLine": 189,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 35,
                  "endLine": 189,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 13,
                  "endLine": 192,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 13,
                  "endLine": 195,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 13,
                  "endLine": 198,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 61,
                  "endLine": 198,
                  "endColumn": 63
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 17,
                  "endLine": 200,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 13,
                  "endLine": 207,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 31,
                  "endLine": 207,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 210,
                  "startColumn": 13,
                  "endLine": 210,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestCaseBuilder.cs",
                "region": {
                  "startLine": 210,
                  "startColumn": 33,
                  "endLine": 210,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+1",
              "14": "+1",
              "15": "+2 (incl 1 for nesting)",
              "16": "+1",
              "17": "+1",
              "18": "+1",
              "19": "+1",
              "2": "+1",
              "20": "+1",
              "21": "+1",
              "22": "+1",
              "23": "+1",
              "24": "+1",
              "25": "+1",
              "26": "+1",
              "27": "+2 (incl 1 for nesting)",
              "28": "+1",
              "29": "+1",
              "3": "+2 (incl 1 for nesting)",
              "30": "+1",
              "31": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/ValueSourceAttribute.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 38,
                  "endLine": 93,
                  "endColumn": 50
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/ValueSourceAttribute.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 13,
                  "endLine": 124,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 181,
                  "startColumn": 43,
                  "endLine": 181,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 30,
                  "endLine": 174,
                  "endColumn": 50
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 177,
                  "startColumn": 13,
                  "endLine": 177,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 13,
                  "endLine": 183,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 188,
                  "startColumn": 17,
                  "endLine": 188,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 190,
                  "startColumn": 25,
                  "endLine": 190,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 194,
                  "startColumn": 17,
                  "endLine": 194,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 196,
                  "startColumn": 25,
                  "endLine": 196,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 17,
                  "endLine": 200,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 202,
                  "startColumn": 25,
                  "endLine": 202,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/ParameterDataProvider.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 38,
                  "endLine": 33,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/ParameterDataProvider.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestFixtureSourceAttribute.cs",
                "region": {
                  "startLine": 206,
                  "startColumn": 13,
                  "endLine": 206,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventListenerTextWriter.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 17,
                  "endLine": 42,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3217",
          "level": "warning",
          "message": "Either change the type of 'child' to 'Interfaces.ITest' or iterate on a generic collection of type 'TestSuite'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NamespaceTreeBuilder.cs",
                "region": {
                  "startLine": 132,
                  "startColumn": 22,
                  "endLine": 132,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/FSharpAsyncAwaitAdapter.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 36,
                  "endLine": 47,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/FSharpAsyncAwaitAdapter.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 13,
                  "endLine": 49,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/FSharpAsyncAwaitAdapter.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 13,
                  "endLine": 52,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/FSharpAsyncAwaitAdapter.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 13,
                  "endLine": 54,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/FSharpAsyncAwaitAdapter.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 17,
                  "endLine": 57,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/FSharpAsyncAwaitAdapter.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 24,
                  "endLine": 64,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/FSharpAsyncAwaitAdapter.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 24,
                  "endLine": 66,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/FSharpAsyncAwaitAdapter.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 24,
                  "endLine": 69,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/FSharpAsyncAwaitAdapter.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 24,
                  "endLine": 71,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/FSharpAsyncAwaitAdapter.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 28,
                  "endLine": 75,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1"
            }
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 175,
                  "startColumn": 39,
                  "endLine": 175,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/GenericMethodHelper.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 22,
                  "endLine": 83,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/GenericMethodHelper.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 13,
                  "endLine": 85,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/GenericMethodHelper.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 13,
                  "endLine": 89,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/GenericMethodHelper.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 21,
                  "endLine": 92,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/GenericMethodHelper.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 17,
                  "endLine": 95,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/GenericMethodHelper.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 17,
                  "endLine": 99,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/GenericMethodHelper.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 48,
                  "endLine": 99,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/GenericMethodHelper.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 21,
                  "endLine": 103,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/GenericMethodHelper.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 25,
                  "endLine": 104,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/GenericMethodHelper.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 22,
                  "endLine": 83,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+1 (recursion)"
            }
          }
        },
        {
          "ruleId": "S3973",
          "level": "warning",
          "message": "Use curly braces or indentation to denote the code conditionally executed by this 'if'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 25,
                  "endLine": 186,
                  "endColumn": 92
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 187,
                  "startColumn": 25,
                  "endLine": 187,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 177,
                  "startColumn": 44,
                  "endLine": 177,
                  "endColumn": 51
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NUnitTestFixtureBuilder.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 21,
                  "endLine": 179,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'actual' to 'collection' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionEquivalentConstraint.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 53,
                  "endLine": 47,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 24 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventQueue.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 22,
                  "endLine": 219,
                  "endColumn": 29
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventQueue.cs",
                "region": {
                  "startLine": 223,
                  "startColumn": 13,
                  "endLine": 223,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventQueue.cs",
                "region": {
                  "startLine": 229,
                  "startColumn": 17,
                  "endLine": 229,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventQueue.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 21,
                  "endLine": 231,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventQueue.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 41,
                  "endLine": 231,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventQueue.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 21,
                  "endLine": 235,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventQueue.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 21,
                  "endLine": 239,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventQueue.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 25,
                  "endLine": 245,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventQueue.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 57,
                  "endLine": 245,
                  "endColumn": 59
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventQueue.cs",
                "region": {
                  "startLine": 260,
                  "startColumn": 17,
                  "endLine": 260,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventQueue.cs",
                "region": {
                  "startLine": 266,
                  "startColumn": 17,
                  "endLine": 266,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventQueue.cs",
                "region": {
                  "startLine": 268,
                  "startColumn": 21,
                  "endLine": 268,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/EventQueue.cs",
                "region": {
                  "startLine": 268,
                  "startColumn": 41,
                  "endLine": 268,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+3 (incl 2 for nesting)",
              "11": "+1",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Filters/OrFilter.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 31,
                  "endLine": 78,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Filters/OrFilter.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 21,
                  "endLine": 80,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 30,
                  "endLine": 80,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 13,
                  "endLine": 84,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 17,
                  "endLine": 87,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 13,
                  "endLine": 92,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 13,
                  "endLine": 96,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 17,
                  "endLine": 99,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 21,
                  "endLine": 103,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 25,
                  "endLine": 105,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 25,
                  "endLine": 107,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 13,
                  "endLine": 114,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 17,
                  "endLine": 116,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 69,
                  "endLine": 116,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 13,
                  "endLine": 122,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'actual' to 'collection' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionSubsetConstraint.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 53,
                  "endLine": 50,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3458",
          "level": "warning",
          "message": "Remove this empty 'case' clause.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Commands/SkipCommand.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 17,
                  "endLine": 35,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2486",
          "level": "warning",
          "message": "Handle the exception or explain in a comment why it can be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/OSPlatform.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 13,
                  "endLine": 128,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/OSPlatform.cs",
                "region": {
                  "startLine": 127,
                  "startColumn": 13,
                  "endLine": 128,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1643",
          "level": "warning",
          "message": "Use a StringBuilder instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 39,
                  "endLine": 152,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1643",
          "level": "warning",
          "message": "Use a StringBuilder instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 25,
                  "endLine": 155,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1643",
          "level": "warning",
          "message": "Use a StringBuilder instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 25,
                  "endLine": 158,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 29 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/CompositeWorkItem.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 33,
                  "endLine": 59,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/CompositeWorkItem.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 13,
                  "endLine": 61,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/CompositeWorkItem.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 17,
                  "endLine": 62,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/CompositeWorkItem.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 56,
                  "endLine": 62,
                  "endColumn": 58
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/CompositeWorkItem.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 17,
                  "endLine": 64,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/CompositeWorkItem.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 21,
                  "endLine": 65,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/CompositeWorkItem.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 29,
                  "endLine": 74,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/CompositeWorkItem.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 33,
                  "endLine": 80,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/CompositeWorkItem.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 37,
                  "endLine": 82,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/CompositeWorkItem.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 33,
                  "endLine": 102,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/CompositeWorkItem.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 29,
                  "endLine": 105,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+5 (incl 4 for nesting)",
              "7": "+6 (incl 5 for nesting)",
              "8": "+5 (incl 4 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3458",
          "level": "warning",
          "message": "Remove this empty 'case' clause.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/CompositeWorkItem.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 25,
                  "endLine": 68,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3458",
          "level": "warning",
          "message": "Remove this empty 'case' clause.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/CompositeWorkItem.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 25,
                  "endLine": 69,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 49 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 33,
                  "endLine": 185,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 13,
                  "endLine": 189,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 17,
                  "endLine": 193,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 21,
                  "endLine": 195,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 197,
                  "startColumn": 25,
                  "endLine": 197,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 25,
                  "endLine": 200,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 210,
                  "startColumn": 29,
                  "endLine": 210,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 211,
                  "startColumn": 33,
                  "endLine": 211,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 213,
                  "startColumn": 33,
                  "endLine": 213,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 29,
                  "endLine": 215,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 33,
                  "endLine": 216,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 218,
                  "startColumn": 33,
                  "endLine": 218,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 221,
                  "startColumn": 21,
                  "endLine": 221,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 25,
                  "endLine": 225,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 80,
                  "endLine": 225,
                  "endColumn": 82
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 227,
                  "startColumn": 25,
                  "endLine": 227,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 227,
                  "startColumn": 80,
                  "endLine": 227,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+1",
              "12": "+4 (incl 3 for nesting)",
              "13": "+1",
              "14": "+4 (incl 3 for nesting)",
              "15": "+1",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+5 (incl 4 for nesting)",
              "6": "+6 (incl 5 for nesting)",
              "7": "+1",
              "8": "+5 (incl 4 for nesting)",
              "9": "+6 (incl 5 for nesting)"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'actual' to 'collection' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 53,
                  "endLine": 185,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestExecutionContext.cs",
                "region": {
                  "startLine": 537,
                  "startColumn": 70,
                  "endLine": 537,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestExecutionContext.cs",
                "region": {
                  "startLine": 543,
                  "startColumn": 26,
                  "endLine": 543,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Commands/TestCommand.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 9,
                  "endLine": 26,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2245",
          "level": "warning",
          "message": "Make sure that using this pseudorandom number generator is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Randomizer.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 27,
                  "endLine": 39,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3963",
          "level": "warning",
          "message": "Initialize all 'static fields' inline and remove the 'static constructor'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Randomizer.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 9,
                  "endLine": 41,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2245",
          "level": "warning",
          "message": "Make sure that using this pseudorandom number generator is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Randomizer.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 34,
                  "endLine": 57,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3458",
          "level": "warning",
          "message": "Remove this empty 'case' clause.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/ParallelWorkItemDispatcher.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 17,
                  "endLine": 198,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Results/TestResult.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 9,
                  "endLine": 81,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loop should be simplified by calling Select(filter => filter.Text))",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/PreFilter.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 36,
                  "endLine": 43,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 204,
                  "startColumn": 21,
                  "endLine": 204,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 201,
                  "startColumn": 17,
                  "endLine": 201,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 32 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 29,
                  "endLine": 75,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 13,
                  "endLine": 77,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 52,
                  "endLine": 77,
                  "endColumn": 54
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 52,
                  "endLine": 78,
                  "endColumn": 54
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 17,
                  "endLine": 86,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 17,
                  "endLine": 90,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 21,
                  "endLine": 91,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 65,
                  "endLine": 91,
                  "endColumn": 67
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 17,
                  "endLine": 107,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 17,
                  "endLine": 112,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 43,
                  "endLine": 112,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 17,
                  "endLine": 119,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 65,
                  "endLine": 123,
                  "endColumn": 67
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 130,
                  "startColumn": 17,
                  "endLine": 130,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 17,
                  "endLine": 134,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 17,
                  "endLine": 138,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 17,
                  "endLine": 147,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 17,
                  "endLine": 150,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 154,
                  "startColumn": 17,
                  "endLine": 154,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 13,
                  "endLine": 159,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+2 (incl 1 for nesting)",
              "14": "+2 (incl 1 for nesting)",
              "15": "+2 (incl 1 for nesting)",
              "16": "+2 (incl 1 for nesting)",
              "17": "+2 (incl 1 for nesting)",
              "18": "+1",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1116",
          "level": "warning",
          "message": "Remove this empty statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 75,
                  "endLine": 92,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 232,
                  "startColumn": 34,
                  "endLine": 232,
                  "endColumn": 66
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/UniqueItemsConstraint.cs",
                "region": {
                  "startLine": 234,
                  "startColumn": 21,
                  "endLine": 234,
                  "endColumn": 115
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'actual' to 'collection' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionSupersetConstraint.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 53,
                  "endLine": 51,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 27 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 25,
                  "endLine": 207,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 211,
                  "startColumn": 13,
                  "endLine": 211,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 17,
                  "endLine": 215,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 222,
                  "startColumn": 17,
                  "endLine": 222,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 222,
                  "startColumn": 51,
                  "endLine": 222,
                  "endColumn": 53
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 21,
                  "endLine": 225,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 229,
                  "startColumn": 21,
                  "endLine": 229,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 25,
                  "endLine": 235,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 84,
                  "endLine": 235,
                  "endColumn": 86
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 58,
                  "endLine": 235,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 250,
                  "startColumn": 17,
                  "endLine": 250,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 256,
                  "startColumn": 17,
                  "endLine": 256,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 257,
                  "startColumn": 21,
                  "endLine": 257,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemQueue.cs",
                "region": {
                  "startLine": 258,
                  "startColumn": 25,
                  "endLine": 258,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+2 (incl 1 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+4 (incl 3 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S907",
          "level": "warning",
          "message": "Remove this use of 'goto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/SingleThreadedSynchronizationContext.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 25,
                  "endLine": 73,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/PreFilter.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 46,
                  "endLine": 70,
                  "endColumn": 54
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/PreFilter.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 21,
                  "endLine": 72,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 43,
                  "endLine": 44,
                  "endColumn": 109
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 21,
                  "endLine": 46,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 22 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemBuilder.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 34,
                  "endLine": 39,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemBuilder.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 13,
                  "endLine": 45,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemBuilder.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 17,
                  "endLine": 47,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemBuilder.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 26,
                  "endLine": 47,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemBuilder.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 43,
                  "endLine": 54,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemBuilder.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 13,
                  "endLine": 56,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemBuilder.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 17,
                  "endLine": 60,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemBuilder.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 21,
                  "endLine": 63,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemBuilder.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 21,
                  "endLine": 67,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemBuilder.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 77,
                  "endLine": 67,
                  "endColumn": 79
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemBuilder.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 21,
                  "endLine": 70,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemBuilder.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 21,
                  "endLine": 75,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemBuilder.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 17,
                  "endLine": 79,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemBuilder.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 34,
                  "endLine": 39,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+1 (recursion)",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3998",
          "level": "warning",
          "message": "Replace this lock on 'TextWriter' with a lock against an object that cannot be accessed across application domain boundaries.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Results/TestResult.cs",
                "region": {
                  "startLine": 286,
                  "startColumn": 23,
                  "endLine": 286,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'work' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItemBuilder.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 21,
                  "endLine": 80,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 22,
                  "endLine": 142,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 13,
                  "endLine": 146,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 17,
                  "endLine": 147,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 25,
                  "endLine": 156,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 33,
                  "endLine": 159,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 45,
                  "endLine": 163,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 41,
                  "endLine": 167,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+5 (incl 4 for nesting)",
              "5": "+5 (incl 4 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'actual', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CollectionOrderedConstraint.cs",
                "region": {
                  "startLine": 272,
                  "startColumn": 37,
                  "endLine": 272,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Filters/CompositeFilter.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 9,
                  "endLine": 18,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Filters/CompositeFilter.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 9,
                  "endLine": 27,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/TestWorker.cs",
                "region": {
                  "startLine": 141,
                  "startColumn": 13,
                  "endLine": 142,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItem.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 9,
                  "endLine": 37,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DictionaryContainsValueConstraint.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 36,
                  "endLine": 51,
                  "endColumn": 53
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DictionaryContainsValueConstraint.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 21,
                  "endLine": 52,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'actual' to 'collection' to match the base class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DictionaryContainsValueConstraint.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 53,
                  "endLine": 47,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'expected' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Comparers/StreamsComparer.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 23,
                  "endLine": 24,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'actual' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Comparers/StreamsComparer.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 23,
                  "endLine": 26,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'expected' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Comparers/StreamsComparer.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 23,
                  "endLine": 28,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'actual' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Comparers/StreamsComparer.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 23,
                  "endLine": 30,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1479",
          "level": "warning",
          "message": "Consider reworking this 'switch' to reduce the number of 'case's from 33 to at most 30.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/PlatformHelper.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 13,
                  "endLine": 128,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItem.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 9,
                  "endLine": 60,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DictionaryContainsKeyValuePairConstraint.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 39,
                  "endLine": 48,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DictionaryContainsKeyValuePairConstraint.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 25,
                  "endLine": 49,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DictionaryContainsKeyValuePairConstraint.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 38,
                  "endLine": 61,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DictionaryContainsKeyValuePairConstraint.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 25,
                  "endLine": 62,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 251,
                  "startColumn": 42,
                  "endLine": 251,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 257,
                  "startColumn": 13,
                  "endLine": 257,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 260,
                  "startColumn": 17,
                  "endLine": 260,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 262,
                  "startColumn": 21,
                  "endLine": 262,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 263,
                  "startColumn": 92,
                  "endLine": 263,
                  "endColumn": 93
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 271,
                  "startColumn": 25,
                  "endLine": 271,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 274,
                  "startColumn": 21,
                  "endLine": 274,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 13,
                  "endLine": 280,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1"
            }
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'depth'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/EqualConstraintResult.cs",
                "region": {
                  "startLine": 130,
                  "startColumn": 25,
                  "endLine": 130,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 294,
                  "startColumn": 42,
                  "endLine": 294,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 13,
                  "endLine": 299,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 302,
                  "startColumn": 17,
                  "endLine": 302,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 304,
                  "startColumn": 21,
                  "endLine": 304,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 305,
                  "startColumn": 92,
                  "endLine": 305,
                  "endColumn": 93
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 311,
                  "startColumn": 25,
                  "endLine": 311,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 314,
                  "startColumn": 21,
                  "endLine": 314,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
                "region": {
                  "startLine": 320,
                  "startColumn": 13,
                  "endLine": 320,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1"
            }
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'depth'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/EqualConstraintResult.cs",
                "region": {
                  "startLine": 233,
                  "startColumn": 25,
                  "endLine": 233,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/PairwiseStrategy.cs",
                "region": {
                  "startLine": 574,
                  "startColumn": 52,
                  "endLine": 574,
                  "endColumn": 61
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/PairwiseStrategy.cs",
                "region": {
                  "startLine": 576,
                  "startColumn": 26,
                  "endLine": 576,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DictionaryContainsKeyConstraint.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 37,
                  "endLine": 73,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DictionaryContainsKeyConstraint.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 25,
                  "endLine": 74,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Comparers/EquatablesComparer.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 21,
                  "endLine": 41,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Comparers/EquatablesComparer.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 17,
                  "endLine": 39,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Comparers/EquatablesComparer.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 44,
                  "endLine": 37,
                  "endColumn": 78
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Comparers/EquatablesComparer.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 21,
                  "endLine": 39,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ExactCountConstraint.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 21,
                  "endLine": 87,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Results/TestSuiteResult.cs",
                "region": {
                  "startLine": 229,
                  "startColumn": 25,
                  "endLine": 229,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Results/TestSuiteResult.cs",
                "region": {
                  "startLine": 228,
                  "startColumn": 21,
                  "endLine": 228,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 28,
                  "endLine": 65,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 13,
                  "endLine": 67,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 17,
                  "endLine": 69,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 17,
                  "endLine": 70,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 17,
                  "endLine": 71,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 17,
                  "endLine": 72,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 17,
                  "endLine": 73,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 17,
                  "endLine": 74,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 17,
                  "endLine": 75,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 17,
                  "endLine": 76,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 17,
                  "endLine": 77,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+2 (incl 1 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 30,
                  "endLine": 82,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 13,
                  "endLine": 84,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 17,
                  "endLine": 86,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 17,
                  "endLine": 87,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 17,
                  "endLine": 88,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 17,
                  "endLine": 89,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 17,
                  "endLine": 90,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 17,
                  "endLine": 91,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 17,
                  "endLine": 92,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 17,
                  "endLine": 93,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 17,
                  "endLine": 94,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+2 (incl 1 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1643",
          "level": "warning",
          "message": "Use a StringBuilder instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/PathConstraint.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 21,
                  "endLine": 64,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/PropertyExistsConstraint.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 69,
                  "endLine": 47,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1264",
          "level": "warning",
          "message": "Replace this 'for' loop with a 'while' loop.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DictionaryContainsKeyConstraint.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 13,
                  "endLine": 155,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/PropertyConstraint.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 69,
                  "endLine": 38,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'name' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/PropertyConstraint.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 27,
                  "endLine": 59,
                  "endColumn": 113
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/NUnitEqualityComparer.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 53,
                  "endLine": 179,
                  "endColumn": 71
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/NUnitEqualityComparer.cs",
                "region": {
                  "startLine": 180,
                  "startColumn": 25,
                  "endLine": 180,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this constructor to reduce its Cognitive Complexity from 33 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 16,
                  "endLine": 66,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 58,
                  "endLine": 71,
                  "endColumn": 59
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 63,
                  "endLine": 73,
                  "endColumn": 64
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 69,
                  "endLine": 75,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 62,
                  "endLine": 77,
                  "endColumn": 63
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 60,
                  "endLine": 79,
                  "endColumn": 61
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 61,
                  "endLine": 81,
                  "endColumn": 62
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 53,
                  "endLine": 83,
                  "endColumn": 54
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 66,
                  "endLine": 85,
                  "endColumn": 67
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 61,
                  "endLine": 87,
                  "endColumn": 62
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 67,
                  "endLine": 89,
                  "endColumn": 68
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 63,
                  "endLine": 91,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+3 (incl 2 for nesting)",
              "1": "+3 (incl 2 for nesting)",
              "10": "+3 (incl 2 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3060",
          "level": "warning",
          "message": "Offload the code that's conditional on this type test to the appropriate subclass and remove the condition.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/WorkItem.cs",
                "region": {
                  "startLine": 501,
                  "startColumn": 20,
                  "endLine": 501,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4524",
          "level": "warning",
          "message": "Move this 'default:' case to the beginning or end of this 'switch' statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Results/TestResult.cs",
                "region": {
                  "startLine": 664,
                  "startColumn": 17,
                  "endLine": 664,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 56,
                  "endLine": 245,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 107,
                  "endLine": 245,
                  "endColumn": 129
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 252,
                  "startColumn": 117,
                  "endLine": 252,
                  "endColumn": 139
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 297,
                  "startColumn": 37,
                  "endLine": 297,
                  "endColumn": 70
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 13,
                  "endLine": 299,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 305,
                  "startColumn": 24,
                  "endLine": 305,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 305,
                  "startColumn": 51,
                  "endLine": 305,
                  "endColumn": 53
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 308,
                  "startColumn": 24,
                  "endLine": 308,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 310,
                  "startColumn": 24,
                  "endLine": 310,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 311,
                  "startColumn": 28,
                  "endLine": 311,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 317,
                  "startColumn": 17,
                  "endLine": 317,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+3 (incl 2 for nesting)",
              "2": "+1",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 323,
                  "startColumn": 39,
                  "endLine": 323,
                  "endColumn": 64
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 325,
                  "startColumn": 13,
                  "endLine": 325,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 331,
                  "startColumn": 26,
                  "endLine": 331,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 334,
                  "startColumn": 26,
                  "endLine": 334,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 336,
                  "startColumn": 26,
                  "endLine": 336,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 337,
                  "startColumn": 30,
                  "endLine": 337,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 342,
                  "startColumn": 17,
                  "endLine": 342,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+3 (incl 2 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
                "region": {
                  "startLine": 411,
                  "startColumn": 47,
                  "endLine": 411,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'mode' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 182,
                  "startColumn": 27,
                  "endLine": 182,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'mode' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 27,
                  "endLine": 226,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'mode' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 254,
                  "startColumn": 27,
                  "endLine": 254,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'mode' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 285,
                  "startColumn": 27,
                  "endLine": 285,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'mode' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 312,
                  "startColumn": 27,
                  "endLine": 312,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'mode' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 343,
                  "startColumn": 27,
                  "endLine": 343,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'mode' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 370,
                  "startColumn": 27,
                  "endLine": 370,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 184,
                  "startColumn": 31,
                  "endLine": 184,
                  "endColumn": 42
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 13,
                  "endLine": 186,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 13,
                  "endLine": 192,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 197,
                  "startColumn": 13,
                  "endLine": 197,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 199,
                  "startColumn": 17,
                  "endLine": 199,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 203,
                  "startColumn": 17,
                  "endLine": 203,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 205,
                  "startColumn": 49,
                  "endLine": 205,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 206,
                  "startColumn": 21,
                  "endLine": 206,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 214,
                  "startColumn": 17,
                  "endLine": 214,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 47,
                  "endLine": 216,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 217,
                  "startColumn": 21,
                  "endLine": 217,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+3 (incl 2 for nesting)",
              "7": "+2 (incl 1 for nesting)",
              "8": "+1",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 383,
                  "startColumn": 27,
                  "endLine": 383,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 385,
                  "startColumn": 13,
                  "endLine": 385,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 385,
                  "startColumn": 42,
                  "endLine": 385,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 388,
                  "startColumn": 13,
                  "endLine": 388,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 388,
                  "startColumn": 37,
                  "endLine": 388,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 391,
                  "startColumn": 17,
                  "endLine": 391,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 391,
                  "startColumn": 46,
                  "endLine": 391,
                  "endColumn": 48
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 393,
                  "startColumn": 17,
                  "endLine": 393,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 393,
                  "startColumn": 49,
                  "endLine": 393,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 395,
                  "startColumn": 17,
                  "endLine": 395,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 399,
                  "startColumn": 13,
                  "endLine": 399,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 399,
                  "startColumn": 36,
                  "endLine": 399,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 402,
                  "startColumn": 13,
                  "endLine": 402,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 402,
                  "startColumn": 35,
                  "endLine": 402,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 405,
                  "startColumn": 13,
                  "endLine": 405,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 405,
                  "startColumn": 35,
                  "endLine": 405,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 408,
                  "startColumn": 13,
                  "endLine": 408,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 408,
                  "startColumn": 34,
                  "endLine": 408,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 411,
                  "startColumn": 13,
                  "endLine": 411,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 411,
                  "startColumn": 34,
                  "endLine": 411,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+1",
              "16": "+1",
              "17": "+1",
              "18": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S2692",
          "level": "warning",
          "message": "0 is a valid index, but this check ignores it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 310,
                  "startColumn": 36,
                  "endLine": 310,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2692",
          "level": "warning",
          "message": "0 is a valid index, but this check ignores it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/MsgUtils.cs",
                "region": {
                  "startLine": 325,
                  "startColumn": 36,
                  "endLine": 325,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 27 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 440,
                  "startColumn": 31,
                  "endLine": 440,
                  "endColumn": 41
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 443,
                  "startColumn": 13,
                  "endLine": 443,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 443,
                  "startColumn": 42,
                  "endLine": 443,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 447,
                  "startColumn": 13,
                  "endLine": 447,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 447,
                  "startColumn": 42,
                  "endLine": 447,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 450,
                  "startColumn": 35,
                  "endLine": 450,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 452,
                  "startColumn": 13,
                  "endLine": 452,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 452,
                  "startColumn": 45,
                  "endLine": 452,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 455,
                  "startColumn": 35,
                  "endLine": 455,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 458,
                  "startColumn": 13,
                  "endLine": 458,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 458,
                  "startColumn": 50,
                  "endLine": 458,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 461,
                  "startColumn": 35,
                  "endLine": 461,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 464,
                  "startColumn": 13,
                  "endLine": 464,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 464,
                  "startColumn": 35,
                  "endLine": 464,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 467,
                  "startColumn": 35,
                  "endLine": 467,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 470,
                  "startColumn": 13,
                  "endLine": 470,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 470,
                  "startColumn": 34,
                  "endLine": 470,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 473,
                  "startColumn": 35,
                  "endLine": 473,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 476,
                  "startColumn": 13,
                  "endLine": 476,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 476,
                  "startColumn": 34,
                  "endLine": 476,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 479,
                  "startColumn": 35,
                  "endLine": 479,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
                "region": {
                  "startLine": 483,
                  "startColumn": 31,
                  "endLine": 483,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+1",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "14": "+1",
              "15": "+1",
              "16": "+2 (incl 1 for nesting)",
              "17": "+1",
              "18": "+1",
              "19": "+2 (incl 1 for nesting)",
              "2": "+1",
              "20": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        }
      ],
      "rules": {
        "CS0618": {
          "id": "CS0618",
          "shortDescription": "Type or member is obsolete",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "DOC101": {
          "id": "DOC101",
          "shortDescription": "Use child blocks consistently",
          "fullDescription": "The documentation for the element contains some text which is wrapped in block-level elements, and other text which is written inline.",
          "defaultLevel": "note",
          "helpUri": "https://github.com/DotNetAnalyzers/DocumentationAnalyzers/blob/master/docs/DOC101.md",
          "properties": {
            "category": "DocumentationAnalyzers.StyleRules",
            "isEnabledByDefault": true
          }
        },
        "DOC201": {
          "id": "DOC201",
          "shortDescription": "Item should have description",
          "fullDescription": "Item should have description",
          "defaultLevel": "note",
          "helpUri": "https://github.com/DotNetAnalyzers/DocumentationAnalyzers/blob/master/docs/DOC201.md",
          "properties": {
            "category": "DocumentationAnalyzers.PortabilityRules",
            "isEnabledByDefault": true
          }
        },
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks whether or not type names are using PascalCase. To reduce noise, two consecutive upper case characters are allowed unless they form the whole type name. So, MyXClass is compliant, but XC on its own is not.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code’s readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S108": {
          "id": "S108",
          "shortDescription": "Nested blocks of code should not be left empty",
          "fullDescription": "Most of the time a block of code is empty when a piece of code is really missing. So such empty block must be either filled or removed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-108",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1104": {
          "id": "S1104",
          "shortDescription": "Fields should not have public accessibility",
          "fullDescription": "Public fields in public classes do not respect the encapsulation principle and has three main disadvantages:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1104",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1116": {
          "id": "S1116",
          "shortDescription": "Empty statements should be removed",
          "fullDescription": "Empty statements, i.e. ;, are usually introduced by mistake, for example because:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1116",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1117": {
          "id": "S1117",
          "shortDescription": "Local variables should not shadow class fields",
          "fullDescription": "Overriding or shadowing a variable declared in an outer scope can strongly impact the readability, and therefore the maintainability, of a piece of code. Further, it could lead maintainers to introduce bugs because they think they’re using one variable but are really using another.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1117",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Utility classes, which are collections of static members, are not meant to be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General exceptions should never be thrown",
          "fullDescription": "Throwing such general exceptions as Exception, SystemException, ApplicationException, IndexOutOfRangeException, NullReferenceException, OutOfMemoryException and ExecutionEngineException prevents calling methods from handling true, system-generated exceptions differently than application-generated errors.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1121": {
          "id": "S1121",
          "shortDescription": "Assignments should not be made from within sub-expressions",
          "fullDescription": "Assignments within sub-expressions are hard to spot and therefore make the code less readable. Ideally, sub-expressions should not have side-effects.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1121",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1135": {
          "id": "S1135",
          "shortDescription": "Track uses of \"TODO\" tags",
          "fullDescription": "TODO tags are commonly used to mark places where some more code is required, but which the developer wants to implement later.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1135",
          "properties": {
            "category": "Info Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1144": {
          "id": "S1144",
          "shortDescription": "Unused private types or members should be removed",
          "fullDescription": "private or internal types or private members that are never executed or referenced are dead code: unnecessary, inoperative code that should be removed. Cleaning out dead code decreases the size of the maintained codebase, making it easier to understand the program and preventing bugs from being introduced.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay",
              "Unnecessary"
            ]
          }
        },
        "S1168": {
          "id": "S1168",
          "shortDescription": "Empty arrays and collections should be returned instead of null",
          "fullDescription": "Returning null instead of an actual array, collection or map forces callers of the method to explicitly test for nullity, making them more complex and less readable.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1168",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1172": {
          "id": "S1172",
          "shortDescription": "Unused method parameters should be removed",
          "fullDescription": "Unused parameters are misleading. Whatever the values passed to such parameters, the behavior will be the same.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1172",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1186": {
          "id": "S1186",
          "shortDescription": "Methods should not be empty",
          "fullDescription": "There are several reasons for a method not to have a method body:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1186",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1210": {
          "id": "S1210",
          "shortDescription": "\"Equals\" and the comparison operators should be overridden when implementing \"IComparable\"",
          "fullDescription": "When you implement IComparable or IComparable<T> on a class you should also override Equals(object) and overload the comparison operators (==, !=, <, <=, >, >=). That’s because the CLR cannot automatically call your CompareTo implementation from Equals(object) or from the base comparison operator implementations. Additionally, it is best practice to override GetHashCode along with Equals.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1210",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Programmers should not comment out code as it bloats programs and reduces readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1264": {
          "id": "S1264",
          "shortDescription": "A \"while\" loop should be used instead of a \"for\" loop",
          "fullDescription": "When only the condition expression is defined in a for loop, and the initialization and increment expressions are missing, a while loop should be used instead to increase readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1264",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1450": {
          "id": "S1450",
          "shortDescription": "Private fields only used as local variables in methods should become local variables",
          "fullDescription": "When the value of a private field is always assigned to in a class' methods before being read, then it is not being used to store class information. Therefore, it should become a local variable in the relevant methods to prevent any misunderstanding.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1450",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1479": {
          "id": "S1479",
          "shortDescription": "\"switch\" statements should not have too many \"case\" clauses",
          "fullDescription": "When switch statements have large sets of case clauses, it is usually an attempt to map two sets of data. A Dictionary should be used instead to make the code more readable and maintainable.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1479",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1643": {
          "id": "S1643",
          "shortDescription": "Strings should not be concatenated using '+' in a loop",
          "fullDescription": "StringBuilder is more efficient than string concatenation, especially when the operator is repeated over and over as in loops.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1643",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1848": {
          "id": "S1848",
          "shortDescription": "Objects should not be created to be dropped immediately without being used",
          "fullDescription": "There is no good reason to create a new object to not do anything with it. Most of the time, this is due to a missing piece of code and so could lead to an unexpected behavior in production.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1848",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1854": {
          "id": "S1854",
          "shortDescription": "Unused assignments should be removed",
          "fullDescription": "A dead store happens when a local variable is assigned a value that is not read by any subsequent instruction. Calculating or retrieving a value only to then overwrite it or throw it away, could indicate a serious error in the code. Even if it’s not an error, it is at best a waste of resources. Therefore all calculated values should be used.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1854",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1905": {
          "id": "S1905",
          "shortDescription": "Redundant casts should not be used",
          "fullDescription": "Unnecessary casting expressions make the code harder to read and understand.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1905",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1939": {
          "id": "S1939",
          "shortDescription": "Inheritance list should not be redundant",
          "fullDescription": "An inheritance list entry is redundant if:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1939",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2223": {
          "id": "S2223",
          "shortDescription": "Non-constant static fields should not be visible",
          "fullDescription": "A static field that is neither constant nor read-only is not thread-safe. Correctly accessing these fields from different threads needs synchronization with locks. Improper synchronization may lead to unexpected results, thus publicly visible static fields are best suited for storing non-changing data shared by many consumers. To enforce this intent, these fields should be marked readonly or converted to constants.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2223",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2234": {
          "id": "S2234",
          "shortDescription": "Parameters should be passed in the correct order",
          "fullDescription": "When the names of parameters in a method call match the names of the method arguments, it contributes to clearer, more readable code. However, when the names match, but are passed in a different order than the method arguments, it indicates a mistake in the parameter order which will likely lead to unexpected results.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2234",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2245": {
          "id": "S2245",
          "shortDescription": "Using pseudorandom number generators (PRNGs) is security-sensitive",
          "fullDescription": "Using pseudorandom number generators (PRNGs) is security-sensitive. For example, it has led in the past to the following vulnerabilities:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2245",
          "properties": {
            "category": "Critical Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2259": {
          "id": "S2259",
          "shortDescription": "Null pointers should not be dereferenced",
          "fullDescription": "A reference to null should never be dereferenced/accessed. Doing so will cause a NullReferenceException to be thrown. At best, such an exception will cause abrupt program termination. At worst, it could expose debugging information that would be useful to an attacker, or it could allow an attacker to bypass security measures.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2259",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2292": {
          "id": "S2292",
          "shortDescription": "Trivial properties should be auto-implemented",
          "fullDescription": "Trivial properties, which include no logic but setting and getting a backing field should be converted to auto-implemented properties, yielding cleaner and more readable code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2292",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2342": {
          "id": "S2342",
          "shortDescription": "Enumeration types should comply with a naming convention",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks that all enum names match a provided regular expression.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2342",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2346": {
          "id": "S2346",
          "shortDescription": "Flags enumerations zero-value members should be named \"None\"",
          "fullDescription": "Consistent use of \"None\" in flags enumerations indicates that all flag values are cleared. The value 0 should not be used to indicate any other state, since there is no way to check that the bit 0 is set.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2346",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2486": {
          "id": "S2486",
          "shortDescription": "Generic exceptions should not be ignored",
          "fullDescription": "When exceptions occur, it is usually a bad idea to simply ignore them. Instead, it is better to handle them properly, or at least to log them.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2486",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2692": {
          "id": "S2692",
          "shortDescription": "\"IndexOf\" checks should not be for positive numbers",
          "fullDescription": "Most checks against an IndexOf value compare it with -1 because 0 is a valid index. Any checks which look for values > 0 ignore the first element, which is likely a bug. If the intent is merely to check inclusion of a value in a string, List, or an array, consider using the Contains method instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2692",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2696": {
          "id": "S2696",
          "shortDescription": "Instance members should not write to \"static\" fields",
          "fullDescription": "Correctly updating a static field from a non-static method is tricky to get right and could easily lead to bugs if there are multiple class instances and/or multiple threads in play.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2696",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2953": {
          "id": "S2953",
          "shortDescription": "Methods named \"Dispose\" should implement \"IDisposable.Dispose\"",
          "fullDescription": "Dispose as a method name should be used exclusively to implement IDisposable.Dispose to prevent any confusion.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2953",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3011": {
          "id": "S3011",
          "shortDescription": "Reflection should not be used to increase accessibility of classes, methods, or fields",
          "fullDescription": "This rule raises an issue when reflection is used to change the visibility of a class, method or field, and when it is used to directly update a field value. Altering or bypassing the accessibility of classes, methods, or fields violates the encapsulation principle and could lead to run-time errors.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3011",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3060": {
          "id": "S3060",
          "shortDescription": "\"is\" should not be used with \"this\"",
          "fullDescription": "There’s no valid reason to test this with is. The only plausible explanation for such a test is that you’re executing code in a parent class conditionally based on the kind of child class this is. But code that’s specific to a child class should be in that child class, not in the parent.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3060",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3217": {
          "id": "S3217",
          "shortDescription": "\"Explicit\" conversions of \"foreach\" loops should not be used",
          "fullDescription": "The foreach statement was introduced in the C# language prior to generics to make it easier to work with the non-generic collections available at that time such as ArrayList. The foreach statements allows you to downcast elements of a collection of Objects to any other type. The problem is that to achieve the cast, the foreach statements silently performs explicit type conversion, which at runtime can result in an InvalidCastException.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3217",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3218": {
          "id": "S3218",
          "shortDescription": "Inner class members should not shadow outer class \"static\" or type members",
          "fullDescription": "It’s possible to name the members of an inner class the same as the static members of its enclosing class - possible, but a bad idea. That’s because maintainers may be confused about which members are being used where. Instead the inner class' members should be renamed and all the references updated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3218",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3241": {
          "id": "S3241",
          "shortDescription": "Methods should not return values that are never used",
          "fullDescription": "Private methods are clearly intended for use only within their own scope. When such methods return values that are never used by any of their callers, then clearly there is no need to actually make the return, and it should be removed in the interests of efficiency and clarity.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3241",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3246": {
          "id": "S3246",
          "shortDescription": "Generic type parameters should be co/contravariant when possible",
          "fullDescription": "In the interests of making code as usable as possible, interfaces and delegates with generic parameters should use the out and in modifiers when possible to make the interfaces and delegates covariant and contravariant, respectively.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3246",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3260": {
          "id": "S3260",
          "shortDescription": "Non-derived \"private\" classes and records should be \"sealed\"",
          "fullDescription": "private classes and records aren’t visible outside of their assemblies anyway, so if they’re not extended inside the assemblies, they should be made explicitly non-extensible with the addition of the sealed keyword.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3260",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3267": {
          "id": "S3267",
          "shortDescription": "Loops should be simplified with \"LINQ\" expressions",
          "fullDescription": "When a loop is filtering, selecting or aggregating, those functions can be handled with a clearer, more concise LINQ expression instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3267",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3358": {
          "id": "S3358",
          "shortDescription": "Ternary operators should not be nested",
          "fullDescription": "Just because you can do something, doesn’t mean you should, and that’s the case with nested ternary operations. Nesting ternary operators results in the kind of code that may seem clear as day when you write it, but six months later will leave maintainers (or worse - future you) scratching their heads and cursing.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3358",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3442": {
          "id": "S3442",
          "shortDescription": "\"abstract\" classes should not have \"public\" constructors",
          "fullDescription": "Since abstract classes can’t be instantiated, there’s no point in their having public or internal constructors. If there is basic initialization logic that should run when an extending class instance is created, you can by all means put it in a constructor, but make that constructor private, private protected or protected.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3442",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3458": {
          "id": "S3458",
          "shortDescription": "Empty \"case\" clauses that fall through to the \"default\" should be omitted",
          "fullDescription": "Empty case clauses that fall through to the default are useless. Whether or not such a case is present, the default clause will be invoked. Such cases simply clutter the code, and should be removed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3458",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3604": {
          "id": "S3604",
          "shortDescription": "Member initializer values should not be redundant",
          "fullDescription": "Fields, properties and events can be initialized either inline or in the constructor. Initializing them inline and in the constructor at the same time is redundant; the inline initialization will be overridden.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3604",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3889": {
          "id": "S3889",
          "shortDescription": "Neither \"Thread.Resume\" nor \"Thread.Suspend\" should be used",
          "fullDescription": "Thread.Suspend and Thread.Resume can give unpredictable results, and both methods have been deprecated. Indeed, if Thread.Suspend is not used very carefully, a thread can be suspended while holding a lock, thus leading to a deadlock. Other safer synchronization mechanisms should be used, such as Monitor, Mutex, and Semaphore.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3889",
          "properties": {
            "category": "Blocker Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3925": {
          "id": "S3925",
          "shortDescription": "\"ISerializable\" should be implemented correctly",
          "fullDescription": "The ISerializable interface is the mechanism to control the type serialization process. If not implemented correctly this could result in an invalid serialization and hard to detect bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3925",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3928": {
          "id": "S3928",
          "shortDescription": "Parameter names used into ArgumentException constructors should match an existing one ",
          "fullDescription": "Some constructors of the ArgumentException, ArgumentNullException, ArgumentOutOfRangeException and DuplicateWaitObjectException classes must be fed with a valid parameter name. This rule raises an issue in two cases:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3928",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3963": {
          "id": "S3963",
          "shortDescription": "\"static\" fields should be initialized inline",
          "fullDescription": "When a static constructor serves no other purpose that initializing static fields, it comes with an unnecessary performance cost because the compiler generates a check before each static method or instance constructor invocation.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3963",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3973": {
          "id": "S3973",
          "shortDescription": "A conditionally executed single line should be denoted by indentation",
          "fullDescription": "In the absence of enclosing curly braces, the line immediately after a conditional is the one that is conditionally executed. By both convention and good practice, such lines are indented. In the absence of both curly braces and indentation the intent of the original programmer is entirely unclear and perhaps not actually what is executed. Additionally, such code is highly likely to be confusing to maintainers.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3973",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3998": {
          "id": "S3998",
          "shortDescription": "Threads should not lock on objects with weak identity",
          "fullDescription": "A thread acquiring a lock on an object that can be accessed across application domain boundaries runs the risk of being blocked by another thread in a different application domain. Objects that can be accessed across application domain boundaries are said to have weak identity. Types with weak identity are:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3998",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4035": {
          "id": "S4035",
          "shortDescription": "Classes implementing \"IEquatable<T>\" should be sealed",
          "fullDescription": "When a class implements the IEquatable<T> interface, it enters a contract that, in effect, states \"I know how to compare two instances of type T or any type derived from T for equality.\". However if that class is derived, it is very unlikely that the base class will know how to make a meaningful comparison. Therefore that implicit contract is now broken.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4035",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4136": {
          "id": "S4136",
          "shortDescription": "Method overloads should be grouped together",
          "fullDescription": "For clarity, all overloads of the same method should be grouped together. That lets both users and maintainers quickly understand all the current available options.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4136",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4158": {
          "id": "S4158",
          "shortDescription": "Empty collections should not be accessed or iterated",
          "fullDescription": "When a collection is empty it makes no sense to access or iterate it. Doing so anyway is surely an error; either population was accidentally omitted or the developer doesn’t understand the situation.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4158",
          "properties": {
            "category": "Minor Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4275": {
          "id": "S4275",
          "shortDescription": "Getters and setters should access the expected fields",
          "fullDescription": "Properties provide a way to enforce encapsulation by providing public, protected or internal methods that give controlled access to private fields. However in classes with multiple fields it is not unusual that cut and paste is used to quickly create the needed properties, which can result in the wrong field being accessed by a getter or setter.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4275",
          "properties": {
            "category": "Critical Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4456": {
          "id": "S4456",
          "shortDescription": "Parameter validation in yielding methods should be wrapped",
          "fullDescription": "Because of the way yield methods are rewritten by the compiler (they become lazily evaluated state machines) any exceptions thrown during the parameters check will happen only when the collection is iterated over. That could happen far away from the source of the buggy code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4456",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4487": {
          "id": "S4487",
          "shortDescription": "Unread \"private\" fields should be removed",
          "fullDescription": "Private fields only used to store values without reading them later is a case of dead store. So changing the value of such field is useless and most probably indicates a serious error in the code.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4487",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay",
              "Unnecessary"
            ]
          }
        },
        "S4524": {
          "id": "S4524",
          "shortDescription": "\"default\" clauses should be first or last",
          "fullDescription": "switch can contain a default clause for various reasons: to handle unexpected values, to show that all the cases were properly considered.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4524",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S5766": {
          "id": "S5766",
          "shortDescription": "Deserializing objects without performing data validation is security-sensitive",
          "fullDescription": "Deserialization process extracts data from the serialized representation of an object and reconstruct it directly, without calling constructors. Thus, data validation implemented in constructors can be bypassed if serialized objects are controlled by an attacker.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-5766",
          "properties": {
            "category": "Major Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S907": {
          "id": "S907",
          "shortDescription": "\"goto\" statement should not be used",
          "fullDescription": "goto is an unstructured control flow statement. It makes code less readable and maintainable. Structured control flow statements such as if, for, while, continue or break should be used instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-907",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S927": {
          "id": "S927",
          "shortDescription": "Parameter names should match base declaration and other partial definitions",
          "fullDescription": "The name of a parameter in an externally visible. This rule raises an issue when method override does not match the name of the parameter in the base declaration of the method, or the name of the parameter in the interface declaration of the method or the name of any other partial definition.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-927",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}