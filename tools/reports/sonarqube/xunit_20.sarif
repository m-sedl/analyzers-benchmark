{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.0.0.0",
        "fileVersion": "4.0.1-1.22181.2 (487283bc)",
        "semanticVersion": "4.0.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'Argument.Argument(Type, Func<object?>, Action<object?>)' is obsolete: 'This constructor overload is deprecated and will be removed in the next version.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/NSubstituteExtensions.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 19,
                  "endLine": 46,
                  "endColumn": 109
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/Utility/EnumerableExtensions.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 42,
                  "endLine": 6,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/PropertyAssertsTests.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 125,
                  "endLine": 87,
                  "endColumn": 133
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/PropertyAssertsTests.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 66,
                  "endLine": 100,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/PropertyAssertsTests.cs",
                "region": {
                  "startLine": 113,
                  "startColumn": 66,
                  "endLine": 113,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/PropertyAssertsTests.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 66,
                  "endLine": 126,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/PropertyAssertsTests.cs",
                "region": {
                  "startLine": 141,
                  "startColumn": 15,
                  "endLine": 141,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0414",
          "level": "warning",
          "message": "The field 'ArgumentFormatterTests.ComplexTypes.MyComplexType.MyPrivateField' is assigned but its value is never used",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/Sdk/ArgumentFormatterTests.cs",
                "region": {
                  "startLine": 305,
                  "startColumn": 19,
                  "endLine": 305,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/StringAssertsTests.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/CollectionAssertsTests.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 14,
                  "endLine": 14,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/Program.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 14,
                  "endLine": 10,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/MultipleAssertsTests.cs",
                "region": {
                  "startLine": 4,
                  "startColumn": 14,
                  "endLine": 4,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/SpyMessageSink.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 14,
                  "endLine": 47,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/MemoryAssertsTests.cs",
                "region": {
                  "startLine": 571,
                  "startColumn": 21,
                  "endLine": 571,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/Sdk/Exceptions/EndsWithExceptionTests.cs",
                "region": {
                  "startLine": 4,
                  "startColumn": 14,
                  "endLine": 4,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/AcceptanceTests/AcceptanceTestV3.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 14,
                  "endLine": 13,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/Sdk/Exceptions/EqualExceptionTests.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/NullAssertsTests.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/Sdk/Exceptions/XunitExceptionTests.cs",
                "region": {
                  "startLine": 4,
                  "startColumn": 14,
                  "endLine": 4,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/AcceptanceTests/ITestResultWithDisplayName.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 18,
                  "endLine": 1,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/SetAssertsTests.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/PropertyAssertsTests.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 14,
                  "endLine": 8,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/SkipAssertsTests.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 14,
                  "endLine": 9,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/AcceptanceTests/TestFailedWithDisplayName.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 14,
                  "endLine": 3,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/AcceptanceTests/TestNotRunWithDisplayName.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 14,
                  "endLine": 3,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/SpyRunnerLogger.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/AcceptanceTests/TestPassedWithDisplayName.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 14,
                  "endLine": 3,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/AcceptanceTests/TestSkippedWithDisplayName.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 14,
                  "endLine": 3,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/Mocks.Attributes.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 29,
                  "endLine": 12,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/Mocks.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 29,
                  "endLine": 7,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/Mocks.Reflection.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 29,
                  "endLine": 12,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/Mocks.TestCases.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 29,
                  "endLine": 12,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/Mocks.TestFrameworks.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 29,
                  "endLine": 5,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<_IReflectionAttributeInfo>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/Mocks.Attributes.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 68,
                  "endLine": 14,
                  "endColumn": 100
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<_IReflectionMethodInfo>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/Mocks.Attributes.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 62,
                  "endLine": 15,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<_IReflectionParameterInfo>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/Mocks.Attributes.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 68,
                  "endLine": 16,
                  "endColumn": 100
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<_IReflectionTypeInfo>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/Mocks.Attributes.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 58,
                  "endLine": 17,
                  "endColumn": 85
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/SpanAssertsTests.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<object>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/Mocks.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 42,
                  "endLine": 9,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/SpyTestMessageSink.cs",
                "region": {
                  "startLine": 4,
                  "startColumn": 14,
                  "endLine": 4,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/RangeAssertsTests.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/TestData.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 21,
                  "endLine": 11,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2211",
          "level": "note",
          "message": "Non-constant fields should not be visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/TestData.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 22,
                  "endLine": 21,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2211",
          "level": "note",
          "message": "Non-constant fields should not be visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/TestData.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 25,
                  "endLine": 22,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2211",
          "level": "note",
          "message": "Non-constant fields should not be visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/TestData.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 26,
                  "endLine": 23,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2211",
          "level": "note",
          "message": "Non-constant fields should not be visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/TestData.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 26,
                  "endLine": 26,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/MockTestCaseOrderer.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/Sdk/ArgumentFormatterTests.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 14,
                  "endLine": 8,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/SpanAssertsTests.cs",
                "region": {
                  "startLine": 636,
                  "startColumn": 21,
                  "endLine": 636,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/StartsWithTests.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/TypeAssertsTests.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/SpyMessageSink.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/BooleanAssertsTests.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/Utility/EnumerableExtensions.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 21,
                  "endLine": 3,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/Sdk/Exceptions/AssertActualExpectedExceptionTests.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/Utility/InterfaceProxy.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/EventAssertsTests.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/NSubstituteExtensions.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 21,
                  "endLine": 7,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/SpyBeforeAfterTest.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/EqualityAssertsTests.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 14,
                  "endLine": 9,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<object>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 43,
                  "endLine": 26,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<Type>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 39,
                  "endLine": 27,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/SpyExecutionSink.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/SpyMessageBus.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1067",
          "level": "note",
          "message": "Type EqualityAssertsTests.Equal.EquatableBaseClass should override Equals because it implements IEquatable<T>",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/EqualityAssertsTests.cs",
                "region": {
                  "startLine": 258,
                  "startColumn": 9,
                  "endLine": 258,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1067",
          "level": "note",
          "message": "Type EqualityAssertsTests.Equal.StringWrapper should override Equals because it implements IEquatable<T>",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/EqualityAssertsTests.cs",
                "region": {
                  "startLine": 344,
                  "startColumn": 9,
                  "endLine": 344,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/ExceptionAssertsTests.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2211",
          "level": "note",
          "message": "Non-constant fields should not be visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/Sdk/ArgumentFormatterTests.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 42,
                  "endLine": 176,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1067",
          "level": "note",
          "message": "Type EqualityAssertsTests.Equal.SpyEquatable should override Equals because it implements IEquatable<T>",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/EqualityAssertsTests.cs",
                "region": {
                  "startLine": 710,
                  "startColumn": 16,
                  "endLine": 710,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2211",
          "level": "note",
          "message": "Non-constant fields should not be visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/Sdk/ArgumentFormatterTests.cs",
                "region": {
                  "startLine": 308,
                  "startColumn": 22,
                  "endLine": 308,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2211",
          "level": "note",
          "message": "Non-constant fields should not be visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/Sdk/ArgumentFormatterTests.cs",
                "region": {
                  "startLine": 410,
                  "startColumn": 42,
                  "endLine": 410,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/Sdk/Exceptions/AllExceptionTests.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/IdentityAssertsTests.cs",
                "region": {
                  "startLine": 4,
                  "startColumn": 14,
                  "endLine": 4,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/EquivalenceAssertsTests.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/FailAssertsTests.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/MemoryAssertsTests.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2012",
          "level": "note",
          "message": "ValueTask instances should not have their result directly accessed unless the instance has already completed. Unlike Tasks, calling Result or GetAwaiter().GetResult() on a ValueTask is not guaranteed to block until the operation completes. If you can't simply await the instance, consider first checking its IsCompleted property (or asserting it's true if you know that to be the case).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/Program.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "endLine": 13,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1816",
          "level": "note",
          "message": "Change SpyExecutionSink.Dispose() to call GC.SuppressFinalize(object). This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/SpyExecutionSink.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 14,
                  "endLine": 15,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1816",
          "level": "note",
          "message": "Change SpyMessageBus.Dispose() to call GC.SuppressFinalize(object). This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/SpyMessageBus.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 14,
                  "endLine": 17,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'RunAsync' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/AcceptanceTests/AcceptanceTestV3.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 46,
                  "endLine": 23,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1816",
          "level": "note",
          "message": "Change SpyMessageSink<TFinalMessage>.Dispose() to call GC.SuppressFinalize(object). This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/SpyMessageSink.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 14,
                  "endLine": 62,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<_ITypeInfo>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/common.tests/TestDoubles/Mocks.Reflection.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 52,
                  "endLine": 27,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<object>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/CollectionAssertsTests.cs",
                "region": {
                  "startLine": 1326,
                  "startColumn": 69,
                  "endLine": 1326,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<object>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/CollectionAssertsTests.cs",
                "region": {
                  "startLine": 1280,
                  "startColumn": 21,
                  "endLine": 1280,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'FailingProperty' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/ExceptionAssertsTests.cs",
                "region": {
                  "startLine": 955,
                  "startColumn": 14,
                  "endLine": 955,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3415",
          "level": "warning",
          "message": "Make sure these 2 arguments are in the correct order: expected value, actual value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/EqualityAssertsTests.cs",
                "region": {
                  "startLine": 945,
                  "startColumn": 62,
                  "endLine": 945,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<int>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/CollectionAssertsTests.cs",
                "region": {
                  "startLine": 808,
                  "startColumn": 79,
                  "endLine": 808,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'Property1'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/PropertyAssertsTests.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 62,
                  "endLine": 161,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1507",
          "level": "note",
          "message": "Use nameof in place of string literal 'Property2'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/PropertyAssertsTests.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 62,
                  "endLine": 166,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'SuccessMemoryCasesString' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/MemoryAssertsTests.cs",
                "region": {
                  "startLine": 367,
                  "startColumn": 15,
                  "endLine": 367,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<int>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/CollectionAssertsTests.cs",
                "region": {
                  "startLine": 773,
                  "startColumn": 85,
                  "endLine": 773,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3415",
          "level": "warning",
          "message": "Make sure these 2 arguments are in the correct order: expected value, actual value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/EqualityAssertsTests.cs",
                "region": {
                  "startLine": 878,
                  "startColumn": 62,
                  "endLine": 878,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<object>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/CollectionAssertsTests.cs",
                "region": {
                  "startLine": 553,
                  "startColumn": 75,
                  "endLine": 553,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<int>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/CollectionAssertsTests.cs",
                "region": {
                  "startLine": 527,
                  "startColumn": 73,
                  "endLine": 527,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<int>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/CollectionAssertsTests.cs",
                "region": {
                  "startLine": 485,
                  "startColumn": 79,
                  "endLine": 485,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3415",
          "level": "warning",
          "message": "Make sure these 2 arguments are in the correct order: expected value, actual value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/Sdk/Exceptions/EqualExceptionTests.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 6,
                  "endLine": 88,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<object>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/CollectionAssertsTests.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 74,
                  "endLine": 100,
                  "endColumn": 87
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<object>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/CollectionAssertsTests.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 74,
                  "endLine": 101,
                  "endColumn": 87
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<object>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/CollectionAssertsTests.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 58,
                  "endLine": 27,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1825",
          "level": "note",
          "message": "Avoid unnecessary zero-length array allocations.  Use Array.Empty<object>() instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/CollectionAssertsTests.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 58,
                  "endLine": 28,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'SuccessSpanCasesString' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert.tests/Asserts/SpanAssertsTests.cs",
                "region": {
                  "startLine": 432,
                  "startColumn": 15,
                  "endLine": 432,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1050": {
          "id": "CA1050",
          "shortDescription": "Declare types in namespaces",
          "fullDescription": "Types are declared in namespaces to prevent name collisions and as a way to organize related types in an object hierarchy.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1050",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1067": {
          "id": "CA1067",
          "shortDescription": "Override Object.Equals(object) when implementing IEquatable<T>",
          "fullDescription": "When a type T implements the interface IEquatable<T>, it suggests to a user who sees a call to the Equals method in source code that an instance of the type can be equated with an instance of any other type. The user might be confused if their attempt to equate the type with an instance of another type fails to compile. This violates the \"principle of least surprise\".",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1067",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1507": {
          "id": "CA1507",
          "shortDescription": "Use nameof to express symbol names",
          "fullDescription": "Using nameof helps keep your code valid when refactoring.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1507",
          "properties": {
            "category": "Maintainability",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1816": {
          "id": "CA1816",
          "shortDescription": "Dispose methods should call SuppressFinalize",
          "fullDescription": "A method that is an implementation of Dispose does not call GC.SuppressFinalize; or a method that is not an implementation of Dispose calls GC.SuppressFinalize; or a method calls GC.SuppressFinalize and passes something other than this (Me in Visual Basic).",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1816",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1825": {
          "id": "CA1825",
          "shortDescription": "Avoid zero-length array allocations",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1825",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2012": {
          "id": "CA2012",
          "shortDescription": "Use ValueTasks correctly",
          "fullDescription": "ValueTasks returned from member invocations are intended to be directly awaited.  Attempts to consume a ValueTask multiple times or to directly access one's result before it's known to be completed may result in an exception or corruption.  Ignoring such a ValueTask is likely an indication of a functional bug and may degrade performance.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2012",
          "properties": {
            "category": "Reliability",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2211": {
          "id": "CA2211",
          "shortDescription": "Non-constant fields should not be visible",
          "fullDescription": "Static fields that are neither constants nor read-only are not thread-safe. Access to such a field must be carefully controlled and requires advanced programming techniques to synchronize access to the class object.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2211",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS0414": {
          "id": "CS0414",
          "shortDescription": "Field is assigned but its value is never used",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0414)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS0618": {
          "id": "CS0618",
          "shortDescription": "Type or member is obsolete",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS1998": {
          "id": "CS1998",
          "shortDescription": "Async method lacks 'await' operators and will run synchronously",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1998)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S3415": {
          "id": "S3415",
          "shortDescription": "Assertion arguments should be passed in the correct order",
          "fullDescription": "The standard assertions library methods such as AreEqual and AreSame in MSTest and NUnit, or Equal and Same in XUnit, expect the first argument to be the expected value and the second argument to be the actual value. Swap them, and your test will still have the same outcome (succeed/fail when it should) but the error messages will be confusing.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3415",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}