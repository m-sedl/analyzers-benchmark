{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.0.0.0",
        "fileVersion": "4.0.1-1.22181.2 (487283bc)",
        "semanticVersion": "4.0.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 6,
                  "endLine": 198,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/AppVeyorReporterMessageHandler.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 6,
                  "endLine": 128,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/AppVeyorReporterMessageHandler.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 6,
                  "endLine": 151,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/AppVeyorReporterMessageHandler.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 6,
                  "endLine": 176,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/DefaultRunnerReporterMessageHandler.cs",
                "region": {
                  "startLine": 585,
                  "startColumn": 6,
                  "endLine": 585,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/TeamCityReporterMessageHandler.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 7,
                  "endLine": 198,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?s$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/ParallelismOption.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 13,
                  "endLine": 9,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2346",
          "level": "warning",
          "message": "Rename 'none' to 'None'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/ParallelismOption.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 2,
                  "endLine": 14,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'ConfigReader_Json' to match pascal case naming rules, consider using 'ConfigReaderJson'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 21,
                  "endLine": 12,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'GetCulture' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 24,
                  "endLine": 22,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 24,
                  "endLine": 299,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'GetDiagnosticMessages' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 22,
                  "endLine": 32,
                  "endColumn": 43
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 309,
                  "startColumn": 22,
                  "endLine": 309,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'GetDiagnosticMessagesOrDefault' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 21,
                  "endLine": 43,
                  "endColumn": 51
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 345,
                  "startColumn": 21,
                  "endLine": 345,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'GetInternalDiagnosticMessages' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 22,
                  "endLine": 78,
                  "endColumn": 51
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 376,
                  "startColumn": 22,
                  "endLine": 376,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'GetInternalDiagnosticMessagesOrDefault' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 21,
                  "endLine": 89,
                  "endColumn": 59
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 387,
                  "startColumn": 21,
                  "endLine": 387,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'GetSynchronousMessageReporting' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 168,
                  "startColumn": 22,
                  "endLine": 168,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 433,
                  "startColumn": 22,
                  "endLine": 433,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'GetSynchronousMessageReportingOrDefault' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 21,
                  "endLine": 179,
                  "endColumn": 60
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 444,
                  "startColumn": 21,
                  "endLine": 444,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'SetCulture' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 21,
                  "endLine": 193,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 458,
                  "startColumn": 21,
                  "endLine": 458,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'SetDiagnosticMessages' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 205,
                  "startColumn": 21,
                  "endLine": 205,
                  "endColumn": 42
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 470,
                  "startColumn": 21,
                  "endLine": 470,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'SetInternalDiagnosticMessages' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 21,
                  "endLine": 231,
                  "endColumn": 50
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 482,
                  "startColumn": 21,
                  "endLine": 482,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'SetSynchronousMessageReporting' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 281,
                  "startColumn": 21,
                  "endLine": 281,
                  "endColumn": 51
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
                "region": {
                  "startLine": 555,
                  "startColumn": 21,
                  "endLine": 555,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename interface '_ISourceInformationProvider' to match pascal case naming rules, trim underscores from the name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/_ISourceInformationProvider.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 18,
                  "endLine": 9,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2953",
          "level": "warning",
          "message": "Either implement 'IDisposable.Dispose', or totally rename this method to prevent confusion.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/AppVeyorClient.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 14,
                  "endLine": 43,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingFailSkipSink.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 14,
                  "endLine": 13,
                  "endColumn": 36
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingFailSkipSink.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 14,
                  "endLine": 13,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingFailSkipSink.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 14,
                  "endLine": 36,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'DelegatingFailSkipSink' or mark the type as 'sealed'.",
              "1": "'DelegatingFailSkipSink.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingLongRunningTestDetectionSink.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 14,
                  "endLine": 14,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingLongRunningTestDetectionSink.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 14,
                  "endLine": 14,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingLongRunningTestDetectionSink.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 22,
                  "endLine": 91,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingLongRunningTestDetectionSink.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 9,
                  "endLine": 91,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'DelegatingLongRunningTestDetectionSink' or mark the type as 'sealed'.",
              "1": "'DelegatingLongRunningTestDetectionSink.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'.",
              "2": "'DelegatingLongRunningTestDetectionSink.Dispose()' should not be 'virtual' or 'abstract'."
            }
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class '_NullSourceInformationProvider' to match pascal case naming rules, trim underscores from the name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/_NullSourceInformationProvider.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2953",
          "level": "warning",
          "message": "Either implement 'IDisposable.Dispose', or totally rename this method to prevent confusion.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 14,
                  "endLine": 53,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/TestDiscoverySink.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 14,
                  "endLine": 13,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/TestDiscoverySink.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 14,
                  "endLine": 13,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/TestDiscoverySink.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 14,
                  "endLine": 52,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'TestDiscoverySink' or mark the type as 'sealed'.",
              "1": "'TestDiscoverySink.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class '_TestFrameworkOptions' to match pascal case naming rules, trim underscores from the name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/_TestFrameworkOptions.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 14,
                  "endLine": 16,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Loggers/ConsoleRunnerLogger.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 8,
                  "endLine": 84,
                  "endColumn": 21
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Loggers/ConsoleRunnerLogger.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 8,
                  "endLine": 84,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Loggers/ConsoleRunnerLogger.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 15,
                  "endLine": 88,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'ColorRestorer' or mark the type as 'sealed'.",
              "1": "'ColorRestorer.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S1939",
          "level": "warning",
          "message": "'AggregateMessageSink' implements '_IMessageSink' so '_IMessageSink' can be removed from the inheritance list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/TestMessageSink.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 52,
                  "endLine": 9,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "redundantIndex": "1"
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingSummarySink.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 14,
                  "endLine": 29,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingSummarySink.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 14,
                  "endLine": 29,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingSummarySink.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 14,
                  "endLine": 81,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'DelegatingSummarySink' or mark the type as 'sealed'.",
              "1": "'DelegatingSummarySink.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/DefaultRunnerReporterMessageHandler.cs",
                "region": {
                  "startLine": 676,
                  "startColumn": 8,
                  "endLine": 676,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/DefaultRunnerReporterMessageHandler.cs",
                "region": {
                  "startLine": 676,
                  "startColumn": 8,
                  "endLine": 676,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/DefaultRunnerReporterMessageHandler.cs",
                "region": {
                  "startLine": 689,
                  "startColumn": 15,
                  "endLine": 689,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'ReaderWriterLockWrapper' or mark the type as 'sealed'.",
              "1": "'ReaderWriterLockWrapper.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingXmlCreationSink.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 14,
                  "endLine": 17,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingXmlCreationSink.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 14,
                  "endLine": 17,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingXmlCreationSink.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 14,
                  "endLine": 153,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'DelegatingXmlCreationSink' or mark the type as 'sealed'.",
              "1": "'DelegatingXmlCreationSink.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S3963",
          "level": "warning",
          "message": "Initialize all 'static fields' inline and remove the 'static constructor'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Utility/StackFrameTransformer.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 18,
                  "endColumn": 3
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2486",
          "level": "warning",
          "message": "Handle the exception or explain in a comment why it can be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 3,
                  "endLine": 55,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 23 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 191,
                  "startColumn": 24,
                  "endLine": 191,
                  "endColumn": 51
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 3,
                  "endLine": 195,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 202,
                  "startColumn": 3,
                  "endLine": 202,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 211,
                  "startColumn": 4,
                  "endLine": 211,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 4,
                  "endLine": 215,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 4,
                  "endLine": 220,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 222,
                  "startColumn": 5,
                  "endLine": 222,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 222,
                  "startColumn": 22,
                  "endLine": 222,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 5,
                  "endLine": 226,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 228,
                  "startColumn": 6,
                  "endLine": 228,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 233,
                  "startColumn": 6,
                  "endLine": 233,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 30 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 17,
                  "endLine": 100,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 4,
                  "endLine": 112,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 4,
                  "endLine": 116,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 5,
                  "endLine": 121,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 5,
                  "endLine": 124,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 6,
                  "endLine": 128,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 6,
                  "endLine": 137,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 6,
                  "endLine": 140,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 42,
                  "endLine": 140,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 5,
                  "endLine": 147,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 27,
                  "endLine": 147,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 5,
                  "endLine": 151,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 6,
                  "endLine": 155,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 6,
                  "endLine": 167,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 5,
                  "endLine": 170,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 177,
                  "startColumn": 5,
                  "endLine": 177,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 180,
                  "startColumn": 5,
                  "endLine": 180,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 5,
                  "endLine": 185,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 187,
                  "startColumn": 6,
                  "endLine": 187,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 187,
                  "startColumn": 33,
                  "endLine": 187,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 199,
                  "startColumn": 5,
                  "endLine": 199,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 202,
                  "startColumn": 48,
                  "endLine": 202,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 208,
                  "startColumn": 5,
                  "endLine": 208,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 208,
                  "startColumn": 26,
                  "endLine": 208,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 217,
                  "startColumn": 4,
                  "endLine": 217,
                  "endColumn": 9
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+1",
              "16": "+1",
              "17": "+2 (incl 1 for nesting)",
              "18": "+1",
              "19": "+1",
              "2": "+1",
              "20": "+2 (incl 1 for nesting)",
              "21": "+1",
              "22": "+1",
              "23": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 9,
                  "endLine": 55,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2486",
          "level": "warning",
          "message": "Handle the exception or explain in a comment why it can be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/v3/BufferedTcpClient.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 6,
                  "endLine": 117,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/v3/BufferedTcpClient.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 12,
                  "endLine": 117,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2486",
          "level": "warning",
          "message": "Handle the exception or explain in a comment why it can be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 3,
                  "endLine": 159,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 83 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 14,
                  "endLine": 60,
                  "endColumn": 22
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 4,
                  "endLine": 67,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 5,
                  "endLine": 72,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 56,
                  "endLine": 72,
                  "endColumn": 58
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 6,
                  "endLine": 76,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 6,
                  "endLine": 78,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 6,
                  "endLine": 80,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 6,
                  "endLine": 82,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 6,
                  "endLine": 84,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 6,
                  "endLine": 86,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 6,
                  "endLine": 88,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 6,
                  "endLine": 90,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 5,
                  "endLine": 93,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 63,
                  "endLine": 93,
                  "endColumn": 65
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 6,
                  "endLine": 95,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 7,
                  "endLine": 97,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 6,
                  "endLine": 100,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 7,
                  "endLine": 102,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 6,
                  "endLine": 105,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 7,
                  "endLine": 107,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 5,
                  "endLine": 111,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 6,
                  "endLine": 114,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 7,
                  "endLine": 116,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 8,
                  "endLine": 118,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 8,
                  "endLine": 120,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 8,
                  "endLine": 122,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 9,
                  "endLine": 125,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 27,
                  "endLine": 125,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 7,
                  "endLine": 129,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 8,
                  "endLine": 131,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 7,
                  "endLine": 134,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 8,
                  "endLine": 136,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 7,
                  "endLine": 139,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 141,
                  "startColumn": 8,
                  "endLine": 141,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 7,
                  "endLine": 144,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 8,
                  "endLine": 146,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 8,
                  "endLine": 148,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 8,
                  "endLine": 150,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 3,
                  "endLine": 159,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+3 (incl 2 for nesting)",
              "15": "+4 (incl 3 for nesting)",
              "16": "+1",
              "17": "+4 (incl 3 for nesting)",
              "18": "+1",
              "19": "+4 (incl 3 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "20": "+1",
              "21": "+3 (incl 2 for nesting)",
              "22": "+4 (incl 3 for nesting)",
              "23": "+5 (incl 4 for nesting)",
              "24": "+1",
              "25": "+1",
              "26": "+6 (incl 5 for nesting)",
              "27": "+1",
              "28": "+1",
              "29": "+5 (incl 4 for nesting)",
              "3": "+1",
              "30": "+1",
              "31": "+5 (incl 4 for nesting)",
              "32": "+1",
              "33": "+5 (incl 4 for nesting)",
              "34": "+1",
              "35": "+5 (incl 4 for nesting)",
              "36": "+1",
              "37": "+1",
              "38": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 9,
                  "endLine": 159,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 7,
                  "endLine": 107,
                  "endColumn": 9
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Configuration/ConfigReader_Json.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 11,
                  "endLine": 105,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 267,
                  "startColumn": 25,
                  "endLine": 267,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 272,
                  "startColumn": 3,
                  "endLine": 272,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 3,
                  "endLine": 275,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 4,
                  "endLine": 280,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 285,
                  "startColumn": 4,
                  "endLine": 285,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 287,
                  "startColumn": 4,
                  "endLine": 287,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 290,
                  "startColumn": 5,
                  "endLine": 290,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 292,
                  "startColumn": 6,
                  "endLine": 292,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 300,
                  "startColumn": 5,
                  "endLine": 300,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 314,
                  "startColumn": 5,
                  "endLine": 314,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 317,
                  "startColumn": 3,
                  "endLine": 317,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 321,
                  "startColumn": 4,
                  "endLine": 321,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1643",
          "level": "warning",
          "message": "Use a StringBuilder instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 329,
                  "startColumn": 5,
                  "endLine": 329,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loop should be simplified by calling Select(projectAssembly => projectAssembly.Configuration))",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
                "region": {
                  "startLine": 541,
                  "startColumn": 35,
                  "endLine": 541,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3963",
          "level": "warning",
          "message": "Initialize all 'static fields' inline and remove the 'static constructor'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Utility/ConsoleHelper.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 2,
                  "endLine": 44,
                  "endColumn": 3
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3877",
          "level": "warning",
          "message": "Remove this 'throw' statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/TestDiscoverySink.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3877",
          "level": "warning",
          "message": "Remove this 'throw' statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingXmlCreationSink.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 4,
                  "endLine": 156,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3877",
          "level": "warning",
          "message": "Remove this 'throw' statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingSummarySink.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 4,
                  "endLine": 84,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 8 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingSummarySink.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 30,
                  "endLine": 62,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3877",
          "level": "warning",
          "message": "Remove this 'throw' statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/DelegatingSinks/DelegatingFailSkipSink.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2589",
          "level": "warning",
          "message": "Change this condition so that it does not always evaluate to 'true'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Sinks/AggregateMessageSink.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 9,
                  "endLine": 51,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 25 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 210,
                  "startColumn": 13,
                  "endLine": 210,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 3,
                  "endLine": 215,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 221,
                  "startColumn": 3,
                  "endLine": 221,
                  "endColumn": 5
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 4,
                  "endLine": 226,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 3,
                  "endLine": 235,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 4,
                  "endLine": 238,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 251,
                  "startColumn": 22,
                  "endLine": 251,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 269,
                  "startColumn": 4,
                  "endLine": 269,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 4,
                  "endLine": 275,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 5,
                  "endLine": 280,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 283,
                  "startColumn": 5,
                  "endLine": 283,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 283,
                  "startColumn": 66,
                  "endLine": 283,
                  "endColumn": 68
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 286,
                  "startColumn": 5,
                  "endLine": 286,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 289,
                  "startColumn": 6,
                  "endLine": 289,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 292,
                  "startColumn": 6,
                  "endLine": 292,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 292,
                  "startColumn": 57,
                  "endLine": 292,
                  "endColumn": 59
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/VstsClient.cs",
                "region": {
                  "startLine": 301,
                  "startColumn": 3,
                  "endLine": 301,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "14": "+1",
              "15": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 8 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/AppVeyorReporterMessageHandler.cs",
                "region": {
                  "startLine": 203,
                  "startColumn": 47,
                  "endLine": 211,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2486",
          "level": "warning",
          "message": "Handle the exception or explain in a comment why it can be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/AppVeyorClient.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 3,
                  "endLine": 75,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Reporters/AppVeyorClient.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 9,
                  "endLine": 75,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3236",
          "level": "warning",
          "message": "Remove this argument from the method call; it hides the caller information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Messages/TestAssemblyExecutionStarting.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 50,
                  "endLine": 22,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3236",
          "level": "warning",
          "message": "Remove this argument from the method call; it hides the caller information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Messages/TestAssemblyExecutionStarting.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 58,
                  "endLine": 31,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3236",
          "level": "warning",
          "message": "Remove this argument from the method call; it hides the caller information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Messages/TestAssemblyExecutionFinished.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 50,
                  "endLine": 23,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3236",
          "level": "warning",
          "message": "Remove this argument from the method call; it hides the caller information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Messages/TestAssemblyExecutionFinished.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 58,
                  "endLine": 32,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3236",
          "level": "warning",
          "message": "Remove this argument from the method call; it hides the caller information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Messages/TestAssemblyExecutionFinished.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 58,
                  "endLine": 41,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3236",
          "level": "warning",
          "message": "Remove this argument from the method call; it hides the caller information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Messages/TestAssemblyDiscoveryStarting.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 50,
                  "endLine": 33,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3236",
          "level": "warning",
          "message": "Remove this argument from the method call; it hides the caller information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Messages/TestAssemblyDiscoveryStarting.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 58,
                  "endLine": 42,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3236",
          "level": "warning",
          "message": "Remove this argument from the method call; it hides the caller information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Messages/TestAssemblyDiscoveryFinished.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 50,
                  "endLine": 22,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3236",
          "level": "warning",
          "message": "Remove this argument from the method call; it hides the caller information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Messages/TestAssemblyDiscoveryFinished.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 58,
                  "endLine": 31,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 8 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/_TestFrameworkOptions.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 60,
                  "endLine": 101,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3236",
          "level": "warning",
          "message": "Remove this argument from the method call; it hides the caller information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/XunitProjectAssembly.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 57,
                  "endLine": 90,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3236",
          "level": "warning",
          "message": "Remove this argument from the method call; it hides the caller information.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/XunitProject.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 56,
                  "endLine": 40,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/XunitFilters.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 58,
                  "endLine": 139,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/XunitFilters.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 25,
                  "endLine": 143,
                  "endColumn": 51
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/XunitFilters.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 8,
                  "endLine": 144,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/XunitFilters.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 26,
                  "endLine": 178,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/XunitFilters.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 9,
                  "endLine": 179,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/XunitFilters.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 25,
                  "endLine": 219,
                  "endColumn": 51
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/XunitFilters.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 8,
                  "endLine": 220,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/XunitFilters.cs",
                "region": {
                  "startLine": 254,
                  "startColumn": 26,
                  "endLine": 254,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/XunitFilters.cs",
                "region": {
                  "startLine": 255,
                  "startColumn": 9,
                  "endLine": 255,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/StackFrameInfo.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 107,
                  "endLine": 82,
                  "endColumn": 129
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2486",
          "level": "warning",
          "message": "Handle the exception or explain in a comment why it can be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/StackFrameInfo.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 3,
                  "endLine": 89,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.runner.common/Frameworks/StackFrameInfo.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 9,
                  "endLine": 89,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks whether or not type names are using PascalCase. To reduce noise, two consecutive upper case characters are allowed unless they form the whole type name. So, MyXClass is compliant, but XC on its own is not.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code’s readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S107": {
          "id": "S107",
          "shortDescription": "Methods should not have too many parameters",
          "fullDescription": "A long parameter list can indicate that a new structure should be created to wrap the numerous parameters or that the function is doing too many things.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-107",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S108": {
          "id": "S108",
          "shortDescription": "Nested blocks of code should not be left empty",
          "fullDescription": "Most of the time a block of code is empty when a piece of code is really missing. So such empty block must be either filled or removed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-108",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1125": {
          "id": "S1125",
          "shortDescription": "Boolean literals should not be redundant",
          "fullDescription": "Redundant Boolean literals should be removed from expressions to improve readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1125",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1135": {
          "id": "S1135",
          "shortDescription": "Track uses of \"TODO\" tags",
          "fullDescription": "TODO tags are commonly used to mark places where some more code is required, but which the developer wants to implement later.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1135",
          "properties": {
            "category": "Info Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1643": {
          "id": "S1643",
          "shortDescription": "Strings should not be concatenated using '+' in a loop",
          "fullDescription": "StringBuilder is more efficient than string concatenation, especially when the operator is repeated over and over as in loops.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1643",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1939": {
          "id": "S1939",
          "shortDescription": "Inheritance list should not be redundant",
          "fullDescription": "An inheritance list entry is redundant if:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1939",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2342": {
          "id": "S2342",
          "shortDescription": "Enumeration types should comply with a naming convention",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks that all enum names match a provided regular expression.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2342",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2346": {
          "id": "S2346",
          "shortDescription": "Flags enumerations zero-value members should be named \"None\"",
          "fullDescription": "Consistent use of \"None\" in flags enumerations indicates that all flag values are cleared. The value 0 should not be used to indicate any other state, since there is no way to check that the bit 0 is set.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2346",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2486": {
          "id": "S2486",
          "shortDescription": "Generic exceptions should not be ignored",
          "fullDescription": "When exceptions occur, it is usually a bad idea to simply ignore them. Instead, it is better to handle them properly, or at least to log them.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2486",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2589": {
          "id": "S2589",
          "shortDescription": "Boolean expressions should not be gratuitous",
          "fullDescription": "If a boolean expression doesn’t change the evaluation of the condition, then it is entirely unnecessary, and can be removed. If it is gratuitous because it does not match the programmer’s intent, then it’s a bug and the expression should be fixed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2589",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2953": {
          "id": "S2953",
          "shortDescription": "Methods named \"Dispose\" should implement \"IDisposable.Dispose\"",
          "fullDescription": "Dispose as a method name should be used exclusively to implement IDisposable.Dispose to prevent any confusion.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2953",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3011": {
          "id": "S3011",
          "shortDescription": "Reflection should not be used to increase accessibility of classes, methods, or fields",
          "fullDescription": "This rule raises an issue when reflection is used to change the visibility of a class, method or field, and when it is used to directly update a field value. Altering or bypassing the accessibility of classes, methods, or fields violates the encapsulation principle and could lead to run-time errors.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3011",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3236": {
          "id": "S3236",
          "shortDescription": "Caller information arguments should not be provided explicitly",
          "fullDescription": "Caller information attributes: CallerFilePathAttribute, CallerLineNumberAttribute, and CallerArgumentExpressionAttribute provide a way to get information about the caller of a method through optional parameters. But the arguments for these optional parameters are only generated if they are not explicitly defined in the call. Thus, specifying the argument values defeats the purpose of the attributes.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3236",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3267": {
          "id": "S3267",
          "shortDescription": "Loops should be simplified with \"LINQ\" expressions",
          "fullDescription": "When a loop is filtering, selecting or aggregating, those functions can be handled with a clearer, more concise LINQ expression instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3267",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3877": {
          "id": "S3877",
          "shortDescription": "Exceptions should not be thrown from unexpected methods",
          "fullDescription": "It is expected that some methods should be called with caution, but others, such as ToString, are expected to \"just work\". Throwing an exception from such a method is likely to break callers' code unexpectedly.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3877",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3963": {
          "id": "S3963",
          "shortDescription": "\"static\" fields should be initialized inline",
          "fullDescription": "When a static constructor serves no other purpose that initializing static fields, it comes with an unnecessary performance cost because the compiler generates a check before each static method or instance constructor invocation.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3963",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4136": {
          "id": "S4136",
          "shortDescription": "Method overloads should be grouped together",
          "fullDescription": "For clarity, all overloads of the same method should be grouped together. That lets both users and maintainers quickly understand all the current available options.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4136",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}