{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.0.0.0",
        "fileVersion": "4.0.1-1.22181.2 (487283bc)",
        "semanticVersion": "4.0.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/AssertCollectionCountException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/AssertCollectionCountException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/AssertCollectionCountException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'AssertCollectionCountException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'AssertCollectionCountException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/IsNotTypeException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 26
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/IsNotTypeException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/IsNotTypeException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'IsNotTypeException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'IsNotTypeException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/IsTypeException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/IsTypeException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/IsTypeException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'IsTypeException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'IsTypeException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/MultipleException.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 8,
                  "endLine": 19,
                  "endColumn": 25
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/MultipleException.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 2,
                  "endLine": 19,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/MultipleException.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 2,
                  "endLine": 19,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'MultipleException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'MultipleException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/MatchesException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/MatchesException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/MatchesException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'MatchesException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'MatchesException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NotEmptyException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 25
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NotEmptyException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NotEmptyException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'NotEmptyException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'NotEmptyException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NotEqualException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 25
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NotEqualException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NotEqualException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'NotEqualException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'NotEqualException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NotInRangeException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NotInRangeException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NotInRangeException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'NotInRangeException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'NotInRangeException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NotNullException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NotNullException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NotNullException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'NotNullException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'NotNullException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NotSameException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NotSameException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NotSameException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'NotSameException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'NotSameException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NullException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 21
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NullException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/NullException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'NullException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'NullException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ParameterCountMismatchException.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 8,
                  "endLine": 18,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ParameterCountMismatchException.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 2,
                  "endLine": 18,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ParameterCountMismatchException.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 2,
                  "endLine": 18,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'ParameterCountMismatchException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'ParameterCountMismatchException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ProperSubsetException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 29
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ProperSubsetException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ProperSubsetException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'ProperSubsetException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'ProperSubsetException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ProperSupersetException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ProperSupersetException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ProperSupersetException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'ProperSupersetException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'ProperSupersetException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/PropertyChangedException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/PropertyChangedException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/PropertyChangedException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'PropertyChangedException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'PropertyChangedException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/RaisesException.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 8,
                  "endLine": 19,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/RaisesException.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 2,
                  "endLine": 19,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/RaisesException.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 2,
                  "endLine": 19,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'RaisesException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'RaisesException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/SameException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 21
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/SameException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/SameException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'SameException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'SameException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/SingleException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/SingleException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/SingleException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'SingleException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'SingleException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/SkipException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 21
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/SkipException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/SkipException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'SkipException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'SkipException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/SubsetException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/SubsetException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/SubsetException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'SubsetException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'SubsetException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/SupersetException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 25
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/SupersetException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/SupersetException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'SupersetException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'SupersetException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ThrowsException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ThrowsException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ThrowsException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'ThrowsException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'ThrowsException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/TrueException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 21
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/TrueException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/TrueException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'TrueException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'TrueException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/StartsWithException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/StartsWithException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/StartsWithException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'StartsWithException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'StartsWithException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/EndsWithException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 25
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/EndsWithException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/EndsWithException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'EndsWithException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'EndsWithException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/FailException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 21
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/FailException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/FailException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'FailException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'FailException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/FalseException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 22
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/FalseException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/FalseException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'FalseException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'FalseException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/InRangeException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/InRangeException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/InRangeException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'InRangeException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'InRangeException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/EquivalentException.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 8,
                  "endLine": 18,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/EquivalentException.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 2,
                  "endLine": 18,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/EquivalentException.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 2,
                  "endLine": 18,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'EquivalentException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'EquivalentException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/XunitException.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 8,
                  "endLine": 18,
                  "endColumn": 22
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/XunitException.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 2,
                  "endLine": 18,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/XunitException.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 2,
                  "endLine": 18,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'XunitException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'XunitException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/IsAssignableFromException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 33
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/IsAssignableFromException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/IsAssignableFromException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'IsAssignableFromException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'IsAssignableFromException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ContainsException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 25
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ContainsException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ContainsException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'ContainsException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'ContainsException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/DoesNotContainException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 8,
                  "endLine": 15,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/DoesNotContainException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/DoesNotContainException.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'DoesNotContainException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'DoesNotContainException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/DoesNotMatchException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 29
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/DoesNotMatchException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/DoesNotMatchException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'DoesNotMatchException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'DoesNotMatchException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/EmptyException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 22
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/EmptyException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/EmptyException.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'EmptyException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'EmptyException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ContainsDuplicateException.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 8,
                  "endLine": 19,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ContainsDuplicateException.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 2,
                  "endLine": 19,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/ContainsDuplicateException.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 2,
                  "endLine": 19,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'ContainsDuplicateException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'ContainsDuplicateException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S4275",
          "level": "warning",
          "message": "Refactor this getter so that it actually refers to the field 'stackTrace'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/CollectionException.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 9,
                  "endLine": 106,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/EqualException.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 8,
                  "endLine": 22,
                  "endColumn": 22
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/EqualException.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 2,
                  "endLine": 22,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/EqualException.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 2,
                  "endLine": 22,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'EqualException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'EqualException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/CollectionException.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 8,
                  "endLine": 18,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/CollectionException.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 2,
                  "endLine": 18,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/CollectionException.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 2,
                  "endLine": 18,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'CollectionException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'CollectionException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S2365",
          "level": "warning",
          "message": "Refactor 'Failures' into a method, properties should not copy collections.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/AllException.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 4,
                  "endLine": 51,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/AllException.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 8,
                  "endLine": 19,
                  "endColumn": 20
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/AllException.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 2,
                  "endLine": 19,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/AllException.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 2,
                  "endLine": 19,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'AllException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'AllException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/AssertActualExpectedException.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 8,
                  "endLine": 24,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/AssertActualExpectedException.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 2,
                  "endLine": 24,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/AssertActualExpectedException.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 2,
                  "endLine": 24,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'AssertActualExpectedException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'AssertActualExpectedException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private field 'NullableTypeInfo'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3260",
          "level": "warning",
          "message": "Private classes or records which are not derived in the current assembly should be marked as 'sealed'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 368,
                  "startColumn": 17,
                  "endLine": 368,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2743",
          "level": "warning",
          "message": "A static field in a generic type is not shared among instances of different close constructed types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 37,
                  "endLine": 23,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2743",
          "level": "warning",
          "message": "A static field in a generic type is not shared among instances of different close constructed types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 28,
                  "endLine": 24,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2743",
          "level": "warning",
          "message": "A static field in a generic type is not shared among instances of different close constructed types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 300,
                  "startColumn": 22,
                  "endLine": 300,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'Throws' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/ExceptionAsserts.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 19,
                  "endLine": 27,
                  "endColumn": 25
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/ExceptionAsserts.cs",
                "region": {
                  "startLine": 149,
                  "startColumn": 27,
                  "endLine": 149,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/ExceptionAsserts.cs",
                "region": {
                  "startLine": 265,
                  "startColumn": 19,
                  "endLine": 265,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload",
              "1": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'ThrowsAsync' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/ExceptionAsserts.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 31,
                  "endLine": 74,
                  "endColumn": 42
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/ExceptionAsserts.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 39,
                  "endLine": 200,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/ExceptionAsserts.cs",
                "region": {
                  "startLine": 342,
                  "startColumn": 31,
                  "endLine": 342,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload",
              "1": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S1117",
          "level": "warning",
          "message": "Rename 'stackTrace' which hides the field with the same name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/Exceptions/XunitException.cs",
                "region": {
                  "startLine": 113,
                  "startColumn": 8,
                  "endLine": 113,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 31,
                  "endLine": 75,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 4,
                  "endLine": 89,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 7,
                  "endLine": 92,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 4,
                  "endLine": 95,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 4,
                  "endLine": 99,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 4,
                  "endLine": 103,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 4,
                  "endLine": 106,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 5,
                  "endLine": 122,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 127,
                  "startColumn": 45,
                  "endLine": 127,
                  "endColumn": 46
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 6,
                  "endLine": 131,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 36,
                  "endLine": 131,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 6,
                  "endLine": 138,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 6,
                  "endLine": 143,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 38,
                  "endLine": 143,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 5,
                  "endLine": 153,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 38,
                  "endLine": 153,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 8,
                  "endLine": 156,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 5,
                  "endLine": 162,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 36,
                  "endLine": 162,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertHelper.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 31,
                  "endLine": 75,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+2 (incl 1 for nesting)",
              "13": "+1",
              "14": "+1",
              "15": "+1",
              "16": "+2 (incl 1 for nesting)",
              "17": "+1",
              "18": "+1",
              "19": "+1 (recursion)",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 30 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 17,
                  "endLine": 100,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 4,
                  "endLine": 112,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 4,
                  "endLine": 116,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 5,
                  "endLine": 121,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 5,
                  "endLine": 124,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 6,
                  "endLine": 128,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 6,
                  "endLine": 137,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 6,
                  "endLine": 140,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 42,
                  "endLine": 140,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 5,
                  "endLine": 147,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 27,
                  "endLine": 147,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 5,
                  "endLine": 151,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 6,
                  "endLine": 155,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 6,
                  "endLine": 167,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 5,
                  "endLine": 170,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 177,
                  "startColumn": 5,
                  "endLine": 177,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 180,
                  "startColumn": 5,
                  "endLine": 180,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 5,
                  "endLine": 185,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 187,
                  "startColumn": 6,
                  "endLine": 187,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 187,
                  "startColumn": 33,
                  "endLine": 187,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 199,
                  "startColumn": 5,
                  "endLine": 199,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 202,
                  "startColumn": 48,
                  "endLine": 202,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 208,
                  "startColumn": 5,
                  "endLine": 208,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 208,
                  "startColumn": 26,
                  "endLine": 208,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 217,
                  "startColumn": 4,
                  "endLine": 217,
                  "endColumn": 9
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+1",
              "16": "+1",
              "17": "+2 (incl 1 for nesting)",
              "18": "+1",
              "19": "+1",
              "2": "+1",
              "20": "+2 (incl 1 for nesting)",
              "21": "+1",
              "22": "+1",
              "23": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/CollectionAsserts.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 25,
                  "endLine": 280,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/CollectionAsserts.cs",
                "region": {
                  "startLine": 281,
                  "startColumn": 9,
                  "endLine": 281,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/CollectionAsserts.cs",
                "region": {
                  "startLine": 429,
                  "startColumn": 25,
                  "endLine": 429,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/CollectionAsserts.cs",
                "region": {
                  "startLine": 430,
                  "startColumn": 9,
                  "endLine": 430,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1643",
          "level": "warning",
          "message": "Use a StringBuilder instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/ArgumentFormatter.cs",
                "region": {
                  "startLine": 329,
                  "startColumn": 5,
                  "endLine": 329,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 39 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 15,
                  "endLine": 58,
                  "endColumn": 21
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 4,
                  "endLine": 72,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 18,
                  "endLine": 72,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 4,
                  "endLine": 74,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 18,
                  "endLine": 74,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 4,
                  "endLine": 79,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 4,
                  "endLine": 84,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 5,
                  "endLine": 90,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 4,
                  "endLine": 100,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 5,
                  "endLine": 106,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 4,
                  "endLine": 116,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 4,
                  "endLine": 121,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 4,
                  "endLine": 126,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 5,
                  "endLine": 128,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 5,
                  "endLine": 136,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 24,
                  "endLine": 136,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 6,
                  "endLine": 139,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 6,
                  "endLine": 143,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 7,
                  "endLine": 144,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 4,
                  "endLine": 153,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 36,
                  "endLine": 153,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 4,
                  "endLine": 158,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 5,
                  "endLine": 161,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 4,
                  "endLine": 173,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 5,
                  "endLine": 176,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 187,
                  "startColumn": 5,
                  "endLine": 187,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+2 (incl 1 for nesting)",
              "14": "+1",
              "15": "+3 (incl 2 for nesting)",
              "16": "+3 (incl 2 for nesting)",
              "17": "+4 (incl 3 for nesting)",
              "18": "+1",
              "19": "+1",
              "2": "+1",
              "20": "+1",
              "21": "+2 (incl 1 for nesting)",
              "22": "+1",
              "23": "+2 (incl 1 for nesting)",
              "24": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/CollectionAsserts.cs",
                "region": {
                  "startLine": 667,
                  "startColumn": 6,
                  "endLine": 667,
                  "endColumn": 8
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/CollectionAsserts.cs",
                "region": {
                  "startLine": 666,
                  "startColumn": 5,
                  "endLine": 666,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2696",
          "level": "warning",
          "message": "Make the enclosing instance method 'static' or remove this set on the 'static' field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 331,
                  "startColumn": 5,
                  "endLine": 331,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 300,
                  "startColumn": 22,
                  "endLine": 300,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2696",
          "level": "warning",
          "message": "Remove this set, which updates a 'static' field from an instance method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 408,
                  "startColumn": 6,
                  "endLine": 408,
                  "endColumn": 22
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/Sdk/AssertEqualityComparer.cs",
                "region": {
                  "startLine": 378,
                  "startColumn": 23,
                  "endLine": 378,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 35, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 4,
                  "endLine": 83,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 68, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 4,
                  "endLine": 122,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 57, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 4,
                  "endLine": 109,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 46, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 4,
                  "endLine": 96,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 188, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 236,
                  "startColumn": 4,
                  "endLine": 236,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 199, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 249,
                  "startColumn": 4,
                  "endLine": 249,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 210, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 262,
                  "startColumn": 4,
                  "endLine": 262,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 221, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 4,
                  "endLine": 275,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 341, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 389,
                  "startColumn": 4,
                  "endLine": 389,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 352, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 402,
                  "startColumn": 4,
                  "endLine": 402,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 363, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 415,
                  "startColumn": 4,
                  "endLine": 415,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 374, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 428,
                  "startColumn": 4,
                  "endLine": 428,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 441, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 489,
                  "startColumn": 4,
                  "endLine": 489,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 463, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 515,
                  "startColumn": 4,
                  "endLine": 515,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 474, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 528,
                  "startColumn": 4,
                  "endLine": 528,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 452, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 502,
                  "startColumn": 4,
                  "endLine": 502,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 541, the default parameter value can only be used with named arguments.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 591,
                  "startColumn": 4,
                  "endLine": 591,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 552, the default parameter value can only be used with named arguments.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 608,
                  "startColumn": 4,
                  "endLine": 608,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 563, the default parameter value can only be used with named arguments.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 625,
                  "startColumn": 4,
                  "endLine": 625,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 574, the default parameter value can only be used with named arguments.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/MemoryAsserts.cs",
                "region": {
                  "startLine": 642,
                  "startColumn": 4,
                  "endLine": 642,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 36, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 4,
                  "endLine": 84,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 47, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 4,
                  "endLine": 97,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 58, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 4,
                  "endLine": 110,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 69, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 4,
                  "endLine": 123,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 186, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 234,
                  "startColumn": 4,
                  "endLine": 234,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 197, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 247,
                  "startColumn": 4,
                  "endLine": 247,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 208, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 260,
                  "startColumn": 4,
                  "endLine": 260,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 219, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 273,
                  "startColumn": 4,
                  "endLine": 273,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1905",
          "level": "warning",
          "message": "Remove this unnecessary cast to 'ReadOnlySpan<char>'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 222,
                  "startColumn": 21,
                  "endLine": 222,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1905",
          "level": "warning",
          "message": "Remove this unnecessary cast to 'ReadOnlySpan<char>'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 222,
                  "startColumn": 58,
                  "endLine": 222,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 336, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 384,
                  "startColumn": 4,
                  "endLine": 384,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 358, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 410,
                  "startColumn": 4,
                  "endLine": 410,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 347, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 397,
                  "startColumn": 4,
                  "endLine": 397,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 369, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 423,
                  "startColumn": 4,
                  "endLine": 423,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 435, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 483,
                  "startColumn": 4,
                  "endLine": 483,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 446, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 496,
                  "startColumn": 4,
                  "endLine": 496,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 457, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 509,
                  "startColumn": 4,
                  "endLine": 509,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 468, the default parameter value can't be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 522,
                  "startColumn": 4,
                  "endLine": 522,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 534, the default parameter value can only be used with named arguments.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 585,
                  "startColumn": 4,
                  "endLine": 585,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 545, the default parameter value can only be used with named arguments.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 604,
                  "startColumn": 4,
                  "endLine": 604,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 556, the default parameter value can only be used with named arguments.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 623,
                  "startColumn": 4,
                  "endLine": 623,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 567, the default parameter value can only be used with named arguments.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 642,
                  "startColumn": 4,
                  "endLine": 642,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 639,
                  "startColumn": 22,
                  "endLine": 639,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 655,
                  "startColumn": 4,
                  "endLine": 655,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 657,
                  "startColumn": 5,
                  "endLine": 657,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 657,
                  "startColumn": 29,
                  "endLine": 657,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 659,
                  "startColumn": 5,
                  "endLine": 659,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 659,
                  "startColumn": 27,
                  "endLine": 659,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 663,
                  "startColumn": 4,
                  "endLine": 663,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 663,
                  "startColumn": 42,
                  "endLine": 663,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 668,
                  "startColumn": 5,
                  "endLine": 668,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 668,
                  "startColumn": 37,
                  "endLine": 668,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 673,
                  "startColumn": 5,
                  "endLine": 673,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 673,
                  "startColumn": 34,
                  "endLine": 673,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 673,
                  "startColumn": 65,
                  "endLine": 673,
                  "endColumn": 67
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 678,
                  "startColumn": 5,
                  "endLine": 678,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 678,
                  "startColumn": 42,
                  "endLine": 678,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 683,
                  "startColumn": 5,
                  "endLine": 683,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 685,
                  "startColumn": 6,
                  "endLine": 685,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 691,
                  "startColumn": 6,
                  "endLine": 691,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 699,
                  "startColumn": 4,
                  "endLine": 699,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 699,
                  "startColumn": 39,
                  "endLine": 699,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+3 (incl 2 for nesting)",
              "16": "+3 (incl 2 for nesting)",
              "17": "+1",
              "18": "+1",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1871",
          "level": "warning",
          "message": "Either merge this branch with the identical one on line 674 or change one of the implementations.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 679,
                  "startColumn": 5,
                  "endLine": 682,
                  "endColumn": 6
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/SpanAsserts.cs",
                "region": {
                  "startLine": 674,
                  "startColumn": 5,
                  "endLine": 677,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 252, the default parameter value can only be used with named arguments.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/xunit/src/xunit.v3.assert/Asserts/StringAsserts.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 4,
                  "endLine": 280,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code’s readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1117": {
          "id": "S1117",
          "shortDescription": "Local variables should not shadow class fields",
          "fullDescription": "Overriding or shadowing a variable declared in an outer scope can strongly impact the readability, and therefore the maintainability, of a piece of code. Further, it could lead maintainers to introduce bugs because they think they’re using one variable but are really using another.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1117",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1144": {
          "id": "S1144",
          "shortDescription": "Unused private types or members should be removed",
          "fullDescription": "private or internal types or private members that are never executed or referenced are dead code: unnecessary, inoperative code that should be removed. Cleaning out dead code decreases the size of the maintained codebase, making it easier to understand the program and preventing bugs from being introduced.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay",
              "Unnecessary"
            ]
          }
        },
        "S1643": {
          "id": "S1643",
          "shortDescription": "Strings should not be concatenated using '+' in a loop",
          "fullDescription": "StringBuilder is more efficient than string concatenation, especially when the operator is repeated over and over as in loops.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1643",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1871": {
          "id": "S1871",
          "shortDescription": "Two branches in a conditional structure should not have exactly the same implementation",
          "fullDescription": "Having two cases in the same switch statement or branches in the same if structure with the same implementation is at best duplicate code, and at worst a coding error. If the same logic is truly needed for both instances, then in an if structure they should be combined, or for a switch, one should fall through to the other.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1871",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1905": {
          "id": "S1905",
          "shortDescription": "Redundant casts should not be used",
          "fullDescription": "Unnecessary casting expressions make the code harder to read and understand.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1905",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2365": {
          "id": "S2365",
          "shortDescription": "Properties should not make collection or array copies",
          "fullDescription": "Most developers expect property access to be as efficient as field access. However, if a property returns a copy of an array or collection, it will be much slower than simple field access, contrary to the caller’s likely expectations. Therefore, such properties should be refactored into methods so that callers are not surprised by the unexpectedly poor performance.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2365",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2696": {
          "id": "S2696",
          "shortDescription": "Instance members should not write to \"static\" fields",
          "fullDescription": "Correctly updating a static field from a non-static method is tricky to get right and could easily lead to bugs if there are multiple class instances and/or multiple threads in play.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2696",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2743": {
          "id": "S2743",
          "shortDescription": "Static fields should not be used in generic types",
          "fullDescription": "A static field in a generic type is not shared among instances of different closed constructed types, thus LengthLimitedSingletonCollection<int>.instances and LengthLimitedSingletonCollection<string>.instances will point to different objects, even though instances is seemingly shared among all LengthLimitedSingletonCollection<> generic classes.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2743",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3260": {
          "id": "S3260",
          "shortDescription": "Non-derived \"private\" classes and records should be \"sealed\"",
          "fullDescription": "private classes and records aren’t visible outside of their assemblies anyway, so if they’re not extended inside the assemblies, they should be made explicitly non-extensible with the addition of the sealed keyword.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3260",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3267": {
          "id": "S3267",
          "shortDescription": "Loops should be simplified with \"LINQ\" expressions",
          "fullDescription": "When a loop is filtering, selecting or aggregating, those functions can be handled with a clearer, more concise LINQ expression instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3267",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3427": {
          "id": "S3427",
          "shortDescription": "Method overloads with default parameter values should not overlap ",
          "fullDescription": "The rules for method resolution are complex and perhaps not properly understood by all coders. Having overloads with optional parameter values makes the matter even harder to understand.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3427",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3925": {
          "id": "S3925",
          "shortDescription": "\"ISerializable\" should be implemented correctly",
          "fullDescription": "The ISerializable interface is the mechanism to control the type serialization process. If not implemented correctly this could result in an invalid serialization and hard to detect bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3925",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4136": {
          "id": "S4136",
          "shortDescription": "Method overloads should be grouped together",
          "fullDescription": "For clarity, all overloads of the same method should be grouped together. That lets both users and maintainers quickly understand all the current available options.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4136",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4275": {
          "id": "S4275",
          "shortDescription": "Getters and setters should access the expected fields",
          "fullDescription": "Properties provide a way to enforce encapsulation by providing public, protected or internal methods that give controlled access to private fields. However in classes with multiple fields it is not unusual that cut and paste is used to quickly create the needed properties, which can result in the wrong field being accessed by a getter or setter.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4275",
          "properties": {
            "category": "Critical Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}