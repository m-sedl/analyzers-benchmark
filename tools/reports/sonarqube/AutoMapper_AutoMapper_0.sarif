{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.0.0.0",
        "fileVersion": "4.0.1-1.22181.2 (487283bc)",
        "semanticVersion": "4.0.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S2326",
          "level": "warning",
          "message": "'TDestination' is not used in the interface.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/IMemberConfigurationExpression.cs",
                "region": {
                  "startLine": 265,
                  "startColumn": 58,
                  "endLine": 265,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'IProjectionMemberConfiguration' interface to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/IMemberConfigurationExpression.cs",
                "region": {
                  "startLine": 265,
                  "startColumn": 18,
                  "endLine": 265,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'IValueResolver' interface to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/IMemberConfigurationExpression.cs",
                "region": {
                  "startLine": 318,
                  "startColumn": 18,
                  "endLine": 318,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'IProjectionExpressionBase' interface to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/IMappingExpressionBase.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 18,
                  "endLine": 11,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'IMemberValueResolver' interface to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/IMemberConfigurationExpression.cs",
                "region": {
                  "startLine": 334,
                  "startColumn": 18,
                  "endLine": 334,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 14,
                  "endLine": 76,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 8,
                  "endLine": 76,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 8,
                  "endLine": 76,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'DuplicateTypeMapConfigurationException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'DuplicateTypeMapConfigurationException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 14,
                  "endLine": 8,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 8,
                  "endLine": 8,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 8,
                  "endLine": 8,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'AutoMapperMappingException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'AutoMapperMappingException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'IMappingExpressionBase' interface to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/IMappingExpressionBase.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 18,
                  "endLine": 56,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 17,
                  "endLine": 106,
                  "endColumn": 108
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'CreateMap' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/IProfileExpression.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 47,
                  "endLine": 19,
                  "endColumn": 56
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/IProfileExpression.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 24,
                  "endLine": 56,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 14,
                  "endLine": 110,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 8,
                  "endLine": 110,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 8,
                  "endLine": 110,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'AutoMapperConfigurationException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'AutoMapperConfigurationException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'IMemberConfigurationExpression' interface to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/IMemberConfigurationExpression.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 18,
                  "endLine": 9,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'ReplaceParameters' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 30,
                  "endLine": 36,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 355,
                  "startColumn": 30,
                  "endLine": 355,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S3604",
          "level": "warning",
          "message": "Remove the member initializer, all constructors set an initial value for the member.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 53,
                  "endLine": 49,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3604",
          "level": "warning",
          "message": "Remove the member initializer, all constructors set an initial value for the member.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 54,
                  "endLine": 50,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3604",
          "level": "warning",
          "message": "Remove the member initializer, all constructors set an initial value for the member.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 59,
                  "endLine": 51,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3604",
          "level": "warning",
          "message": "Remove the member initializer, all constructors set an initial value for the member.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 56,
                  "endLine": 52,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3604",
          "level": "warning",
          "message": "Remove the member initializer, all constructors set an initial value for the member.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 44,
                  "endLine": 53,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field '_fieldBuilder' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 39,
                  "endLine": 121,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field '_getterBuilder' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field '_setterBuilder' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 40,
                  "endLine": 124,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'MapFrom' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 17,
                  "endLine": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 17,
                  "endLine": 40,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S3604",
          "level": "warning",
          "message": "Remove the member initializer, all constructors set an initial value for the member.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 52,
                  "endLine": 54,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3604",
          "level": "warning",
          "message": "Remove the member initializer, all constructors set an initial value for the member.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 71,
                  "endLine": 56,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3604",
          "level": "warning",
          "message": "Remove the member initializer, all constructors set an initial value for the member.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 85,
                  "endLine": 57,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3604",
          "level": "warning",
          "message": "Remove the member initializer, all constructors set an initial value for the member.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 51,
                  "endLine": 58,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'CreateMap' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/Profile.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 54,
                  "endLine": 134,
                  "endColumn": 63
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/Profile.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 31,
                  "endLine": 145,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'Configure' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/ProfileMap.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 18,
                  "endLine": 152,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/ProfileMap.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 18,
                  "endLine": 171,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4035",
          "level": "warning",
          "message": "Seal class 'IncludedMember' or implement 'IEqualityComparer<T>' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/ProfileMap.cs",
                "region": {
                  "startLine": 250,
                  "startColumn": 14,
                  "endLine": 250,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'Chain' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/ProfileMap.cs",
                "region": {
                  "startLine": 263,
                  "startColumn": 27,
                  "endLine": 263,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/ProfileMap.cs",
                "region": {
                  "startLine": 277,
                  "startColumn": 29,
                  "endLine": 277,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S1206",
          "level": "warning",
          "message": "This class overrides 'GetHashCode' and should therefore also override 'Equals'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/ProfileMap.cs",
                "region": {
                  "startLine": 250,
                  "startColumn": 14,
                  "endLine": 250,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'Configure' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Features.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 26,
                  "endLine": 66,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Features.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 26,
                  "endLine": 92,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'IProjectionExpression' interface to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/IMappingExpression.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 18,
                  "endLine": 104,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/TypeMap.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 21,
                  "endLine": 60,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeExtensions.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 93,
                  "endLine": 7,
                  "endColumn": 115
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeExtensions.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 89,
                  "endLine": 8,
                  "endColumn": 111
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'MapFrom' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MemberConfigurationExpression.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 17,
                  "endLine": 24,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MemberConfigurationExpression.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 17,
                  "endLine": 28,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MemberConfigurationExpression.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 17,
                  "endLine": 39,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MemberConfigurationExpression.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 17,
                  "endLine": 54,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MemberConfigurationExpression.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 17,
                  "endLine": 60,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload",
              "1": "Non-adjacent overload",
              "2": "Non-adjacent overload",
              "3": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'MemberConfigurationExpression' class to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MemberConfigurationExpression.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 14,
                  "endLine": 11,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'IPathConfigurationExpression' interface to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/PathConfigurationExpression.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 18,
                  "endLine": 8,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'PathConfigurationExpression' class to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/PathConfigurationExpression.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 14,
                  "endLine": 24,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'ConditionParameters' record struct to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/PathConfigurationExpression.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 31,
                  "endLine": 23,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'BeforeMap' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/TypeMapConfiguration.cs",
                "region": {
                  "startLine": 258,
                  "startColumn": 31,
                  "endLine": 258,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/TypeMapConfiguration.cs",
                "region": {
                  "startLine": 264,
                  "startColumn": 31,
                  "endLine": 264,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'AfterMap' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/TypeMapConfiguration.cs",
                "region": {
                  "startLine": 268,
                  "startColumn": 31,
                  "endLine": 268,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/TypeMapConfiguration.cs",
                "region": {
                  "startLine": 272,
                  "startColumn": 31,
                  "endLine": 272,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/TypeMapConfiguration.cs",
                "region": {
                  "startLine": 278,
                  "startColumn": 31,
                  "endLine": 278,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload",
              "1": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'ConvertUsing' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/TypeMapConfiguration.cs",
                "region": {
                  "startLine": 332,
                  "startColumn": 17,
                  "endLine": 332,
                  "endColumn": 29
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/TypeMapConfiguration.cs",
                "region": {
                  "startLine": 344,
                  "startColumn": 17,
                  "endLine": 344,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/TypeMapConfiguration.cs",
                "region": {
                  "startLine": 372,
                  "startColumn": 17,
                  "endLine": 372,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload",
              "1": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'MappingExpressionBase' class to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/TypeMapConfiguration.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 23,
                  "endLine": 231,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'ForMember' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MappingExpression.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 54,
                  "endLine": 79,
                  "endColumn": 63
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MappingExpression.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 54,
                  "endLine": 97,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this accessor to reduce its Cognitive Complexity from 23 to the 3 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 9,
                  "endLine": 146,
                  "endColumn": 12
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 13,
                  "endLine": 148,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 17,
                  "endLine": 159,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 21,
                  "endLine": 161,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 27,
                  "endLine": 164,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 13,
                  "endLine": 173,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 17,
                  "endLine": 179,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 21,
                  "endLine": 193,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 196,
                  "startColumn": 25,
                  "endLine": 196,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 201,
                  "startColumn": 21,
                  "endLine": 201,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1643",
          "level": "warning",
          "message": "Use a StringBuilder instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/AutoMapperMappingException.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 25,
                  "endLine": 165,
                  "endColumn": 176
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'otherSourceType' to 'derivedSourceType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/TypeMapConfiguration.cs",
                "region": {
                  "startLine": 306,
                  "startColumn": 44,
                  "endLine": 306,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'otherDestinationType' to 'derivedDestinationType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/TypeMapConfiguration.cs",
                "region": {
                  "startLine": 306,
                  "startColumn": 66,
                  "endLine": 306,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'IMemberConfigurationExpression.MapFrom' method to no more than the 3 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/IMemberConfigurationExpression.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 10,
                  "endLine": 226,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter '_' to 'input' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/INamingConvention.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 34,
                  "endLine": 14,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'mappingFunction' to 'mappingExpression' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/TypeMapConfiguration.cs",
                "region": {
                  "startLine": 372,
                  "startColumn": 70,
                  "endLine": 372,
                  "endColumn": 85
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this constructor to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 12,
                  "endLine": 59,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 9,
                  "endLine": 62,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 9,
                  "endLine": 76,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 9,
                  "endLine": 91,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 13,
                  "endLine": 111,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 115,
                  "startColumn": 13,
                  "endLine": 115,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 13,
                  "endLine": 121,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 17,
                  "endLine": 126,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 132,
                  "startColumn": 13,
                  "endLine": 132,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 13,
                  "endLine": 140,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+2 (incl 1 for nesting)",
              "8": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'globalConfiguration'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 34,
                  "endLine": 119,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/ConstructorMap.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 35,
                  "endLine": 35,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/ConstructorMap.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 21,
                  "endLine": 37,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter '_' to 'memberMap' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 544,
                  "startColumn": 49,
                  "endLine": 544,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'configuration' to 'memberOptions' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/Profile.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 143,
                  "endLine": 122,
                  "endColumn": 156
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter '_' to 'destination' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 492,
                  "startColumn": 124,
                  "endLine": 492,
                  "endColumn": 125
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 87,
                  "endLine": 20,
                  "endColumn": 90
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3237",
          "level": "warning",
          "message": "Use the 'value' parameter in this property set accessor declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 83,
                  "endLine": 20,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 73,
                  "endLine": 23,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3237",
          "level": "warning",
          "message": "Use the 'value' parameter in this property set accessor declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 69,
                  "endLine": 23,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 55,
                  "endLine": 27,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3237",
          "level": "warning",
          "message": "Use the 'value' parameter in this property set accessor declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 51,
                  "endLine": 27,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 55,
                  "endLine": 29,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 68,
                  "endLine": 31,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3237",
          "level": "warning",
          "message": "Use the 'value' parameter in this property set accessor declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 64,
                  "endLine": 31,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 64,
                  "endLine": 32,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3237",
          "level": "warning",
          "message": "Use the 'value' parameter in this property set accessor declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 51,
                  "endLine": 29,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 72,
                  "endLine": 33,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3237",
          "level": "warning",
          "message": "Use the 'value' parameter in this property set accessor declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 60,
                  "endLine": 32,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 69,
                  "endLine": 34,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3237",
          "level": "warning",
          "message": "Use the 'value' parameter in this property set accessor declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 68,
                  "endLine": 33,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3237",
          "level": "warning",
          "message": "Use the 'value' parameter in this property set accessor declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 65,
                  "endLine": 34,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1006",
          "level": "warning",
          "message": "Add the default parameter value defined in the overridden method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mapper.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 87,
                  "endLine": 171,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/MemberMap.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 13,
                  "endLine": 44,
                  "endColumn": 146
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1006",
          "level": "warning",
          "message": "Add the default parameter value defined in the overridden method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mapper.cs",
                "region": {
                  "startLine": 175,
                  "startColumn": 102,
                  "endLine": 175,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1116",
          "level": "warning",
          "message": "Remove this empty statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Features.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 84,
                  "endLine": 49,
                  "endColumn": 85
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter '_' to 'destination' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 454,
                  "startColumn": 124,
                  "endLine": 454,
                  "endColumn": 125
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter '_' to 'memberMap' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 465,
                  "startColumn": 49,
                  "endLine": 465,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter '_' to 'memberMap' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 449,
                  "startColumn": 49,
                  "endLine": 449,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 30 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 30,
                  "endLine": 106,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 9,
                  "endLine": 110,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 36,
                  "endLine": 110,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 46,
                  "endLine": 117,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 32,
                  "endLine": 119,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 13,
                  "endLine": 123,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 130,
                  "startColumn": 13,
                  "endLine": 130,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 13,
                  "endLine": 134,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 17,
                  "endLine": 137,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 21,
                  "endLine": 139,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 13,
                  "endLine": 158,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 82,
                  "endLine": 158,
                  "endColumn": 84
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 31,
                  "endLine": 158,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 100,
                  "endLine": 158,
                  "endColumn": 102
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 71,
                  "endLine": 160,
                  "endColumn": 72
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 13,
                  "endLine": 162,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 34,
                  "endLine": 166,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+3 (incl 2 for nesting)",
              "14": "+2 (incl 1 for nesting)",
              "15": "+3 (incl 2 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 13,
                  "endLine": 119,
                  "endColumn": 85
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'_options' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/ResolutionContext.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 20,
                  "endLine": 28,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ObjectFactory.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 9,
                  "endLine": 40,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ObjectFactory.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 9,
                  "endLine": 40,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ObjectFactory.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 9,
                  "endLine": 40,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'sourceExpression' to 'sourceMember' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/PathConfigurationExpression.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 81,
                  "endLine": 36,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 31 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 313,
                  "startColumn": 21,
                  "endLine": 313,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 316,
                  "startColumn": 9,
                  "endLine": 316,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 321,
                  "startColumn": 9,
                  "endLine": 321,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 325,
                  "startColumn": 9,
                  "endLine": 325,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 333,
                  "startColumn": 9,
                  "endLine": 333,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 336,
                  "startColumn": 13,
                  "endLine": 336,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 339,
                  "startColumn": 17,
                  "endLine": 339,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 339,
                  "startColumn": 59,
                  "endLine": 339,
                  "endColumn": 61
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 344,
                  "startColumn": 17,
                  "endLine": 344,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 349,
                  "startColumn": 17,
                  "endLine": 349,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 382,
                  "startColumn": 13,
                  "endLine": 382,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 382,
                  "startColumn": 31,
                  "endLine": 382,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 398,
                  "startColumn": 17,
                  "endLine": 398,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 405,
                  "startColumn": 17,
                  "endLine": 405,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 407,
                  "startColumn": 101,
                  "endLine": 407,
                  "endColumn": 103
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 408,
                  "startColumn": 21,
                  "endLine": 408,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 416,
                  "startColumn": 17,
                  "endLine": 416,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+3 (incl 2 for nesting)",
              "12": "+1",
              "13": "+1",
              "14": "+4 (incl 3 for nesting)",
              "15": "+3 (incl 2 for nesting)",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 440,
                  "startColumn": 40,
                  "endLine": 440,
                  "endColumn": 55
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 442,
                  "startColumn": 17,
                  "endLine": 442,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3442",
          "level": "warning",
          "message": "Change the visibility of this constructor to 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 5,
                  "endLine": 166,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'interfaceType' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 31,
                  "endLine": 75,
                  "endColumn": 136
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 21 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 25,
                  "endLine": 20,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 9,
                  "endLine": 26,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 43,
                  "endLine": 41,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 13,
                  "endLine": 69,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 17,
                  "endLine": 71,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 21,
                  "endLine": 73,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 71,
                  "endLine": 73,
                  "endColumn": 73
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 93,
                  "endLine": 73,
                  "endColumn": 95
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 17,
                  "endLine": 78,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 13,
                  "endLine": 89,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 17,
                  "endLine": 95,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ProxyGenerator.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 17,
                  "endLine": 99,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'member' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 221,
                  "startColumn": 28,
                  "endLine": 221,
                  "endColumn": 105
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3011",
          "level": "warning",
          "message": "Make sure that this accessibility bypass is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeExtensions.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 106,
                  "endLine": 12,
                  "endColumn": 128
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3217",
          "level": "warning",
          "message": "Either change the type of 'foundMethod' to 'MemberInfo' or iterate on a generic collection of type 'MethodInfo'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeExtensions.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 18,
                  "endLine": 12,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'pair' to 'typePair' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 443,
                  "startColumn": 62,
                  "endLine": 443,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 465,
                  "startColumn": 32,
                  "endLine": 465,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MapperConfiguration.cs",
                "region": {
                  "startLine": 467,
                  "startColumn": 17,
                  "endLine": 467,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'context' to 'initialTypes' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 50,
                  "endLine": 8,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'resolver' to 'valueResolver' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MemberConfigurationExpression.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 148,
                  "endLine": 178,
                  "endColumn": 156
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'MemberConfigurationExpression.MapFrom' method to no more than the 3 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MemberConfigurationExpression.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 17,
                  "endLine": 178,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/TypeMap.cs",
                "region": {
                  "startLine": 449,
                  "startColumn": 22,
                  "endLine": 449,
                  "endColumn": 43
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/TypeMap.cs",
                "region": {
                  "startLine": 451,
                  "startColumn": 13,
                  "endLine": 451,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/TypeMap.cs",
                "region": {
                  "startLine": 456,
                  "startColumn": 13,
                  "endLine": 456,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/TypeMap.cs",
                "region": {
                  "startLine": 461,
                  "startColumn": 13,
                  "endLine": 461,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/TypeMap.cs",
                "region": {
                  "startLine": 466,
                  "startColumn": 13,
                  "endLine": 466,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/TypeMap.cs",
                "region": {
                  "startLine": 470,
                  "startColumn": 13,
                  "endLine": 470,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/TypeMap.cs",
                "region": {
                  "startLine": 478,
                  "startColumn": 17,
                  "endLine": 478,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/TypeMap.cs",
                "region": {
                  "startLine": 480,
                  "startColumn": 21,
                  "endLine": 480,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/TypeMap.cs",
                "region": {
                  "startLine": 485,
                  "startColumn": 21,
                  "endLine": 485,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/TypeMap.cs",
                "region": {
                  "startLine": 489,
                  "startColumn": 21,
                  "endLine": 489,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/TypeMap.cs",
                "region": {
                  "startLine": 498,
                  "startColumn": 17,
                  "endLine": 498,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/TypeMap.cs",
                "region": {
                  "startLine": 500,
                  "startColumn": 21,
                  "endLine": 500,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 22 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 23,
                  "endLine": 23,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 9,
                  "endLine": 25,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 9,
                  "endLine": 29,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 61,
                  "endLine": 29,
                  "endColumn": 63
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 13,
                  "endLine": 38,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 13,
                  "endLine": 42,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 17,
                  "endLine": 45,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 49,
                  "endLine": 45,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 52,
                  "endLine": 56,
                  "endColumn": 54
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 47,
                  "endLine": 60,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 13,
                  "endLine": 64,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 95,
                  "endLine": 72,
                  "endColumn": 97
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 13,
                  "endLine": 74,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 34,
                  "endLine": 74,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 13,
                  "endLine": 78,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 46,
                  "endLine": 86,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "14": "+1",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3217",
          "level": "warning",
          "message": "Either change the type of 'sourceMethod' to 'MemberInfo' or iterate on a generic collection of type 'MethodInfo'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/ConversionOperatorMapper.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 18,
                  "endLine": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/ConversionOperatorMapper.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 45,
                  "endLine": 9,
                  "endColumn": 175
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/ConversionOperatorMapper.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 17,
                  "endLine": 11,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'types' to 'context' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/ConvertMapper.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 34,
                  "endLine": 5,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 33 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 25,
                  "endLine": 84,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 9,
                  "endLine": 87,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 13,
                  "endLine": 90,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 39,
                  "endLine": 90,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 13,
                  "endLine": 94,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 34,
                  "endLine": 94,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 71,
                  "endLine": 94,
                  "endColumn": 73
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 13,
                  "endLine": 99,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 50,
                  "endLine": 99,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 13,
                  "endLine": 103,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 17,
                  "endLine": 105,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 21,
                  "endLine": 107,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 115,
                  "startColumn": 17,
                  "endLine": 115,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 17,
                  "endLine": 120,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 53,
                  "endLine": 133,
                  "endColumn": 54
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 13,
                  "endLine": 139,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 52,
                  "endLine": 144,
                  "endColumn": 53
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 25,
                  "endLine": 84,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+4 (incl 3 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+2 (incl 1 for nesting)",
              "14": "+2 (incl 1 for nesting)",
              "15": "+2 (incl 1 for nesting)",
              "16": "+1 (recursion)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 27 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/FromStringDictionaryMapper.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 27,
                  "endLine": 10,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/FromStringDictionaryMapper.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 9,
                  "endLine": 14,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/FromStringDictionaryMapper.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 13,
                  "endLine": 17,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/FromStringDictionaryMapper.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 13,
                  "endLine": 21,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/FromStringDictionaryMapper.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 9,
                  "endLine": 29,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/FromStringDictionaryMapper.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 13,
                  "endLine": 36,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/FromStringDictionaryMapper.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 13,
                  "endLine": 41,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/FromStringDictionaryMapper.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 13,
                  "endLine": 50,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/FromStringDictionaryMapper.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 17,
                  "endLine": 54,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/FromStringDictionaryMapper.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 17,
                  "endLine": 66,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/FromStringDictionaryMapper.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 21,
                  "endLine": 69,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/FromStringDictionaryMapper.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 25,
                  "endLine": 71,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+5 (incl 4 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'_nameToMember' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Internal/TypeDetails.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 13,
                  "endLine": 29,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3626",
          "level": "warning",
          "message": "Remove this redundant jump.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 9,
                  "endLine": 129,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3626",
          "level": "warning",
          "message": "Remove this redundant jump.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/FromStringDictionaryMapper.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 13,
                  "endLine": 62,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 24 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 24,
                  "endLine": 163,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 168,
                  "startColumn": 9,
                  "endLine": 168,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 9,
                  "endLine": 174,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 13,
                  "endLine": 176,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 182,
                  "startColumn": 9,
                  "endLine": 182,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 184,
                  "startColumn": 13,
                  "endLine": 184,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 17,
                  "endLine": 186,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 21,
                  "endLine": 189,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 9,
                  "endLine": 198,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 13,
                  "endLine": 200,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 202,
                  "startColumn": 17,
                  "endLine": 202,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 209,
                  "startColumn": 9,
                  "endLine": 209,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 211,
                  "startColumn": 13,
                  "endLine": 211,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/TypeMapPlanBuilder.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 9,
                  "endLine": 216,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3626",
          "level": "warning",
          "message": "Remove this redundant jump.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/CtorParamConfigurationExpression.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 9,
                  "endLine": 78,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 74 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 24,
                  "endLine": 59,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 9,
                  "endLine": 62,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 9,
                  "endLine": 68,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 13,
                  "endLine": 70,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 9,
                  "endLine": 75,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 41,
                  "endLine": 85,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 13,
                  "endLine": 89,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 36,
                  "endLine": 90,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 17,
                  "endLine": 94,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 51,
                  "endLine": 104,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 62,
                  "endLine": 107,
                  "endColumn": 64
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 17,
                  "endLine": 114,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 49,
                  "endLine": 114,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 17,
                  "endLine": 119,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 21,
                  "endLine": 122,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 50,
                  "endLine": 122,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 17,
                  "endLine": 129,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 49,
                  "endLine": 134,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 52,
                  "endLine": 138,
                  "endColumn": 58
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 21,
                  "endLine": 144,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 25,
                  "endLine": 151,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 51,
                  "endLine": 151,
                  "endColumn": 53
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 25,
                  "endLine": 155,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 79,
                  "endLine": 164,
                  "endColumn": 81
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 158,
                  "endLine": 164,
                  "endColumn": 160
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 25,
                  "endLine": 167,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 65,
                  "endLine": 171,
                  "endColumn": 66
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 177,
                  "startColumn": 21,
                  "endLine": 177,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 25,
                  "endLine": 179,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 188,
                  "startColumn": 54,
                  "endLine": 188,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 24,
                  "endLine": 59,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+1",
              "12": "+3 (incl 2 for nesting)",
              "13": "+4 (incl 3 for nesting)",
              "14": "+1",
              "15": "+1",
              "16": "+3 (incl 2 for nesting)",
              "17": "+4 (incl 3 for nesting)",
              "18": "+4 (incl 3 for nesting)",
              "19": "+5 (incl 4 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "20": "+1",
              "21": "+5 (incl 4 for nesting)",
              "22": "+1",
              "23": "+1",
              "24": "+5 (incl 4 for nesting)",
              "25": "+5 (incl 4 for nesting)",
              "26": "+4 (incl 3 for nesting)",
              "27": "+5 (incl 4 for nesting)",
              "28": "+2 (incl 1 for nesting)",
              "29": "+1 (recursion)",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 51 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 23,
                  "endLine": 10,
                  "endColumn": 36
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 9,
                  "endLine": 13,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 9,
                  "endLine": 17,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 9,
                  "endLine": 21,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 74,
                  "endLine": 21,
                  "endColumn": 76
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 9,
                  "endLine": 25,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 54,
                  "endLine": 25,
                  "endColumn": 56
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 66,
                  "endLine": 35,
                  "endColumn": 67
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 13,
                  "endLine": 49,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 51,
                  "endLine": 49,
                  "endColumn": 53
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 87,
                  "endLine": 49,
                  "endColumn": 89
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 17,
                  "endLine": 51,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 13,
                  "endLine": 67,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 39,
                  "endLine": 71,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 13,
                  "endLine": 77,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 63,
                  "endLine": 89,
                  "endColumn": 65
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 17,
                  "endLine": 90,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 17,
                  "endLine": 96,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 21,
                  "endLine": 98,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 21,
                  "endLine": 104,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 25,
                  "endLine": 106,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 69,
                  "endLine": 112,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 17,
                  "endLine": 116,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 17,
                  "endLine": 124,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 17,
                  "endLine": 129,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 47,
                  "endLine": 139,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+2 (incl 1 for nesting)",
              "12": "+2 (incl 1 for nesting)",
              "13": "+2 (incl 1 for nesting)",
              "14": "+1",
              "15": "+3 (incl 2 for nesting)",
              "16": "+3 (incl 2 for nesting)",
              "17": "+4 (incl 3 for nesting)",
              "18": "+1",
              "19": "+5 (incl 4 for nesting)",
              "2": "+1",
              "20": "+5 (incl 4 for nesting)",
              "21": "+1",
              "22": "+3 (incl 2 for nesting)",
              "23": "+1",
              "24": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+2 (incl 1 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S2234",
          "level": "warning",
          "message": "Parameters to '.ctor' have the same names but not the same order as the method arguments.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Configuration/MappingExpression.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 33,
                  "endLine": 8,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified with \"LINQ\" expressions",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 177,
                  "startColumn": 44,
                  "endLine": 177,
                  "endColumn": 62
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/QueryableExtensions/ProjectionBuilder.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 29,
                  "endLine": 179,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1121",
          "level": "warning",
          "message": "Extract the assignment of 'sourceElementType' from this expression.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Mappers/CollectionMapper.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 74,
                  "endLine": 231,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 369,
                  "startColumn": 30,
                  "endLine": 369,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 372,
                  "startColumn": 53,
                  "endLine": 372,
                  "endColumn": 54
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 373,
                  "startColumn": 9,
                  "endLine": 373,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 373,
                  "startColumn": 31,
                  "endLine": 373,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 378,
                  "startColumn": 156,
                  "endLine": 378,
                  "endColumn": 157
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 378,
                  "startColumn": 51,
                  "endLine": 378,
                  "endColumn": 53
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 380,
                  "startColumn": 119,
                  "endLine": 380,
                  "endColumn": 120
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 380,
                  "startColumn": 83,
                  "endLine": 380,
                  "endColumn": 85
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 385,
                  "startColumn": 9,
                  "endLine": 385,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 394,
                  "startColumn": 42,
                  "endLine": 394,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 395,
                  "startColumn": 13,
                  "endLine": 395,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 398,
                  "startColumn": 39,
                  "endLine": 398,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 400,
                  "startColumn": 13,
                  "endLine": 400,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 409,
                  "startColumn": 34,
                  "endLine": 409,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+2 (incl 1 for nesting)",
              "12": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/msedlyarskiy/benchmark/projects/AutoMapper/src/AutoMapper/Execution/ExpressionBuilder.cs",
                "region": {
                  "startLine": 428,
                  "startColumn": 10,
                  "endLine": 428,
                  "endColumn": 128
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "S1006": {
          "id": "S1006",
          "shortDescription": "Method overrides should not change parameter defaults",
          "fullDescription": "Default arguments are determined by the static type of the object. If a default argument is different for a parameter in an overriding method, the value used in the call will be different when calls are made via the base or derived object, which may be contrary to developer expectations.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1006",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S108": {
          "id": "S108",
          "shortDescription": "Nested blocks of code should not be left empty",
          "fullDescription": "Most of the time a block of code is empty when a piece of code is really missing. So such empty block must be either filled or removed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-108",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1104": {
          "id": "S1104",
          "shortDescription": "Fields should not have public accessibility",
          "fullDescription": "Public fields in public classes do not respect the encapsulation principle and has three main disadvantages:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1104",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1116": {
          "id": "S1116",
          "shortDescription": "Empty statements should be removed",
          "fullDescription": "Empty statements, i.e. ;, are usually introduced by mistake, for example because:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1116",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1121": {
          "id": "S1121",
          "shortDescription": "Assignments should not be made from within sub-expressions",
          "fullDescription": "Assignments within sub-expressions are hard to spot and therefore make the code less readable. Ideally, sub-expressions should not have side-effects.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1121",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1206": {
          "id": "S1206",
          "shortDescription": "\"Equals(Object)\" and \"GetHashCode()\" should be overridden in pairs",
          "fullDescription": "There is a contract between Equals(object) and GetHashCode(): If two objects are equal according to the Equals(object) method, then calling GetHashCode() on each of them must yield the same result. If this is not the case, many collections won’t handle class instances correctly.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1206",
          "properties": {
            "category": "Minor Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Programmers should not comment out code as it bloats programs and reduces readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1450": {
          "id": "S1450",
          "shortDescription": "Private fields only used as local variables in methods should become local variables",
          "fullDescription": "When the value of a private field is always assigned to in a class' methods before being read, then it is not being used to store class information. Therefore, it should become a local variable in the relevant methods to prevent any misunderstanding.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1450",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1643": {
          "id": "S1643",
          "shortDescription": "Strings should not be concatenated using '+' in a loop",
          "fullDescription": "StringBuilder is more efficient than string concatenation, especially when the operator is repeated over and over as in loops.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1643",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2234": {
          "id": "S2234",
          "shortDescription": "Parameters should be passed in the correct order",
          "fullDescription": "When the names of parameters in a method call match the names of the method arguments, it contributes to clearer, more readable code. However, when the names match, but are passed in a different order than the method arguments, it indicates a mistake in the parameter order which will likely lead to unexpected results.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2234",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2259": {
          "id": "S2259",
          "shortDescription": "Null pointers should not be dereferenced",
          "fullDescription": "A reference to null should never be dereferenced/accessed. Doing so will cause a NullReferenceException to be thrown. At best, such an exception will cause abrupt program termination. At worst, it could expose debugging information that would be useful to an attacker, or it could allow an attacker to bypass security measures.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2259",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2326": {
          "id": "S2326",
          "shortDescription": "Unused type parameters should be removed",
          "fullDescription": "Type parameters that aren’t used are dead code, which can only distract and possibly confuse developers during maintenance. Therefore, unused type parameters should be removed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2326",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2436": {
          "id": "S2436",
          "shortDescription": "Types and methods should not have too many generic parameters",
          "fullDescription": "A method or class with too many type parameters has likely aggregated too many responsibilities and should be split.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2436",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3011": {
          "id": "S3011",
          "shortDescription": "Reflection should not be used to increase accessibility of classes, methods, or fields",
          "fullDescription": "This rule raises an issue when reflection is used to change the visibility of a class, method or field, and when it is used to directly update a field value. Altering or bypassing the accessibility of classes, methods, or fields violates the encapsulation principle and could lead to run-time errors.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3011",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3217": {
          "id": "S3217",
          "shortDescription": "\"Explicit\" conversions of \"foreach\" loops should not be used",
          "fullDescription": "The foreach statement was introduced in the C# language prior to generics to make it easier to work with the non-generic collections available at that time such as ArrayList. The foreach statements allows you to downcast elements of a collection of Objects to any other type. The problem is that to achieve the cast, the foreach statements silently performs explicit type conversion, which at runtime can result in an InvalidCastException.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3217",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3237": {
          "id": "S3237",
          "shortDescription": "\"value\" parameters should be used",
          "fullDescription": "In property and indexer set methods, and in event add and remove methods, the implicit value parameter holds the value the accessor was called with. Not using the value means that the accessor ignores the caller’s intent which could cause unexpected results at runtime.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3237",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3267": {
          "id": "S3267",
          "shortDescription": "Loops should be simplified with \"LINQ\" expressions",
          "fullDescription": "When a loop is filtering, selecting or aggregating, those functions can be handled with a clearer, more concise LINQ expression instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3267",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3358": {
          "id": "S3358",
          "shortDescription": "Ternary operators should not be nested",
          "fullDescription": "Just because you can do something, doesn’t mean you should, and that’s the case with nested ternary operations. Nesting ternary operators results in the kind of code that may seem clear as day when you write it, but six months later will leave maintainers (or worse - future you) scratching their heads and cursing.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3358",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3442": {
          "id": "S3442",
          "shortDescription": "\"abstract\" classes should not have \"public\" constructors",
          "fullDescription": "Since abstract classes can’t be instantiated, there’s no point in their having public or internal constructors. If there is basic initialization logic that should run when an extending class instance is created, you can by all means put it in a constructor, but make that constructor private, private protected or protected.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3442",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3604": {
          "id": "S3604",
          "shortDescription": "Member initializer values should not be redundant",
          "fullDescription": "Fields, properties and events can be initialized either inline or in the constructor. Initializing them inline and in the constructor at the same time is redundant; the inline initialization will be overridden.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3604",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3626": {
          "id": "S3626",
          "shortDescription": "Jump statements should not be redundant",
          "fullDescription": "Jump statements, such as return, yield break, goto, and continue let you change the default flow of program execution, but jump statements that direct the control flow to the original direction are just a waste of keystrokes.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3626",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3925": {
          "id": "S3925",
          "shortDescription": "\"ISerializable\" should be implemented correctly",
          "fullDescription": "The ISerializable interface is the mechanism to control the type serialization process. If not implemented correctly this could result in an invalid serialization and hard to detect bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3925",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3928": {
          "id": "S3928",
          "shortDescription": "Parameter names used into ArgumentException constructors should match an existing one ",
          "fullDescription": "Some constructors of the ArgumentException, ArgumentNullException, ArgumentOutOfRangeException and DuplicateWaitObjectException classes must be fed with a valid parameter name. This rule raises an issue in two cases:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3928",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4035": {
          "id": "S4035",
          "shortDescription": "Classes implementing \"IEquatable<T>\" should be sealed",
          "fullDescription": "When a class implements the IEquatable<T> interface, it enters a contract that, in effect, states \"I know how to compare two instances of type T or any type derived from T for equality.\". However if that class is derived, it is very unlikely that the base class will know how to make a meaningful comparison. Therefore that implicit contract is now broken.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4035",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4136": {
          "id": "S4136",
          "shortDescription": "Method overloads should be grouped together",
          "fullDescription": "For clarity, all overloads of the same method should be grouped together. That lets both users and maintainers quickly understand all the current available options.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4136",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S927": {
          "id": "S927",
          "shortDescription": "Parameter names should match base declaration and other partial definitions",
          "fullDescription": "The name of a parameter in an externally visible. This rule raises an issue when method override does not match the name of the parameter in the base declaration of the method, or the name of the parameter in the interface declaration of the method or the name of any other partial definition.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-927",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}