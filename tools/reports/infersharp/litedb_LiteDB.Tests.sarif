{"$schema":"http://json.schemastore.org/sarif-2.1.0-rtm.5","version":"2.1.0","runs":[{"tool":{"driver":{"name":"Infer","informationUri":"https://github.com/facebook/infer","version":"1.1.0","rules":[{"id":"PULSE_RESOURCE_LEAK","shortDescription":{"text":"Pulse Resource Leak"},"helpUri":"https://fbinfer.com/docs/next/all-issue-types#pulse_resource_leak"},{"id":"NULLPTR_DEREFERENCE","shortDescription":{"text":"Null Dereference"},"helpUri":"https://fbinfer.com/docs/next/all-issue-types#nullptr_dereference"},{"id":"THREAD_SAFETY_VIOLATION","shortDescription":{"text":"Thread Safety Violation"},"helpUri":"https://fbinfer.com/docs/next/all-issue-types#thread_safety_violation"}]}},"results":[{"message":{"text":"Resource dynamically allocated by constructor System.Threading.Mutex(), indirectly via call to `LiteDatabase(...)` on line 271 is not closed after the last access at line 276, column 13."},"level":"error","ruleId":"PULSE_RESOURCE_LEAK","codeFlows":[{"threadFlows":[{"locations":[{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/AutoId_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/AutoId_Tests.cs"},"region":{"startLine":271,"startColumn":20}},"message":{"text":"allocation part of the trace starts here"}}},{"nestingLevel":1,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/AutoId_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/AutoId_Tests.cs"},"region":{"startLine":271,"startColumn":20}},"message":{"text":"allocated by call to `new` (modelled)"}}},{"nestingLevel":1,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/AutoId_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/AutoId_Tests.cs"},"region":{"startLine":271,"startColumn":20}},"message":{"text":"when calling `LiteDatabase..ctor(String,BsonMapper)` here"}}},{"nestingLevel":2,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs"},"region":{"startLine":36,"startColumn":15}},"message":{"text":"parameter `this` of LiteDatabase..ctor(String,BsonMapper)"}}},{"nestingLevel":2,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs"},"region":{"startLine":36,"startColumn":15}},"message":{"text":"when calling `LiteDatabase..ctor(ConnectionString,BsonMapper)` here"}}},{"nestingLevel":3,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs"},"region":{"startLine":53,"startColumn":13}},"message":{"text":"when calling `ILiteEngine ConnectionString.CreateEngine()` here"}}},{"nestingLevel":4,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Structures/ConnectionString.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Structures/ConnectionString.cs"},"region":{"startLine":122,"startColumn":17}},"message":{"text":"allocated by call to `new` (modelled)"}}},{"nestingLevel":4,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Structures/ConnectionString.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Structures/ConnectionString.cs"},"region":{"startLine":122,"startColumn":17}},"message":{"text":"when calling `SharedEngine..ctor(EngineSettings)` here"}}},{"nestingLevel":5,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Shared/SharedEngine.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Shared/SharedEngine.cs"},"region":{"startLine":39,"startColumn":17}},"message":{"text":"allocated by constructor System.Threading.Mutex() here"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/AutoId_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/AutoId_Tests.cs"},"region":{"startLine":276,"startColumn":13}},"message":{"text":"memory becomes unreachable here"}}}]}]}],"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/AutoId_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/AutoId_Tests.cs"},"region":{"startLine":276,"startColumn":13}}}]},{"message":{"text":"Resource dynamically allocated by constructor System.Threading.Mutex(), indirectly via call to `LiteDatabase(...)` on line 16 is not closed after the last access at line 38, column 13."},"level":"error","ruleId":"PULSE_RESOURCE_LEAK","codeFlows":[{"threadFlows":[{"locations":[{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/Database_Pragmas_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/Database_Pragmas_Tests.cs"},"region":{"startLine":16,"startColumn":20}},"message":{"text":"allocation part of the trace starts here"}}},{"nestingLevel":1,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/Database_Pragmas_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/Database_Pragmas_Tests.cs"},"region":{"startLine":16,"startColumn":20}},"message":{"text":"allocated by call to `new` (modelled)"}}},{"nestingLevel":1,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/Database_Pragmas_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/Database_Pragmas_Tests.cs"},"region":{"startLine":16,"startColumn":20}},"message":{"text":"when calling `LiteDatabase..ctor(String,BsonMapper)` here"}}},{"nestingLevel":2,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs"},"region":{"startLine":36,"startColumn":15}},"message":{"text":"parameter `this` of LiteDatabase..ctor(String,BsonMapper)"}}},{"nestingLevel":2,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs"},"region":{"startLine":36,"startColumn":15}},"message":{"text":"when calling `LiteDatabase..ctor(ConnectionString,BsonMapper)` here"}}},{"nestingLevel":3,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs"},"region":{"startLine":53,"startColumn":13}},"message":{"text":"when calling `ILiteEngine ConnectionString.CreateEngine()` here"}}},{"nestingLevel":4,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Structures/ConnectionString.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Structures/ConnectionString.cs"},"region":{"startLine":122,"startColumn":17}},"message":{"text":"allocated by call to `new` (modelled)"}}},{"nestingLevel":4,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Structures/ConnectionString.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Structures/ConnectionString.cs"},"region":{"startLine":122,"startColumn":17}},"message":{"text":"when calling `SharedEngine..ctor(EngineSettings)` here"}}},{"nestingLevel":5,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Shared/SharedEngine.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Shared/SharedEngine.cs"},"region":{"startLine":39,"startColumn":17}},"message":{"text":"allocated by constructor System.Threading.Mutex() here"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/Database_Pragmas_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/Database_Pragmas_Tests.cs"},"region":{"startLine":38,"startColumn":13}},"message":{"text":"memory becomes unreachable here"}}}]}]}],"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/Database_Pragmas_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Database/Database_Pragmas_Tests.cs"},"region":{"startLine":38,"startColumn":13}}}]},{"message":{"text":"Resource dynamically allocated by constructor LiteDB.Engine.DiskReader(), indirectly via call to `DiskService.GetReader()` on line 54 is not closed after the last access at line 58, column 17."},"level":"error","ruleId":"PULSE_RESOURCE_LEAK","codeFlows":[{"threadFlows":[{"locations":[{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Internals/CacheAsync_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Internals/CacheAsync_Tests.cs"},"region":{"startLine":54,"startColumn":17}},"message":{"text":"allocation part of the trace starts here"}}},{"nestingLevel":1,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Internals/CacheAsync_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Internals/CacheAsync_Tests.cs"},"region":{"startLine":54,"startColumn":17}},"message":{"text":"when calling `DiskReader DiskService.GetReader()` here"}}},{"nestingLevel":2,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/DiskService.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/DiskService.cs"},"region":{"startLine":122,"startColumn":13}},"message":{"text":"allocated by constructor LiteDB.Engine.DiskReader() here"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Internals/CacheAsync_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Internals/CacheAsync_Tests.cs"},"region":{"startLine":58,"startColumn":17}},"message":{"text":"memory becomes unreachable here"}}}]}]}],"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Internals/CacheAsync_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Internals/CacheAsync_Tests.cs"},"region":{"startLine":58,"startColumn":17}}}]},{"message":{"text":"Resource dynamically allocated by constructor LiteDB.Engine.MemoryCache() on line 163 is not closed after the last access at line 167, column 29."},"level":"error","ruleId":"PULSE_RESOURCE_LEAK","codeFlows":[{"threadFlows":[{"locations":[{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Internals/Cache_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Internals/Cache_Tests.cs"},"region":{"startLine":163,"startColumn":13}},"message":{"text":"allocation part of the trace starts here"}}},{"nestingLevel":1,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Internals/Cache_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Internals/Cache_Tests.cs"},"region":{"startLine":163,"startColumn":13}},"message":{"text":"allocated by constructor LiteDB.Engine.MemoryCache() here"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Internals/Cache_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Internals/Cache_Tests.cs"},"region":{"startLine":167,"startColumn":29}},"message":{"text":"memory becomes unreachable here"}}}]}]}],"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Internals/Cache_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Internals/Cache_Tests.cs"},"region":{"startLine":167,"startColumn":29}}}]},{"message":{"text":"Resource dynamically allocated by constructor System.Threading.Mutex(), indirectly via call to `LiteDatabase(...)` on line 81 is not closed after the last access at line 110, column 9."},"level":"error","ruleId":"PULSE_RESOURCE_LEAK","codeFlows":[{"threadFlows":[{"locations":[{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Issues/Issue1860_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Issues/Issue1860_Tests.cs"},"region":{"startLine":81,"startColumn":13}},"message":{"text":"allocation part of the trace starts here"}}},{"nestingLevel":1,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Issues/Issue1860_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Issues/Issue1860_Tests.cs"},"region":{"startLine":81,"startColumn":13}},"message":{"text":"allocated by call to `new` (modelled)"}}},{"nestingLevel":1,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Issues/Issue1860_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Issues/Issue1860_Tests.cs"},"region":{"startLine":81,"startColumn":13}},"message":{"text":"when calling `LiteDatabase..ctor(String,BsonMapper)` here"}}},{"nestingLevel":2,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs"},"region":{"startLine":36,"startColumn":15}},"message":{"text":"parameter `this` of LiteDatabase..ctor(String,BsonMapper)"}}},{"nestingLevel":2,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs"},"region":{"startLine":36,"startColumn":15}},"message":{"text":"when calling `LiteDatabase..ctor(ConnectionString,BsonMapper)` here"}}},{"nestingLevel":3,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Database/LiteDatabase.cs"},"region":{"startLine":53,"startColumn":13}},"message":{"text":"when calling `ILiteEngine ConnectionString.CreateEngine()` here"}}},{"nestingLevel":4,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Structures/ConnectionString.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Structures/ConnectionString.cs"},"region":{"startLine":122,"startColumn":17}},"message":{"text":"allocated by call to `new` (modelled)"}}},{"nestingLevel":4,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Structures/ConnectionString.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Structures/ConnectionString.cs"},"region":{"startLine":122,"startColumn":17}},"message":{"text":"when calling `SharedEngine..ctor(EngineSettings)` here"}}},{"nestingLevel":5,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Shared/SharedEngine.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Shared/SharedEngine.cs"},"region":{"startLine":39,"startColumn":17}},"message":{"text":"allocated by constructor System.Threading.Mutex() here"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Issues/Issue1860_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Issues/Issue1860_Tests.cs"},"region":{"startLine":110,"startColumn":9}},"message":{"text":"memory becomes unreachable here"}}}]}]}],"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Issues/Issue1860_Tests.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB.Tests/Issues/Issue1860_Tests.cs"},"region":{"startLine":110,"startColumn":9}}}]},{"message":{"text":"Read/Write race. Non-private method `BsonMapper.Entity()` indirectly reads without synchronization from container `this.LiteDB.BsonMapper._entities` via call to `Dictionary`2<!0,!1>.TryGetValue(...)`. Potentially races with write in method `BsonMapper.GetEntityMapper(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not."},"level":"warning","ruleId":"THREAD_SAFETY_VIOLATION","codeFlows":[{"threadFlows":[{"locations":[{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs"},"region":{"startLine":168,"startColumn":13}},"message":{"text":"<Read trace>"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs"},"region":{"startLine":168,"startColumn":13}},"message":{"text":"call to EntityBuilder`1<!0>..ctor(BsonMapper,ITypeNameBinder)"}}},{"nestingLevel":1,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/EntityBuilder.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/EntityBuilder.cs"},"region":{"startLine":23,"startColumn":13}},"message":{"text":"call to EntityMapper BsonMapper.GetEntityMapper(Type)"}}},{"nestingLevel":2,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs"},"region":{"startLine":238,"startColumn":13}},"message":{"text":"Read of container `this.LiteDB.BsonMapper._entities` via call to `TryGetValue`"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs"},"region":{"startLine":244,"startColumn":25}},"message":{"text":"<Write trace>"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs"},"region":{"startLine":244,"startColumn":25}},"message":{"text":"Write to container `this.LiteDB.BsonMapper._entities` via call to `set_Item`"}}}]}]}],"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs"},"region":{"startLine":168,"startColumn":13}}}]},{"message":{"text":"Read/Write race. Non-private method `BsonMapper.GetEntityMapper(...)` reads without synchronization from container `this.LiteDB.BsonMapper._entities` via call to `Dictionary`2<!0,!1>.TryGetValue(...)`. Potentially races with write in method `BsonMapper.Entity()`.\n Reporting because this access may occur on a background thread."},"level":"warning","ruleId":"THREAD_SAFETY_VIOLATION","codeFlows":[{"threadFlows":[{"locations":[{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs"},"region":{"startLine":238,"startColumn":13}},"message":{"text":"<Read trace>"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs"},"region":{"startLine":238,"startColumn":13}},"message":{"text":"Read of container `this.LiteDB.BsonMapper._entities` via call to `TryGetValue`"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs"},"region":{"startLine":168,"startColumn":13}},"message":{"text":"<Write trace>"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs"},"region":{"startLine":168,"startColumn":13}},"message":{"text":"call to EntityBuilder`1<!0>..ctor(BsonMapper,ITypeNameBinder)"}}},{"nestingLevel":1,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/EntityBuilder.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/EntityBuilder.cs"},"region":{"startLine":23,"startColumn":13}},"message":{"text":"call to EntityMapper BsonMapper.GetEntityMapper(Type)"}}},{"nestingLevel":2,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs"},"region":{"startLine":244,"startColumn":25}},"message":{"text":"Write to container `this.LiteDB.BsonMapper._entities` via call to `set_Item`"}}}]}]}],"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/BsonMapper.cs"},"region":{"startLine":238,"startColumn":13}}}]},{"message":{"text":"Read/Write race. Non-private method `Reflection.CreateInstance(...)` reads without synchronization from container `LiteDB.Reflection.LiteDB.Reflection._cacheCtor` via call to `Dictionary`2<!0,!1>.TryGetValue(...)`. Potentially races with write in method `Reflection.CreateInstance(...)`.\n Reporting because this access may occur on a background thread."},"level":"warning","ruleId":"THREAD_SAFETY_VIOLATION","codeFlows":[{"threadFlows":[{"locations":[{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/Reflection/Reflection.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/Reflection/Reflection.cs"},"region":{"startLine":39,"startColumn":17}},"message":{"text":"<Read trace>"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/Reflection/Reflection.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/Reflection/Reflection.cs"},"region":{"startLine":39,"startColumn":17}},"message":{"text":"Read of container `LiteDB.Reflection.LiteDB.Reflection._cacheCtor` via call to `TryGetValue`"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/Reflection/Reflection.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/Reflection/Reflection.cs"},"region":{"startLine":62,"startColumn":25}},"message":{"text":"<Write trace>"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/Reflection/Reflection.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/Reflection/Reflection.cs"},"region":{"startLine":62,"startColumn":25}},"message":{"text":"Write to container `LiteDB.Reflection.LiteDB.Reflection._cacheCtor` via call to `Add`"}}}]}]}],"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/Reflection/Reflection.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Client/Mapper/Reflection/Reflection.cs"},"region":{"startLine":39,"startColumn":17}}}]},{"message":{"text":"Resource dynamically allocated by constructor System.IO.FileStream() on line 50 is not closed after the last access at line 55, column 13."},"level":"error","ruleId":"PULSE_RESOURCE_LEAK","codeFlows":[{"threadFlows":[{"locations":[{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/StreamFactory/FileStreamFactory.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/StreamFactory/FileStreamFactory.cs"},"region":{"startLine":50,"startColumn":13}},"message":{"text":"allocation part of the trace starts here"}}},{"nestingLevel":1,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/StreamFactory/FileStreamFactory.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/StreamFactory/FileStreamFactory.cs"},"region":{"startLine":50,"startColumn":13}},"message":{"text":"allocated by constructor System.IO.FileStream() here"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/StreamFactory/FileStreamFactory.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/StreamFactory/FileStreamFactory.cs"},"region":{"startLine":55,"startColumn":13}},"message":{"text":"memory becomes unreachable here"}}}]}]}],"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/StreamFactory/FileStreamFactory.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/StreamFactory/FileStreamFactory.cs"},"region":{"startLine":55,"startColumn":13}}}]},{"message":{"text":"Resource dynamically allocated by constructor LiteDB.Engine.ConcurrentStream() on line 41 is not closed after the last access at line 41, column 17."},"level":"error","ruleId":"PULSE_RESOURCE_LEAK","codeFlows":[{"threadFlows":[{"locations":[{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/StreamFactory/StreamFactory.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/StreamFactory/StreamFactory.cs"},"region":{"startLine":41,"startColumn":17}},"message":{"text":"allocation part of the trace starts here"}}},{"nestingLevel":1,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/StreamFactory/StreamFactory.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/StreamFactory/StreamFactory.cs"},"region":{"startLine":41,"startColumn":17}},"message":{"text":"allocated by constructor LiteDB.Engine.ConcurrentStream() here"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/StreamFactory/StreamFactory.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/StreamFactory/StreamFactory.cs"},"region":{"startLine":41,"startColumn":17}},"message":{"text":"memory becomes unreachable here"}}}]}]}],"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/StreamFactory/StreamFactory.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/StreamFactory/StreamFactory.cs"},"region":{"startLine":41,"startColumn":17}}}]},{"message":{"text":"Read/Write race. Non-private method `ConcurrentStream.get_Position()` reads without synchronization from `this.LiteDB.Engine.ConcurrentStream._position`. Potentially races with write in method `ConcurrentStream.Read(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not."},"level":"warning","ruleId":"THREAD_SAFETY_VIOLATION","codeFlows":[{"threadFlows":[{"locations":[{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs"},"region":{"startLine":32,"startColumn":48}},"message":{"text":"<Read trace>"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs"},"region":{"startLine":32,"startColumn":48}},"message":{"text":"access to `this.LiteDB.Engine.ConcurrentStream._position`"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs"},"region":{"startLine":62,"startColumn":17}},"message":{"text":"<Write trace>"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs"},"region":{"startLine":62,"startColumn":17}},"message":{"text":"access to `this.LiteDB.Engine.ConcurrentStream._position`"}}}]}]}],"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs"},"region":{"startLine":32,"startColumn":48}}}]},{"message":{"text":"Unprotected write. Non-private method `ConcurrentStream.set_Position(...)` writes to field `this.LiteDB.Engine.ConcurrentStream._position` outside of synchronization.\n Reporting because another access to the same memory occurs on a background thread, although this access may not."},"level":"warning","ruleId":"THREAD_SAFETY_VIOLATION","codeFlows":[{"threadFlows":[{"locations":[{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs"},"region":{"startLine":32,"startColumn":66}},"message":{"text":"<Write on unknown thread>"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs"},"region":{"startLine":32,"startColumn":66}},"message":{"text":"access to `this.LiteDB.Engine.ConcurrentStream._position`"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs"},"region":{"startLine":62,"startColumn":17}},"message":{"text":"<Write on background thread>"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs"},"region":{"startLine":62,"startColumn":17}},"message":{"text":"access to `this.LiteDB.Engine.ConcurrentStream._position`"}}}]}]}],"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Disk/Streams/ConcurrentStream.cs"},"region":{"startLine":32,"startColumn":66}}}]},{"message":{"text":"`last` could be null (from the call to `IndexService.GetNode(...)` on line 229) and is dereferenced."},"level":"error","ruleId":"NULLPTR_DEREFERENCE","codeFlows":[{"threadFlows":[{"locations":[{"nestingLevel":1,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/IndexService.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/IndexService.cs"},"region":{"startLine":229,"startColumn":13}},"message":{"text":"in call to `IndexNode IndexService.GetNode(PageAddress)`"}}},{"nestingLevel":2,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/IndexService.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/IndexService.cs"},"region":{"startLine":185,"startColumn":50}},"message":{"text":"is assigned to the null pointer"}}},{"nestingLevel":2,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/IndexService.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/IndexService.cs"},"region":{"startLine":185,"startColumn":50}},"message":{"text":"assigned"}}},{"nestingLevel":2,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/IndexService.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/IndexService.cs"},"region":{"startLine":190,"startColumn":9}},"message":{"text":"returned"}}},{"nestingLevel":1,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/IndexService.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/IndexService.cs"},"region":{"startLine":229,"startColumn":13}},"message":{"text":"return from call to `IndexNode IndexService.GetNode(PageAddress)`"}}},{"nestingLevel":1,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/IndexService.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/IndexService.cs"},"region":{"startLine":229,"startColumn":13}},"message":{"text":"assigned"}}},{"nestingLevel":1,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/IndexService.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/IndexService.cs"},"region":{"startLine":230,"startColumn":13}},"message":{"text":"invalid access occurs here"}}}]}]}],"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/IndexService.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/IndexService.cs"},"region":{"startLine":230,"startColumn":13}}}]},{"message":{"text":"Read/Write race. Non-private method `Snapshot.ToString()` reads without synchronization from container `this.LiteDB.Engine.Snapshot._localPages` via call to `Dictionary`2<!0,!1>.get_Count()`. Potentially races with write in method `Snapshot.NewPage()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not."},"level":"warning","ruleId":"THREAD_SAFETY_VIOLATION","codeFlows":[{"threadFlows":[{"locations":[{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/SnapShot.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/SnapShot.cs"},"region":{"startLine":632,"startColumn":13}},"message":{"text":"<Read trace>"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/SnapShot.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/SnapShot.cs"},"region":{"startLine":632,"startColumn":13}},"message":{"text":"Read of container `this.LiteDB.Engine.Snapshot._localPages` via call to `get_Count`"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/SnapShot.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/SnapShot.cs"},"region":{"startLine":363,"startColumn":17}},"message":{"text":"<Write trace>"}}},{"nestingLevel":0,"location":{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/SnapShot.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/SnapShot.cs"},"region":{"startLine":363,"startColumn":17}},"message":{"text":"Write to container `this.LiteDB.Engine.Snapshot._localPages` via call to `set_Item`"}}}]}]}],"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file:/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/SnapShot.cs","uriBaseId":"/infersharp/home/msedlyarskiy/benchmark/projects/litedb/LiteDB/Engine/Services/SnapShot.cs"},"region":{"startLine":632,"startColumn":13}}}]}]}]}
