{
  "version": 2,
  "warnings": [
    {
      "code": "V051",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "",
          "line": 1,
          "endLine": 1,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 0,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Some of the references in 'nunit.framework.tests(netcoreapp3.1)' project are missing or incorrect. The analysis results could be incomplete. Consider making the project fully compilable and building it before analysis.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3072",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/NUnitTestAssemblyRunner.cs",
          "line": 25,
          "endLine": 25,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 216764,
            "currentLine": 963825888,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/NUnitTestAssemblyRunner.cs",
          "line": 92,
          "endLine": 92,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "The 'NUnitTestAssemblyRunner' class containing IDisposable members does not itself implement IDisposable. Inspect: TopLevelWorkItem.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3149",
      "cwe": 476,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/NUnitTestAssemblyRunner.cs",
          "line": 168,
          "endLine": 168,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": -409767946,
            "nextLine": 125,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/TestSuite.cs",
          "line": 85,
          "endLine": 85,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Dereferencing the result of 'as' operator inside method can lead to NullReferenceException. Consider inspecting 1st argument.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Api/DefaultTestAssemblyBuilder.cs",
          "line": 240,
          "endLine": 240,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": -1808880730,
            "nextLine": 139,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/BinarySerializableConstraint.cs",
          "line": 31,
          "endLine": 31,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 2910697,
            "nextLine": -1850947416,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Checking value of 'actual' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/BinarySerializableConstraint.cs",
          "line": 45,
          "endLine": 45,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": 1326596485,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3087",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Attributes/TestCaseSourceAttribute.cs",
          "line": 122,
          "endLine": 122,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": -297713713,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Type of variable enumerated in 'foreach' is not guaranteed to be castable to the type of collection's elements.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ComparisonConstraint.cs",
          "line": 55,
          "endLine": 55,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1484700044,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Checking value of 'actual' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/CountZeroConstraint.cs",
          "line": 55,
          "endLine": 55,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -877113408,
            "nextLine": -2011687231,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Checking value of 'actual' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/EmptyConstraint.cs",
          "line": 30,
          "endLine": 30,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -178381609,
            "currentLine": 1600352675,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Checking value of 'actual' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ConstraintExpression.cs",
          "line": 447,
          "endLine": 447,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 216764,
            "currentLine": 655113986,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ConstraintExpression.cs",
          "line": 456,
          "endLine": 456,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "It is odd that the body of 'GreaterThanOrEqualTo' function is fully equivalent to the body of 'AtLeast' function (447, line 456).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ConstraintExpression.cs",
          "line": 482,
          "endLine": 482,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 216764,
            "currentLine": -966745141,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ConstraintExpression.cs",
          "line": 491,
          "endLine": 491,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "It is odd that the body of 'LessThanOrEqualTo' function is fully equivalent to the body of 'AtMost' function (482, line 491).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ConstraintExpression.cs",
          "line": 641,
          "endLine": 641,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 216764,
            "currentLine": 1421465114,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ConstraintExpression.cs",
          "line": 660,
          "endLine": 660,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "It is odd that the body of 'Member' function is fully equivalent to the body of 'Contains' function (641, line 660).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ConstraintExpression.cs",
          "line": 733,
          "endLine": 733,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 216764,
            "currentLine": -1297050697,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ConstraintExpression.cs",
          "line": 742,
          "endLine": 742,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "It is odd that the body of 'StartWith' function is fully equivalent to the body of 'StartsWith' function (733, line 742).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ConstraintExpression.cs",
          "line": 755,
          "endLine": 755,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 216764,
            "currentLine": -1421216903,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ConstraintExpression.cs",
          "line": 764,
          "endLine": 764,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "It is odd that the body of 'EndWith' function is fully equivalent to the body of 'EndsWith' function (755, line 764).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ConstraintExpression.cs",
          "line": 777,
          "endLine": 777,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 216764,
            "currentLine": 353558360,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ConstraintExpression.cs",
          "line": 795,
          "endLine": 795,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "It is odd that the body of 'Match' function is fully equivalent to the body of 'Matches' function (777, line 795).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ConstraintExpression.cs",
          "line": 786,
          "endLine": 786,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 216764,
            "currentLine": -1566381924,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ConstraintExpression.cs",
          "line": 804,
          "endLine": 804,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "It is odd that the body of 'Match' function is fully equivalent to the body of 'Matches' function (786, line 804).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/EqualConstraint.cs",
          "line": 402,
          "endLine": 402,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 362601,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Checking value of 'arg' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ExceptionTypeConstraint.cs",
          "line": 29,
          "endLine": 29,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 2071015365,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Checking value of 'actual' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
          "line": 274,
          "endLine": 274,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": 2244993,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/DelayedConstraint.cs",
          "line": 314,
          "endLine": 314,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": 2244993,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/FileOrDirectoryExistsConstraint.cs",
          "line": 85,
          "endLine": 85,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 2910697,
            "nextLine": -24124226,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Checking value of 'actual' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3024",
      "cwe": 682,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/FloatingPointNumerics.cs",
          "line": 117,
          "endLine": 117,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -1926675411,
            "currentLine": 1464137,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An odd precise comparison: left == right. Consider using a comparison with defined precision: Math.Abs(A - B) < Epsilon.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3024",
      "cwe": 682,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/FloatingPointNumerics.cs",
          "line": 176,
          "endLine": 176,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -1926675411,
            "currentLine": 1464137,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An odd precise comparison: left == right. Consider using a comparison with defined precision: Math.Abs(A - B) < Epsilon.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/NullConstraint.cs",
          "line": 25,
          "endLine": 25,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -1961563818,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Checking value of 'actual' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3161",
      "cwe": 686,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/SameAsConstraint.cs",
          "line": 35,
          "endLine": 35,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -2024829229,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Comparing variables with 'ReferenceEquals' is incorrect because 'actual' will be boxed if it is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/RangeConstraint.cs",
          "line": 43,
          "endLine": 43,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 298115776,
            "nextLine": 1321994961,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Checking value of 'actual' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3080",
      "cwe": 476,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ThrowsConstraint.cs",
          "line": 52,
          "endLine": 52,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 2314628,
            "currentLine": 74068192,
            "nextLine": -804432085,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/ThrowsConstraint.cs",
          "line": 81,
          "endLine": 81,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Possible null dereference inside method. Consider inspecting the 3rd argument.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/TypeConstraint.cs",
          "line": 50,
          "endLine": 50,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 2071015365,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Checking value of 'actual' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/XmlSerializableConstraint.cs",
          "line": 29,
          "endLine": 29,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 2910697,
            "nextLine": -1850947416,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Checking value of 'actual' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/XmlSerializableConstraint.cs",
          "line": 46,
          "endLine": 46,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": 611232131,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/XmlSerializableConstraint.cs",
          "line": 50,
          "endLine": 50,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": 1189233059,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3024",
      "cwe": 682,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
          "line": 171,
          "endLine": 171,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -1981511822,
            "currentLine": 5875841,
            "nextLine": -927242933,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An odd precise comparison: expected == 0.0. Consider using a comparison with defined precision: Math.Abs(A - B) < Epsilon.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3024",
      "cwe": 682,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Constraints/Numerics.cs",
          "line": 216,
          "endLine": 216,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -1981511822,
            "currentLine": 11751861,
            "nextLine": -927242933,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An odd precise comparison: expected == 0.0f. Consider using a comparison with defined precision: Math.Abs(A - B) < Epsilon.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3087",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NamespaceTreeBuilder.cs",
          "line": 62,
          "endLine": 62,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -1387555185,
            "nextLine": 440125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Type of variable enumerated in 'foreach' is not guaranteed to be castable to the type of collection's elements.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3087",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/NamespaceTreeBuilder.cs",
          "line": 132,
          "endLine": 132,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1841396035,
            "currentLine": 1874233405,
            "nextLine": 1041075656,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Type of variable enumerated in 'foreach' is not guaranteed to be castable to the type of collection's elements.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3051",
      "cwe": 704,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
          "line": 190,
          "endLine": 190,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 22642332,
            "currentLine": 916609,
            "nextLine": 859,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An excessive type cast. The object is already of the 'TNode' type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3057",
      "cwe": 628,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Interfaces/TNode.cs",
          "line": 397,
          "endLine": 397,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 1802177237,
            "nextLine": -1868893941,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "The 'Substring' function could receive the '-1' value while non-negative value is expected. Inspect the second argument.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ConstraintUtils.cs",
          "line": 23,
          "endLine": 23,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -1379522344,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Checking value of 'result' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3072",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/TestWorker.cs",
          "line": 13,
          "endLine": 13,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 216764,
            "currentLine": 95511316,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/TestWorker.cs",
          "line": 83,
          "endLine": 83,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "The 'TestWorker' class containing IDisposable members does not itself implement IDisposable. Inspect: _currentWorkItem.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/TestWorker.cs",
          "line": 140,
          "endLine": 140,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": -1808880730,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3083",
      "cwe": 367,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/TestWorker.cs",
          "line": 108,
          "endLine": 108,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -1245641330,
            "currentLine": 1514757718,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Unsafe invocation of event 'Busy', NullReferenceException is possible. Consider assigning event to a local variable before invoking it.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3083",
      "cwe": 367,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/TestWorker.cs",
          "line": 117,
          "endLine": 117,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 220580735,
            "currentLine": 1682529878,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Unsafe invocation of event 'Idle', NullReferenceException is possible. Consider assigning event to a local variable before invoking it.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3080",
      "cwe": 476,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/ParallelWorkItemDispatcher.cs",
          "line": 156,
          "endLine": 156,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1361477342,
            "currentLine": 707305,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Possible null dereference. Consider inspecting 'shift'.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3043",
      "cwe": 483,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Execution/SimpleWorkItem.cs",
          "line": 92,
          "endLine": 92,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -2051090015,
            "currentLine": 781080939,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "The code's operational logic does not correspond with its formatting. The statement is indented to the right, but it is always executed. It is possible that curly brackets are missing.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3164",
      "cwe": 544,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/InvalidPlatformException.cs",
          "line": 13,
          "endLine": 13,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 795687,
            "currentLine": -1956744586,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Exception classes should be publicly accessible.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/OSPlatform.cs",
          "line": 126,
          "endLine": 126,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": 2244993,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/OSPlatform.cs",
          "line": 181,
          "endLine": 181,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": 2244993,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3130",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/OSPlatform.cs",
          "line": 396,
          "endLine": 396,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 216764,
            "currentLine": -446256515,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Priority of the '&&' operator is higher than that of the '||' operator. Possible missing parentheses.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3024",
      "cwe": 682,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Randomizer.cs",
          "line": 427,
          "endLine": 427,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 181705,
            "nextLine": 44235,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An odd precise comparison: max == min. Consider using a comparison with defined precision: Math.Abs(A - B) < Epsilon.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3002",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Results/TestSuiteResult.cs",
          "line": 208,
          "endLine": 208,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1184469245,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "The switch statement does not cover all values of the 'TestStatus' enum: Inconclusive.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3002",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/SingleThreadedSynchronizationContext.cs",
          "line": 111,
          "endLine": 111,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1465707,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "The switch statement does not cover all values of the 'Status' enum: NotStarted.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3080",
      "cwe": 476,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestFilter.cs",
          "line": 128,
          "endLine": 128,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 6943,
            "currentLine": 1089007737,
            "nextLine": 1718893,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestFilter.cs",
          "line": 139,
          "endLine": 139,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Possible null dereference inside method at 'node.Attributes'. Consider inspecting the 1st argument: topNode.FirstChild.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3080",
      "cwe": 476,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestFilter.cs",
          "line": 151,
          "endLine": 151,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 34742,
            "currentLine": -1135696485,
            "nextLine": 0,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestFilter.cs",
          "line": 139,
          "endLine": 139,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Possible null dereference inside method at 'node.Attributes'. Consider inspecting the 1st argument: node.FirstChild.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3052",
      "cwe": 390,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
          "line": 357,
          "endLine": 357,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": -977074332,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
          "line": 362,
          "endLine": 362,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "The original exception object 'ex' was swallowed. Stack of original exception could be lost.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3052",
      "cwe": 390,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
          "line": 372,
          "endLine": 372,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": -977074332,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Reflect.cs",
          "line": 377,
          "endLine": 377,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "The original exception object 'ex' was swallowed. Stack of original exception could be lost.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3072",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Results/TestResult.cs",
          "line": 22,
          "endLine": 22,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 216764,
            "currentLine": -1593265845,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Results/TestResult.cs",
          "line": 277,
          "endLine": 277,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "The 'TestResult' class containing IDisposable members does not itself implement IDisposable. Inspect: OutWriter.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3090",
      "cwe": 833,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Results/TestResult.cs",
          "line": 277,
          "endLine": 277,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 216764,
            "currentLine": -202779659,
            "nextLine": 0,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Results/TestResult.cs",
          "line": 286,
          "endLine": 286,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Unsafe locking on public member 'OutWriter' in class 'TestResult'.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
          "line": 45,
          "endLine": 45,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": 1094,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3002",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
          "line": 147,
          "endLine": 147,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 20893096,
            "currentLine": 1464543,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "The switch statement does not cover all values of the 'RuntimeType' enum: SSCLI, MonoTouch.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/RuntimeFramework.cs",
          "line": 357,
          "endLine": 357,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": -1984567665,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/ThreadUtility.cs",
          "line": 232,
          "endLine": 232,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": -518744704,
            "nextLine": 139,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3087",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/TestSuite.cs",
          "line": 125,
          "endLine": 125,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 580183895,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Type of variable enumerated in 'foreach' is not guaranteed to be castable to the type of collection's elements.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3087",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/TestSuite.cs",
          "line": 191,
          "endLine": 191,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 580183895,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Type of variable enumerated in 'foreach' is not guaranteed to be castable to the type of collection's elements.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3087",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Tests/TestSuite.cs",
          "line": 261,
          "endLine": 261,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 370371,
            "currentLine": 1385985363,
            "nextLine": 500645143,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Type of variable enumerated in 'foreach' is not guaranteed to be castable to the type of collection's elements.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Is.cs",
          "line": 181,
          "endLine": 181,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 216764,
            "currentLine": 655290186,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Is.cs",
          "line": 190,
          "endLine": 190,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "It is odd that the body of 'GreaterThanOrEqualTo' function is fully equivalent to the body of 'AtLeast' function (181, line 190).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Is.cs",
          "line": 216,
          "endLine": 216,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 216764,
            "currentLine": -429873014,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Is.cs",
          "line": 225,
          "endLine": 225,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "It is odd that the body of 'LessThanOrEqualTo' function is fully equivalent to the body of 'AtMost' function (216, line 225).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3024",
      "cwe": 682,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
          "line": 252,
          "endLine": 252,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 789063847,
            "currentLine": 931431685,
            "nextLine": -1943074269,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An odd precise comparison: dbl == double.MaxValue. Consider using a comparison with defined precision: Math.Abs(A - B) < Epsilon.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3024",
      "cwe": 682,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
          "line": 254,
          "endLine": 254,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -1943074269,
            "currentLine": 931431557,
            "nextLine": -1943074525,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An odd precise comparison: dbl == double.MinValue. Consider using a comparison with defined precision: Math.Abs(A - B) < Epsilon.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3024",
      "cwe": 682,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
          "line": 271,
          "endLine": 271,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 338700397,
            "currentLine": 1184864519,
            "nextLine": 1175728675,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An odd precise comparison: f == float.MaxValue. Consider using a comparison with defined precision: Math.Abs(A - B) < Epsilon.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3024",
      "cwe": 682,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/TestNameGenerator.cs",
          "line": 273,
          "endLine": 273,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1175728675,
            "currentLine": 1184864391,
            "nextLine": 1175728419,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "An odd precise comparison: f == float.MinValue. Consider using a comparison with defined precision: Math.Abs(A - B) < Epsilon.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3130",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/nunitlite/ColorConsole.cs",
          "line": 34,
          "endLine": 34,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 1985207977,
            "nextLine": -1335402837,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunitlite(netstandard2.0)"
      ],
      "message": "Priority of the '&&' operator is higher than that of the '||' operator. Possible missing parentheses.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3139",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/nunitlite/ColorConsole.cs",
          "line": 96,
          "endLine": 96,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 291671600,
            "currentLine": 364490647,
            "nextLine": 291669348,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/nunitlite/ColorConsole.cs",
          "line": 100,
          "endLine": 100,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunitlite(netstandard2.0)"
      ],
      "message": "Two or more case-branches perform the same actions.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3080",
      "cwe": 476,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/PairwiseStrategy.cs",
          "line": 308,
          "endLine": 308,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 696235529,
            "nextLine": 0,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/framework/Internal/Builders/PairwiseStrategy.cs",
          "line": 540,
          "endLine": 540,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework(netstandard2.0)"
      ],
      "message": "Possible null dereference inside method at 'testCase.IsTupleCovered'. Consider inspecting the 1st argument: testCase.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3063",
      "cwe": 571,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/nunitlite/TestNameParser.cs",
          "line": 26,
          "endLine": 26,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 853510621,
            "currentLine": -427839415,
            "nextLine": 1236805,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunitlite(netstandard2.0)"
      ],
      "message": "A part of conditional expression is always true if it is evaluated: name != null.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/slow-tests/SlowTests.cs",
          "line": 14,
          "endLine": 14,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3185,
            "currentLine": -1965800853,
            "nextLine": 3185,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/slow-tests/SlowTests.cs",
          "line": 16,
          "endLine": 16,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "slow-nunit-tests(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'Test1' function is fully equivalent to the body of 'Test2' function (14, line 16).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/slow-tests/SlowTests.cs",
          "line": 24,
          "endLine": 24,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3185,
            "currentLine": -1965800853,
            "nextLine": 3185,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/slow-tests/SlowTests.cs",
          "line": 26,
          "endLine": 26,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "slow-nunit-tests(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'Test1' function is fully equivalent to the body of 'Test2' function (24, line 26).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/slow-tests/SlowTests.cs",
          "line": 34,
          "endLine": 34,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3185,
            "currentLine": -1965800853,
            "nextLine": 3185,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/slow-tests/SlowTests.cs",
          "line": 36,
          "endLine": 36,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "slow-nunit-tests(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'Test1' function is fully equivalent to the body of 'Test2' function (34, line 36).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/AssertCountFixture.cs",
          "line": 15,
          "endLine": 15,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 56726273,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/AssertCountFixture.cs",
          "line": 25,
          "endLine": 25,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 56726273,
            "nextLine": 210209302,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3002",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/nunitlite/TextUI.cs",
          "line": 527,
          "endLine": 527,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1735476842,
            "currentLine": -1300655893,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunitlite(netstandard2.0)"
      ],
      "message": "The switch statement does not cover all values of the 'TestStatus' enum: Inconclusive.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/AsyncRealFixture.cs",
          "line": 41,
          "endLine": 41,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3185,
            "currentLine": 775433417,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/AsyncRealFixture.cs",
          "line": 231,
          "endLine": 231,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'AsyncTaskError' function is fully equivalent to the body of 'AsyncTaskMultipleError' function (41, line 231).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/AsyncRealFixture.cs",
          "line": 49,
          "endLine": 49,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3185,
            "currentLine": 387716397,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/AsyncRealFixture.cs",
          "line": 92,
          "endLine": 92,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'AsyncTaskPass' function is fully equivalent to the body of 'TaskPass' function (49, line 92).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/AsyncRealFixture.cs",
          "line": 56,
          "endLine": 56,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3185,
            "currentLine": 1550866509,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/AsyncRealFixture.cs",
          "line": 99,
          "endLine": 99,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'AsyncTaskIgnore' function is fully equivalent to the body of 'TaskIgnore' function (56, line 99).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/AsyncRealFixture.cs",
          "line": 63,
          "endLine": 63,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3185,
            "currentLine": 471263994,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/AsyncRealFixture.cs",
          "line": 106,
          "endLine": 106,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'AsyncTaskInconclusive' function is fully equivalent to the body of 'TaskInconclusive' function (63, line 106).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/AssertMultipleData.cs",
          "line": 348,
          "endLine": 348,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 58348289,
            "nextLine": 413,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/LifeCycleFixture.cs",
          "line": 101,
          "endLine": 101,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3185,
            "currentLine": -630716977,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/LifeCycleFixture.cs",
          "line": 108,
          "endLine": 108,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'CountIsAlwaysOne' function is fully equivalent to the body of 'CountIsAlwaysOne_2' function (101, line 108).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/LifeCycleFixture.cs",
          "line": 200,
          "endLine": 200,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3185,
            "currentLine": 5982349,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/LifeCycleFixture.cs",
          "line": 206,
          "endLine": 206,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'Test1' function is fully equivalent to the body of 'Test2' function (200, line 206).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/LifeCycleFixture.cs",
          "line": 297,
          "endLine": 297,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3185,
            "currentLine": 191480333,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/LifeCycleFixture.cs",
          "line": 303,
          "endLine": 303,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'DummyTest1' function is fully equivalent to the body of 'DummyTest2' function (297, line 303).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/LifeCycleFixture.cs",
          "line": 325,
          "endLine": 325,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3185,
            "currentLine": 5982349,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/LifeCycleFixture.cs",
          "line": 331,
          "endLine": 331,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'Test1' function is fully equivalent to the body of 'Test2' function (325, line 331).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/LifeCycleFixture.cs",
          "line": 379,
          "endLine": 379,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3185,
            "currentLine": 5982349,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/LifeCycleFixture.cs",
          "line": 385,
          "endLine": 385,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'Test1' function is fully equivalent to the body of 'Test2' function (379, line 385).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/TestMethodSignatureFixture.cs",
          "line": 36,
          "endLine": 36,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 103161375,
            "currentLine": 475728843,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/TestMethodSignatureFixture.cs",
          "line": 44,
          "endLine": 44,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'TestMethodWithArgumentsProvided' function is fully equivalent to the body of 'StaticTestMethodWithArgumentsProvided' function.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3164",
      "cwe": 544,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/UnexpectedExceptionFixture.cs",
          "line": 66,
          "endLine": 66,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": -302297892,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Exception classes should be publicly accessible.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3158",
      "cwe": 682,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AdhocTestExecutionTests.cs",
          "line": 157,
          "endLine": 157,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 210471478,
            "currentLine": 210733630,
            "nextLine": 413,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "The '2 / 2' expression always evaluates to 1. Absolute values of both operands are equal.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3158",
      "cwe": 682,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AdhocTestExecutionTests.cs",
          "line": 169,
          "endLine": 169,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 210471478,
            "currentLine": 210733630,
            "nextLine": 394,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "The '2 / 2' expression always evaluates to 1. Absolute values of both operands are equal.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 19,
          "endLine": 19,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 62749953,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 570,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 25,
          "endLine": 25,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 3917505,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '!=' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 31,
          "endLine": 31,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -337037332,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 570,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 37,
          "endLine": 37,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -566806544,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '!=' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 43,
          "endLine": 43,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -191153108,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 570,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 49,
          "endLine": 49,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 463155766,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '!=' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 56,
          "endLine": 56,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 464249831,
            "currentLine": -681969118,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 570,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 63,
          "endLine": 63,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 464249831,
            "currentLine": 1801044553,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '!=' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 69,
          "endLine": 69,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1003951873,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 570,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 75,
          "endLine": 75,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 62699201,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '!=' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 81,
          "endLine": 81,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -1195821521,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 570,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 87,
          "endLine": 87,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -440977428,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '!=' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 93,
          "endLine": 93,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1553718661,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 570,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 99,
          "endLine": 99,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -610583509,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '!=' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 106,
          "endLine": 106,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 464249831,
            "currentLine": 2002418820,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 570,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 113,
          "endLine": 113,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 464249831,
            "currentLine": 1801058878,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '!=' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 297,
          "endLine": 297,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 62749957,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 == 5' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 571,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 303,
          "endLine": 303,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 3917509,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 != 5' is always true.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 309,
          "endLine": 309,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -168506409,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 == 5' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 571,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 315,
          "endLine": 315,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -283391015,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 != 5' is always true.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 321,
          "endLine": 321,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -337003584,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 == 5' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 571,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 327,
          "endLine": 327,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -566772772,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 != 5' is always true.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 334,
          "endLine": 334,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1728503994,
            "currentLine": -686163422,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 == 5' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 571,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 341,
          "endLine": 341,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1728503994,
            "currentLine": 1796850249,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 != 5' is always true.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 347,
          "endLine": 347,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1003951877,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 == 5' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 571,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 353,
          "endLine": 353,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 62699205,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 != 5' is always true.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 359,
          "endLine": 359,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1549585206,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 == 5' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 571,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 365,
          "endLine": 365,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -220476457,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 != 5' is always true.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 371,
          "endLine": 371,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -1195787773,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 == 5' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 571,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 377,
          "endLine": 377,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -440943680,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 != 5' is always true.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 384,
          "endLine": 384,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1728503994,
            "currentLine": 1998224516,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 == 5' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 571,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/testdata/WarningFixture.cs",
          "line": 391,
          "endLine": 391,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1728503994,
            "currentLine": 1796864574,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.testdata(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 != 5' is always true.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3002",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Api/TestAssemblyRunnerTests.cs",
          "line": 559,
          "endLine": 559,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 1068077234,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "The switch statement does not cover all values of the 'TestStatus' enum: Warning.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3099",
      "cwe": 684,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/nunitlite/Options.cs",
          "line": 490,
          "endLine": 490,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 270820219,
            "currentLine": 1553185246,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/nunitlite/Options.cs",
          "line": 487,
          "endLine": 487,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunitlite(netstandard2.0)"
      ],
      "message": "Not all the members of 'OptionException' type are serialized inside 'GetObjectData' method: OptionName.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3009",
      "cwe": 393,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/nunitlite/Options.cs",
          "line": 703,
          "endLine": 703,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 1334118945,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunitlite(netstandard2.0)"
      ],
      "message": "It's odd that this method always returns one and the same value of 'false'.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3123",
      "cwe": 783,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/nunitlite/Options.cs",
          "line": 948,
          "endLine": 948,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 837803480,
            "currentLine": 1327216820,
            "nextLine": 373319,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunitlite(netstandard2.0)"
      ],
      "message": "Perhaps the '?:' operator works in a different way than it was expected. Its priority is lower than priority of other operators in its condition.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3024",
      "cwe": 682,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssertEqualsTests.cs",
          "line": 184,
          "endLine": 184,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 58899575,
            "nextLine": -1424448135,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "An odd precise comparison: expected == actual. Consider using a comparison with defined precision: Math.Abs(A - B) < Epsilon.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3051",
      "cwe": 704,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssertThrowsTests.cs",
          "line": 86,
          "endLine": 86,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 861837146,
            "nextLine": 1097971683,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "An excessive type cast. The object is already of the 'ArgumentException' type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssertThatTests.cs",
          "line": 20,
          "endLine": 20,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 56726273,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssertThatTests.cs",
          "line": 26,
          "endLine": 26,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 211367914,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssertThatTests.cs",
          "line": 32,
          "endLine": 32,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1285242719,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssertThatTests.cs",
          "line": 39,
          "endLine": 39,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 464249831,
            "currentLine": 928643052,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssertThatTests.cs",
          "line": 262,
          "endLine": 262,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 574,
            "currentLine": 538572780,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '0 + 1' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 15,
          "endLine": 15,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 58348289,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 21,
          "endLine": 21,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -761710614,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 27,
          "endLine": 27,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1285242672,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 34,
          "endLine": 34,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 464249831,
            "currentLine": 928642640,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 40,
          "endLine": 40,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 933623553,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 46,
          "endLine": 46,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 800667212,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 52,
          "endLine": 52,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -593761202,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 59,
          "endLine": 59,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 464249831,
            "currentLine": 2002434986,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 145,
          "endLine": 145,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -1130541298,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 == 5' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 151,
          "endLine": 151,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1966596191,
            "nextLine": -1587565296,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 == 5' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 158,
          "endLine": 158,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -361785279,
            "nextLine": -1272187622,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 == 5' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 166,
          "endLine": 166,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1728503994,
            "currentLine": -672380383,
            "nextLine": -1272187622,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 == 5' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 173,
          "endLine": 173,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -908755026,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 == 5' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 179,
          "endLine": 179,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1432283274,
            "nextLine": -1587565296,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 == 5' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 186,
          "endLine": 186,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -1430418965,
            "nextLine": -1272187622,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 == 5' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 194,
          "endLine": 194,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1728503994,
            "currentLine": 1942953632,
            "nextLine": -1272187622,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Expression '2 + 2 == 5' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 296,
          "endLine": 296,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 574,
            "currentLine": 538572368,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '0 + 1' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/AssumeThatTests.cs",
          "line": 314,
          "endLine": 314,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 574,
            "currentLine": -370390495,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Expression '1 + 1 == 1' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3127",
      "cwe": 682,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/LessEqualFixture.cs",
          "line": 75,
          "endLine": 75,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 464044649,
            "currentLine": -365433673,
            "nextLine": 125,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/LessEqualFixture.cs",
          "line": 52,
          "endLine": 52,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Two similar code fragments were found. Perhaps, this is a typo and 'f2' variable should be used instead of 'f1'",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/AsyncExecutionApiAdapter.Assert-based.cs",
          "line": 21,
          "endLine": 21,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": 4499,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/AsyncExecutionApiAdapter.Assert-based.cs",
          "line": 51,
          "endLine": 51,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": 4499,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/WarningTests.cs",
          "line": 164,
          "endLine": 164,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -606988980,
            "currentLine": -1072039390,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '0 + 1' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Assertions/WarningTests.cs",
          "line": 183,
          "endLine": 183,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -606988980,
            "currentLine": -937821662,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Expression '1 + 1 == 1' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3087",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Attributes/PairwiseTests.cs",
          "line": 82,
          "endLine": 82,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 77511,
            "currentLine": -793587282,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Type of variable enumerated in 'foreach' is not guaranteed to be castable to the type of collection's elements.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3087",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Attributes/ParameterizedTestFixtureTests.cs",
          "line": 118,
          "endLine": 118,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -146506787,
            "currentLine": -1797132427,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Type of variable enumerated in 'foreach' is not guaranteed to be castable to the type of collection's elements.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3068",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/nunitlite/CommandLineOptions.cs",
          "line": 47,
          "endLine": 47,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 852773585,
            "nextLine": 734569,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunitlite(netstandard2.0)"
      ],
      "message": "Calling overrideable class member 'ConfigureOptions' from constructor is dangerous.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3085",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Attributes/ValueSourceTests.cs",
          "line": 132,
          "endLine": 132,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1076102575,
            "nextLine": 614532750,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Attributes/ValueSourceTests.cs",
          "line": 117,
          "endLine": 117,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "The name of 'Numerators' field in a nested type is ambiguous. The outer type contains static field with identical name.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3085",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Attributes/ValueSourceTests.cs",
          "line": 133,
          "endLine": 133,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1076102575,
            "currentLine": 614532750,
            "nextLine": -485147209,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Attributes/ValueSourceTests.cs",
          "line": 118,
          "endLine": 118,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "The name of 'Denominators' field in a nested type is ambiguous. The outer type contains static field with identical name.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3085",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Attributes/ValueSourceTests.cs",
          "line": 134,
          "endLine": 134,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 614532750,
            "currentLine": -485147209,
            "nextLine": 125,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Attributes/ValueSourceTests.cs",
          "line": 119,
          "endLine": 119,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "The name of 'Quotients' field in a nested type is ambiguous. The outer type contains static field with identical name.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3164",
      "cwe": 544,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/AwaitableReturnTypeTests.cs",
          "line": 195,
          "endLine": 195,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": -148566590,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Exception classes should be publicly accessible.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3072",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Constraints/AndConstraintTests.cs",
          "line": 9,
          "endLine": 9,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 402935,
            "currentLine": 1576327022,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Constraints/AndConstraintTests.cs",
          "line": 11,
          "endLine": 11,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "The 'AndConstraintTests' class containing IDisposable members does not itself implement IDisposable. Inspect: messageWriter.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Constraints/BasicConstraintTests.cs",
          "line": 37,
          "endLine": 37,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": -945048489,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2+2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Constraints/BasicConstraintTests.cs",
          "line": 61,
          "endLine": 61,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -248009526,
            "currentLine": -1987760862,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2+2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3072",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Constraints/CollectionEquivalentConstraintResultTests.cs",
          "line": 10,
          "endLine": 10,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 402935,
            "currentLine": 756178231,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Constraints/CollectionEquivalentConstraintResultTests.cs",
          "line": 15,
          "endLine": 15,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "The 'CollectionEquivalentConstraintResultTests' class containing IDisposable members does not itself implement IDisposable. Inspect: _writer.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3135",
      "cwe": 691,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Constraints/CollectionEqualsTests.cs",
          "line": 154,
          "endLine": 154,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -1281374097,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Constraints/CollectionEqualsTests.cs",
          "line": 152,
          "endLine": 152,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "The initial value of the index in the nested loop equals 'j = i'. Perhaps, 'j = i' + 1 should be used instead.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Attributes/TestCaseAttributeTests.cs",
          "line": 450,
          "endLine": 450,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1666013098,
            "currentLine": 366499,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Expression 'isNetCore' is always true.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Attributes/TestCaseAttributeTests.cs",
          "line": 489,
          "endLine": 489,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1666013098,
            "currentLine": 366499,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Expression 'isNetCore' is always true.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3026",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Constraints/NumericsTest.cs",
          "line": 151,
          "endLine": 151,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 87723645,
            "currentLine": 43449367,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "The constant 2.718281d is being utilized. The resulting value could be inaccurate. Consider using Math.E.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3126",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Constraints/NUnitEqualityComparerTests.cs",
          "line": 492,
          "endLine": 492,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 1826619415,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Type 'NeverEqualIEquatable' implementing IEquatable<T> interface does not override 'GetHashCode' method.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3126",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Constraints/NUnitEqualityComparerTests.cs",
          "line": 500,
          "endLine": 500,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": -1796060792,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Type 'IEquatableWithoutEqualsOverridden' implementing IEquatable<T> interface does not override 'GetHashCode' method.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3126",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Constraints/NUnitEqualityComparerTests.cs",
          "line": 530,
          "endLine": 530,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 1280342909,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Type 'EquatableObject' implementing IEquatable<T> interface does not override 'GetHashCode' method.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3126",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Constraints/NUnitEqualityComparerTests.cs",
          "line": 542,
          "endLine": 542,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": -915764876,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Type 'InheritingEquatableObject' implementing IEquatable<T> interface does not override 'GetHashCode' method.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3087",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/CultureSettingAndDetectionTests.cs",
          "line": 99,
          "endLine": 99,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -609996177,
            "currentLine": -1797132427,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Type of variable enumerated in 'foreach' is not guaranteed to be castable to the type of collection's elements.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3087",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/CultureSettingAndDetectionTests.cs",
          "line": 112,
          "endLine": 112,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -609996177,
            "currentLine": -1797132427,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Type of variable enumerated in 'foreach' is not guaranteed to be castable to the type of collection's elements.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3087",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/CultureSettingAndDetectionTests.cs",
          "line": 125,
          "endLine": 125,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -73206732,
            "currentLine": -1797132427,
            "nextLine": -1379799670,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Type of variable enumerated in 'foreach' is not guaranteed to be castable to the type of collection's elements.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3147",
      "cwe": 567,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/EventQueueTests.cs",
          "line": 129,
          "endLine": 129,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 464715893,
            "currentLine": 176747161,
            "nextLine": 492580009,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Non-atomic modification of volatile variable 'this.receivedEvents'",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3064",
      "cwe": 369,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/EventQueueTests.cs",
          "line": 212,
          "endLine": 212,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": -1740127971,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Potential division by zero. Consider inspecting denominator 'numberOfAsynchronousEvents'.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3072",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/EventListenerTextWriterTests.cs",
          "line": 12,
          "endLine": 12,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 402935,
            "currentLine": 1706585594,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/EventListenerTextWriterTests.cs",
          "line": 21,
          "endLine": 21,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "The 'EventListenerTextWriterTests' class containing IDisposable members does not itself implement IDisposable. Inspect: ListenerWriter.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/Filters/EmptyFilterTests.cs",
          "line": 28,
          "endLine": 28,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3185,
            "currentLine": 1832665220,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/Filters/EmptyFilterTests.cs",
          "line": 36,
          "endLine": 36,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'MatchesAnything' function is fully equivalent to the body of 'PassesAnything' function (28, line 36).",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3056",
      "cwe": 682,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/RandomizerTests.cs",
          "line": 738,
          "endLine": 738,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1787338015,
            "currentLine": 1787337887,
            "nextLine": -2033296336,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/RandomizerTests.cs",
          "line": 737,
          "endLine": 737,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Consider reviewing the correctness of 'testMethod1' item's usage.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3080",
      "cwe": 476,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/Results/TestResultFailureTests.cs",
          "line": 213,
          "endLine": 213,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 443415968,
            "currentLine": 1226841276,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Possible null dereference. Consider inspecting 'messageNode'.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3080",
      "cwe": 476,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/Results/TestResultFailureTests.cs",
          "line": 226,
          "endLine": 226,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -1661385370,
            "currentLine": 654724000,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Possible null dereference. Consider inspecting 'stacktraceNode'.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3055",
      "cwe": 481,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/PlatformDetectionTests.cs",
          "line": 53,
          "endLine": 53,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 69868800,
            "currentLine": 2141899354,
            "nextLine": 2337,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Suspicious assignment inside the condition expression of 'if' operator: shouldPass = platform.ToLower() == testPlatform.ToLower().",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3087",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/TestMethodSignatureTests.cs",
          "line": 157,
          "endLine": 157,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": -1523016353,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Type of variable enumerated in 'foreach' is not guaranteed to be castable to the type of collection's elements.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3072",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/TextMessageWriterTests.cs",
          "line": 10,
          "endLine": 10,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 402935,
            "currentLine": 374522724,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/TextMessageWriterTests.cs",
          "line": 14,
          "endLine": 14,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "The 'TextMessageWriterTests' class containing IDisposable members does not itself implement IDisposable. Inspect: writer.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3080",
      "cwe": 476,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/WorkItemQueueTests.cs",
          "line": 174,
          "endLine": 174,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -1979146781,
            "currentLine": -2026639462,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Possible null dereference of method return value. Consider inspecting: Dequeue().",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3087",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Internal/TestXmlTests.cs",
          "line": 166,
          "endLine": 166,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1243815238,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Type of variable enumerated in 'foreach' is not guaranteed to be castable to the type of collection's elements.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3001",
      "cwe": 571,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/Syntax/EqualityTests.cs",
          "line": 52,
          "endLine": 52,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 210209302,
            "currentLine": 56726273,
            "nextLine": 234164686,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "There are identical sub-expressions '2 + 2' to the left and to the right of the '==' operator.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3126",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/TestUtilities/Collections/SimpleEnumerable.cs",
          "line": 84,
          "endLine": 84,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 1342539698,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Type 'SimpleIEquatableObj' implementing IEquatable<T> interface does not override 'GetHashCode' method.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/TestUtilities/TestDirectory.cs",
          "line": 40,
          "endLine": 40,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": 4499,
            "nextLine": 967611,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3087",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/TestUtilities/TestFinder.cs",
          "line": 16,
          "endLine": 16,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1243815238,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Type of variable enumerated in 'foreach' is not guaranteed to be castable to the type of collection's elements.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3072",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/WorkItemTests.cs",
          "line": 10,
          "endLine": 10,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 764106463,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/tests/WorkItemTests.cs",
          "line": 12,
          "endLine": 12,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "The 'WorkItemTests' class containing IDisposable members does not itself implement IDisposable. Inspect: _workItem.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3032",
      "cwe": 835,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/TestBuilder.cs",
          "line": 172,
          "endLine": 172,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1725579412,
            "currentLine": 274304906,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "nunit.framework.tests(netcoreapp3.1)"
      ],
      "message": "Waiting on this expression is unreliable, as compiler may optimize some of the variables. Use volatile variable(s) or synchronization primitives to avoid this.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3072",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/nunitlite.tests/ExtendedTextWrapperTests.cs",
          "line": 11,
          "endLine": 11,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1462168403,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/nunitlite.tests/ExtendedTextWrapperTests.cs",
          "line": 14,
          "endLine": 14,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunitlite.tests(netcoreapp3.1)"
      ],
      "message": "The 'ExtendedTextWrapperTests' class containing IDisposable members does not itself implement IDisposable. Inspect: writer.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3125",
      "cwe": 476,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/nunitlite.tests/NUnit2XmlOutputWriterTests.cs",
          "line": 60,
          "endLine": 60,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -1743241417,
            "currentLine": 804632924,
            "nextLine": 1270375309,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/nunitlite.tests/NUnit2XmlOutputWriterTests.cs",
          "line": 59,
          "endLine": 59,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunitlite.tests(netcoreapp3.1)"
      ],
      "message": "The 'doc.FirstChild' object was used after it was verified against null. Check lines: 60, 59.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3125",
      "cwe": 476,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/nunitlite.tests/NUnit3XmlOutputWriterTests.cs",
          "line": 60,
          "endLine": 60,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -1743241417,
            "currentLine": 804632924,
            "nextLine": 1270375309,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/nunit/src/NUnitFramework/nunitlite.tests/NUnit3XmlOutputWriterTests.cs",
          "line": 59,
          "endLine": 59,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "nunitlite.tests(netcoreapp3.1)"
      ],
      "message": "The 'doc.FirstChild' object was used after it was verified against null. Check lines: 60, 59.",
      "favorite": false,
      "falseAlarm": false
    }
  ]
}