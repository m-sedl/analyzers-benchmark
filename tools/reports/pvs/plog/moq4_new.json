{
  "version": 2,
  "warnings": [
    {
      "code": "V051",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "",
          "line": 1,
          "endLine": 1,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 0,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Some of the references in 'Moq.Tests(netcoreapp3.1)' project are missing or incorrect. The analysis results could be incomplete. Consider making the project fully compilable and building it before analysis.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/ActionObserver.cs",
          "line": 136,
          "endLine": 136,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": 1094,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq(netstandard2.1)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3115",
      "cwe": 684,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/Interception/InterfaceProxy.cs",
          "line": 32,
          "endLine": 32,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1624494316,
            "currentLine": 1476514888,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq(netstandard2.1)"
      ],
      "message": "Passing 'null' to 'Equals' method should not result in 'NullReferenceException'.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3062",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/ExpressionExtensions.cs",
          "line": 208,
          "endLine": 208,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -1365949814,
            "currentLine": -1339463527,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq(netstandard2.1)"
      ],
      "message": "An object is used as an argument to its own method. Consider checking the first actual argument of the method.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3080",
      "cwe": 476,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/ExpressionExtensions.cs",
          "line": 271,
          "endLine": 271,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 86718,
            "currentLine": 4792,
            "nextLine": 38746,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/Guard.cs",
          "line": 85,
          "endLine": 85,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq(netstandard2.1)"
      ],
      "message": "Possible null dereference inside method at 'method.IsStatic'. Consider inspecting the 2nd argument: method.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3080",
      "cwe": 476,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/ExpressionExtensions.cs",
          "line": 330,
          "endLine": 330,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 86718,
            "currentLine": 4792,
            "nextLine": 1556783168,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/Guard.cs",
          "line": 85,
          "endLine": 85,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq(netstandard2.1)"
      ],
      "message": "Possible null dereference inside method at 'method.IsStatic'. Consider inspecting the 2nd argument: method.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/It.cs",
          "line": 62,
          "endLine": 62,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1533790473,
            "currentLine": -96293663,
            "nextLine": 430885005,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq(netstandard2.1)"
      ],
      "message": "Checking value of 'argument' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/It.cs",
          "line": 215,
          "endLine": 215,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1484649,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq(netstandard2.1)"
      ],
      "message": "Checking value of 'value' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3051",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/It.cs",
          "line": 62,
          "endLine": 62,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1533790473,
            "currentLine": -96293663,
            "nextLine": 430885005,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq(netstandard2.1)"
      ],
      "message": "An excessive type check. The object is already of the 'TValue' type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3051",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/It.cs",
          "line": 110,
          "endLine": 110,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1533790473,
            "currentLine": 803439363,
            "nextLine": -1695852404,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq(netstandard2.1)"
      ],
      "message": "An excessive type check. The object is already of the 'TValue' type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3099",
      "cwe": 684,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/MockException.cs",
          "line": 273,
          "endLine": 273,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 12894281,
            "currentLine": 1553185246,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/MockException.cs",
          "line": 238,
          "endLine": 238,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq(netstandard2.1)"
      ],
      "message": "Not all the members of 'MockException' type are serialized inside 'GetObjectData' method: Reasons.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/Pair.cs",
          "line": 38,
          "endLine": 38,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1186435620,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq(netstandard2.1)"
      ],
      "message": "Checking value of 'this.Item1' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/Pair.cs",
          "line": 38,
          "endLine": 38,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1186435620,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq(netstandard2.1)"
      ],
      "message": "Checking value of 'this.Item2' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3123",
      "cwe": 783,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/Pair.cs",
          "line": 38,
          "endLine": 38,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1186435620,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq(netstandard2.1)"
      ],
      "message": "Perhaps the '??' operator works in a different way than it was expected. Its priority is lower than priority of other operators in its left part.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/MethodCall.cs",
          "line": 92,
          "endLine": 92,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": 1094,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq(netstandard2.1)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3117",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/src/Moq/Mock`1.cs",
          "line": 105,
          "endLine": 105,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 216764,
            "currentLine": 1640630726,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq(netstandard2.1)"
      ],
      "message": "Constructor parameter 'skipInitialize' is not used.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3008",
      "cwe": 563,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ConditionalSetupFixture.cs",
          "line": 25,
          "endLine": 25,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 44373,
            "nextLine": -545605732,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ConditionalSetupFixture.cs",
          "line": 22,
          "endLine": 22,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The 'when' variable is assigned values twice successively. Perhaps this is a mistake. Check lines: 25, 22.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3008",
      "cwe": 563,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ConditionalSetupFixture.cs",
          "line": 53,
          "endLine": 53,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 44373,
            "nextLine": 1251661,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ConditionalSetupFixture.cs",
          "line": 46,
          "endLine": 46,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The 'when' variable is assigned values twice successively. Perhaps this is a mistake. Check lines: 53, 46.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3008",
      "cwe": 563,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ConditionalSetupFixture.cs",
          "line": 74,
          "endLine": 74,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 2121959986,
            "currentLine": 73429,
            "nextLine": -545607244,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ConditionalSetupFixture.cs",
          "line": 72,
          "endLine": 72,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The 'first' variable is assigned values twice successively. Perhaps this is a mistake. Check lines: 74, 72.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3008",
      "cwe": 563,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ConditionalSetupFixture.cs",
          "line": 102,
          "endLine": 102,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 44373,
            "nextLine": 1251661,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ConditionalSetupFixture.cs",
          "line": 95,
          "endLine": 95,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The 'when' variable is assigned values twice successively. Perhaps this is a mistake. Check lines: 102, 95.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3008",
      "cwe": 563,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ConditionalSetupFixture.cs",
          "line": 134,
          "endLine": 134,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 44373,
            "nextLine": 1251661,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ConditionalSetupFixture.cs",
          "line": 127,
          "endLine": 127,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The 'when' variable is assigned values twice successively. Perhaps this is a mistake. Check lines: 134, 127.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3008",
      "cwe": 563,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ConditionalSetupFixture.cs",
          "line": 155,
          "endLine": 155,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -271624915,
            "currentLine": 73429,
            "nextLine": 1005539933,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ConditionalSetupFixture.cs",
          "line": 153,
          "endLine": 153,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The 'first' variable is assigned values twice successively. Perhaps this is a mistake. Check lines: 155, 153.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3111",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/CustomMatcherFixture.cs",
          "line": 44,
          "endLine": 44,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1484649,
            "nextLine": 123,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Checking value of 'value' for null will always return false when generic type is instantiated with a value type.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3119",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/EventHandlerTypesMustMatchFixture.cs",
          "line": 63,
          "endLine": 63,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -475601849,
            "nextLine": 125,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/EventHandlerTypesMustMatchFixture.cs",
          "line": 59,
          "endLine": 59,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Calling virtual event 'LeftButtonClicked' may lead to unpredictable behavior. Consider implementing event accessors explicitly.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3119",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/EventHandlersFixture.cs",
          "line": 150,
          "endLine": 150,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 1231003567,
            "nextLine": 125,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/EventHandlersFixture.cs",
          "line": 148,
          "endLine": 148,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Calling virtual event 'Event' may lead to unpredictable behavior. Consider implementing event accessors explicitly.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3010",
      "cwe": 252,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/InvocationsFixture.cs",
          "line": 91,
          "endLine": 91,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 20626121,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The return value of function 'Next' is required to be utilized.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3010",
      "cwe": 252,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/InvocationsFixture.cs",
          "line": 106,
          "endLine": 106,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 41250913,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The return value of function 'Clone' is required to be utilized.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/Linq/UnsupportedQuerying.cs",
          "line": 18,
          "endLine": 18,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1516190322,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Expression 'x.NonVirtualValue == \"bar\"' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/Linq/UnsupportedQuerying.cs",
          "line": 24,
          "endLine": 24,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -375264697,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Expression 'x.VirtualBar.NonVirtualValue == \"bar\"' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/Linq/UnsupportedQuerying.cs",
          "line": 85,
          "endLine": 85,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -347478776,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Expression 'x.NonVirtual() == \"foo\"' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3022",
      "cwe": 570,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/Linq/UnsupportedQuerying.cs",
          "line": 91,
          "endLine": 91,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": -117105044,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Expression 'x.Virtual().NonVirtual() == \"foo\"' is always false.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3061",
      "cwe": 0,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/CallbacksFixture.cs",
          "line": 470,
          "endLine": 470,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 559431,
            "nextLine": 805,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/CallbacksFixture.cs",
          "line": 468,
          "endLine": 468,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Parameter 'arg2' is always rewritten in method body before being used.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/MockedEventsFixture.cs",
          "line": 35,
          "endLine": 35,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3377,
            "currentLine": 1892138807,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/MockedEventsFixture.cs",
          "line": 47,
          "endLine": 47,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'ShouldRaiseEventIfAttachedAfterUse' function is fully equivalent to the body of 'ShouldExpectAddGenericHandler' function.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/MockedEventsFixture.cs",
          "line": 69,
          "endLine": 69,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3377,
            "currentLine": 1883366339,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/MockedEventsFixture.cs",
          "line": 85,
          "endLine": 85,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'ShouldRaiseEventWhenExpectationMet' function is fully equivalent to the body of 'ShouldRaiseEventWithArgWhenExpectationMet' function.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3084",
      "cwe": 0,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/MockedEventsFixture.cs",
          "line": 677,
          "endLine": 677,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 710856772,
            "currentLine": 316270592,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Anonymous function is used to unsubscribe from 'Added' event. No handlers will be unsubscribed, as a separate delegate instance is created for each anonymous function declaration.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3084",
      "cwe": 0,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/MockedEventsFixture.cs",
          "line": 680,
          "endLine": 680,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 574,
            "currentLine": -444633721,
            "nextLine": -444633721,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Anonymous function is used to unsubscribe from 'Added' event. No handlers will be unsubscribed, as a separate delegate instance is created for each anonymous function declaration.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3084",
      "cwe": 0,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/MockedEventsFixture.cs",
          "line": 681,
          "endLine": 681,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -444633721,
            "currentLine": -444633721,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Anonymous function is used to unsubscribe from 'Added' event. No handlers will be unsubscribed, as a separate delegate instance is created for each anonymous function declaration.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3084",
      "cwe": 0,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/MockedEventsFixture.cs",
          "line": 697,
          "endLine": 697,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -447779449,
            "currentLine": -444633721,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Anonymous function is used to unsubscribe from 'Added' event. No handlers will be unsubscribed, as a separate delegate instance is created for each anonymous function declaration.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3084",
      "cwe": 0,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/MockedEventsFixture.cs",
          "line": 848,
          "endLine": 848,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 574,
            "currentLine": -354068631,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Anonymous function is used to unsubscribe from 'Added' event. No handlers will be unsubscribed, as a separate delegate instance is created for each anonymous function declaration.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3119",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/MockedEventsFixture.cs",
          "line": 870,
          "endLine": 870,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": -722916779,
            "nextLine": 0,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/MockedEventsFixture.cs",
          "line": 868,
          "endLine": 868,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Calling virtual event 'VirtualEvent' may lead to unpredictable behavior. Consider implementing event accessors explicitly.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3083",
      "cwe": 367,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/MockedEventsFixture.cs",
          "line": 907,
          "endLine": 907,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 115790730,
            "nextLine": 255197555,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Unsafe invocation of event 'Fired', NullReferenceException is possible. Consider assigning event to a local variable before invoking it.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/RecursiveMocksFixture.cs",
          "line": 348,
          "endLine": 348,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3377,
            "currentLine": 298429950,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/RecursiveMocksFixture.cs",
          "line": 358,
          "endLine": 358,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'When_set_up_by_DefaultValue_Mock_2' function is fully equivalent to the body of 'When_manually_set_up_2' function.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3013",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/RecursiveMocksFixture.cs",
          "line": 368,
          "endLine": 368,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 3377,
            "currentLine": 298429946,
            "nextLine": 123,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/RecursiveMocksFixture.cs",
          "line": 377,
          "endLine": 377,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "It is odd that the body of 'When_set_up_by_DefaultValue_Mock_3' function is fully equivalent to the body of 'When_manually_set_up_3' function.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3008",
      "cwe": 563,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/MockFixture.cs",
          "line": 649,
          "endLine": 649,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 41251593,
            "nextLine": 0,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/MockFixture.cs",
          "line": 644,
          "endLine": 644,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The 'mock.Object.Count' variable is assigned values twice successively. Perhaps this is a mistake. Check lines: 649, 644.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3008",
      "cwe": 563,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ReturnsFixture.cs",
          "line": 132,
          "endLine": 132,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 7407,
            "nextLine": 0,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ReturnsFixture.cs",
          "line": 128,
          "endLine": 128,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The 'a' variable is assigned values twice successively. Perhaps this is a mistake. Check lines: 132, 128.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3061",
      "cwe": 0,
      "level": 1,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ReturnsFixture.cs",
          "line": 333,
          "endLine": 333,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 559431,
            "nextLine": 181233365,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ReturnsFixture.cs",
          "line": 331,
          "endLine": 331,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Parameter 'arg2' is always rewritten in method body before being used.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3008",
      "cwe": 563,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/SequenceExtensionsFixture.cs",
          "line": 200,
          "endLine": 200,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": -1358600692,
            "currentLine": -1358564020,
            "nextLine": 1631502568,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/SequenceExtensionsFixture.cs",
          "line": 199,
          "endLine": 199,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The '_' variable is assigned values twice successively. Perhaps this is a mistake. Check lines: 200, 199.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3010",
      "cwe": 252,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ProtectedMockFixture.cs",
          "line": 641,
          "endLine": 641,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1330309448,
            "currentLine": 1461472342,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The return value of function 'GetProtectedValue' is required to be utilized.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3010",
      "cwe": 252,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ProtectedMockFixture.cs",
          "line": 688,
          "endLine": 688,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1330309448,
            "currentLine": 1461472342,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The return value of function 'GetProtectedValue' is required to be utilized.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3010",
      "cwe": 252,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ProtectedMockFixture.cs",
          "line": 697,
          "endLine": 697,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1330309448,
            "currentLine": 1461472342,
            "nextLine": 1461472342,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The return value of function 'GetProtectedValue' is required to be utilized.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3010",
      "cwe": 252,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ProtectedMockFixture.cs",
          "line": 698,
          "endLine": 698,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1461472342,
            "currentLine": 1461472342,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The return value of function 'GetProtectedValue' is required to be utilized.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3010",
      "cwe": 252,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ProtectedMockFixture.cs",
          "line": 747,
          "endLine": 747,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1330309448,
            "currentLine": 1461472342,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The return value of function 'GetProtectedValue' is required to be utilized.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3010",
      "cwe": 252,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ProtectedMockFixture.cs",
          "line": 763,
          "endLine": 763,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1330309448,
            "currentLine": 1461472342,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The return value of function 'GetProtectedValue' is required to be utilized.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3010",
      "cwe": 252,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ProtectedMockFixture.cs",
          "line": 772,
          "endLine": 772,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1330309448,
            "currentLine": 1461472342,
            "nextLine": 1461472342,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The return value of function 'GetProtectedValue' is required to be utilized.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3010",
      "cwe": 252,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/ProtectedMockFixture.cs",
          "line": 773,
          "endLine": 773,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1461472342,
            "currentLine": 1461472342,
            "nextLine": 0,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The return value of function 'GetProtectedValue' is required to be utilized.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3008",
      "cwe": 563,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/VerifyFixture.cs",
          "line": 708,
          "endLine": 708,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 0,
            "currentLine": 718364181,
            "nextLine": 0,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/VerifyFixture.cs",
          "line": 704,
          "endLine": 704,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The 'value' variable is assigned values twice successively. Perhaps this is a mistake. Check lines: 708, 704.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3008",
      "cwe": 563,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/VerifyFixture.cs",
          "line": 1345,
          "endLine": 1345,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 10770283,
            "currentLine": 689295637,
            "nextLine": 0,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/VerifyFixture.cs",
          "line": 1344,
          "endLine": 1344,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "The '_' variable is assigned values twice successively. Perhaps this is a mistake. Check lines: 1345, 1344.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3068",
      "cwe": 0,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/Regressions/IssueReportsFixture.cs",
          "line": 1815,
          "endLine": 1815,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 1744313,
            "currentLine": 216337,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Calling overrideable class member 'ExecuteMe' from constructor is dangerous.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3163",
      "cwe": 1069,
      "level": 3,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/Regressions/IssueReportsFixture.cs",
          "line": 2898,
          "endLine": 2898,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 125,
            "currentLine": 461964806,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "An empty exception handler. Silent suppression of exceptions may hide the presence of bugs or vulnerabilities.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3083",
      "cwe": 367,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/Regressions/IssueReportsFixture.cs",
          "line": 5201,
          "endLine": 5201,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1681044440,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Unsafe invocation of event 'Foo', NullReferenceException is possible. Consider assigning event to a local variable before invoking it.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3083",
      "cwe": 367,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/Regressions/IssueReportsFixture.cs",
          "line": 5205,
          "endLine": 5205,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1823650776,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Unsafe invocation of event 'Bar', NullReferenceException is possible. Consider assigning event to a local variable before invoking it.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3119",
      "cwe": 0,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/Regressions/IssueReportsFixture.cs",
          "line": 5237,
          "endLine": 5237,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1588769435,
            "nextLine": 125,
            "columns": 0
          }
        },
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/Regressions/IssueReportsFixture.cs",
          "line": 5231,
          "endLine": 5231,
          "column": 1,
          "endColumn": 2147483647
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Calling virtual event 'MyEvent' may lead to unpredictable behavior. Consider implementing event accessors explicitly.",
      "favorite": false,
      "falseAlarm": false
    },
    {
      "code": "V3083",
      "cwe": 367,
      "level": 2,
      "positions": [
        {
          "file": "/home/msedlyarskiy/benchmark/projects/moq4/tests/Moq.Tests/Regressions/IssueReportsFixture.cs",
          "line": 5237,
          "endLine": 5237,
          "column": 1,
          "endColumn": 2147483647,
          "navigation": {
            "previousLine": 123,
            "currentLine": 1588769435,
            "nextLine": 125,
            "columns": 0
          }
        }
      ],
      "projects": [
        "Moq.Tests(netcoreapp3.1)"
      ],
      "message": "Unsafe invocation of event 'MyEvent', NullReferenceException is possible. Consider assigning event to a local variable before invoking it.",
      "favorite": false,
      "falseAlarm": false
    }
  ]
}